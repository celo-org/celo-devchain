{
  "contractName": "GovernanceSlasher",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "test",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "group",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "GovernanceSlashL2Performed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "GovernanceSlashPerformed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "RegistrySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "slasherExecuter",
          "type": "address"
        }
      ],
      "name": "SlasherExecuterSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "SlashingApproved",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract IRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVersionNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_slasherExecuter",
          "type": "address"
        }
      ],
      "name": "setSlasherExecuter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "penalty",
          "type": "uint256"
        }
      ],
      "name": "approveSlashing",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "electionLessers",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "electionGreaters",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "electionIndices",
          "type": "uint256[]"
        }
      ],
      "name": "slash",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "group",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "electionLessers",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "electionGreaters",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "electionIndices",
          "type": "uint256[]"
        }
      ],
      "name": "slashL2",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getApprovedSlashing",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSlasherExecuter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.13+commit.5b0b510c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"test\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"group\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"GovernanceSlashL2Performed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"GovernanceSlashPerformed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"RegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"slasherExecuter\",\"type\":\"address\"}],\"name\":\"SlasherExecuterSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SlashingApproved\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"}],\"name\":\"approveSlashing\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getApprovedSlashing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSlasherExecuter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVersionNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract IRegistry\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"setRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_slasherExecuter\",\"type\":\"address\"}],\"name\":\"setSlasherExecuter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"electionLessers\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"electionGreaters\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"electionIndices\",\"type\":\"uint256[]\"}],\"name\":\"slash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"group\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"electionLessers\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"electionGreaters\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"electionIndices\",\"type\":\"uint256[]\"}],\"name\":\"slashL2\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approveSlashing(address,uint256)\":{\"details\":\"Only callable by governance.\",\"params\":{\"account\":\"Address that is punished.\",\"penalty\":\"Amount of penalty in wei.\"}},\"constructor\":{\"params\":{\"test\":\"Set to true to skip implementation initialization\"}},\"getApprovedSlashing(address)\":{\"params\":{\"account\":\"Address that is punished.\"},\"return\":\"Amount slashed.\"},\"getVersionNumber()\":{\"return\":\"Storage version of the contract.Major version of the contract.Minor version of the contract.Patch version of the contract.\"},\"initialize(address)\":{\"params\":{\"registryAddress\":\"The address of the registry core smart contract.\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setRegistry(address)\":{\"params\":{\"registryAddress\":\"The address of a registry contract for routing to other contracts.\"}},\"slash(address,address[],address[],uint256[])\":{\"params\":{\"account\":\"Account to slash\",\"electionGreaters\":\"Greater pointers for slashing locked election gold.\",\"electionIndices\":\"Indices of groups voted by slashed account.\",\"electionLessers\":\"Lesser pointers for slashing locked election gold.\"}},\"slashL2(address,address,address[],address[],uint256[])\":{\"params\":{\"account\":\"Account to slash\",\"electionGreaters\":\"Greater pointers for slashing locked election gold.\",\"electionIndices\":\"Indices of groups voted by slashed account.\",\"electionLessers\":\"Lesser pointers for slashing locked election gold.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"approveSlashing(address,uint256)\":{\"notice\":\"Sets account penalty.\"},\"constructor\":\"Sets initialized == true on implementation contracts\",\"getApprovedSlashing(address)\":{\"notice\":\"Gets account penalty.\"},\"getVersionNumber()\":{\"notice\":\"Returns the storage, major, minor, and patch version of the contract.\"},\"initialize(address)\":{\"notice\":\"Used in place of the constructor to allow the contract to be upgradable via proxy.\"},\"setRegistry(address)\":{\"notice\":\"Updates the address pointing to a Registry contract.\"},\"slash(address,address[],address[],uint256[])\":{\"notice\":\"Calls `LockedGold.slash` on `account` if `account` has an entry in `slashed`.\"},\"slashL2(address,address,address[],address[],uint256[])\":{\"notice\":\"Calls `LockedGold.slash` on `account` if `account` has an entry in `slashed`.\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/governance/GovernanceSlasher.sol\":\"GovernanceSlasher\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\ncontract Context {\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\n    // an instance of this contract, which should be used via inheritance.\\n    constructor () internal { }\\n    // solhint-disable-previous-line no-empty-blocks\\n\\n    function _msgSender() internal view returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\"},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\"},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\nimport \\\"../GSN/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(isOwner(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the caller is the current owner.\\n     */\\n    function isOwner() public view returns (bool) {\\n        return _msgSender() == _owner;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     */\\n    function _transferOwnership(address newOwner) internal {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\"},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\\n * the optional functions; to access them see {ERC20Detailed}.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\"},\"project:/contracts-0.8/common/IsL2Check.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.8.20;\\n\\n/**\\n * @title Based on predeploy returns whether this is L1 or L2.\\n */\\ncontract IsL2Check {\\n  address constant proxyAdminAddress = 0x4200000000000000000000000000000000000018;\\n\\n  /**\\n   * @notice Throws if called on L2.\\n   */\\n  modifier onlyL1() {\\n    allowOnlyL1();\\n    _;\\n  }\\n\\n  /**\\n   * @notice Throws if called on L1.\\n   */\\n  modifier onlyL2() {\\n    if (!isL2()) {\\n      revert(\\\"This method is not supported in L1.\\\");\\n    }\\n    _;\\n  }\\n\\n  /**\\n   * @notice Checks to see if current network is Celo L2.\\n   * @return Whether or not the current network is a Celo L2.\\n   */\\n  function isL2() internal view returns (bool) {\\n    uint32 size;\\n    address _addr = proxyAdminAddress;\\n    assembly {\\n      size := extcodesize(_addr)\\n    }\\n    return (size > 0);\\n  }\\n\\n  /**\\n   * @notice Used to restrict usage of the parent function to L1 execution.\\n   * @dev Reverts if called on a Celo L2 network.\\n   */\\n  function allowOnlyL1() internal view {\\n    if (isL2()) {\\n      revert(\\\"This method is no longer supported in L2.\\\");\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x4629a6f2c4364780f5a6a5e2ad5c3675c0a1d3bea35cfd4426eeaebca60cac37\"},\"project:/contracts/common/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\n/**\\n * @title Used with proxied contracts that have an `initialize` function.\\n * @notice Ensures the `initialize` function:\\n *         - gets called only once\\n *         - cannot be called on the logic contract.\\n */\\ncontract Initializable {\\n  bool public initialized;\\n\\n  /**\\n   * @notice Ensures the initializer function cannot be called more than once.\\n   */\\n  modifier initializer() {\\n    require(!initialized, \\\"contract already initialized\\\");\\n    initialized = true;\\n    _;\\n  }\\n\\n  /**\\n   * @notice By default, ensures that the `initialize` function cannot be called\\n   * on the logic contract.\\n   * @param testingDeployment When set to true, allows the `initialize` function\\n   * to be called, which is useful in testing when not setting up with a Proxy.\\n   */\\n  constructor(bool testingDeployment) public {\\n    if (!testingDeployment) {\\n      initialized = true;\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x8de2ab8706668982998c5a995bdc3d8ff20a1ec8519bf49cec9e464f62c57bb9\"},\"project:/contracts/common/UsingRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity ^0.5.13;\\n\\nimport \\\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\\";\\nimport \\\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\\\";\\n\\nimport \\\"./interfaces/IAccounts.sol\\\";\\nimport \\\"./interfaces/IEpochManager.sol\\\";\\nimport \\\"./interfaces/IFeeCurrencyWhitelist.sol\\\";\\nimport \\\"./interfaces/IFreezer.sol\\\";\\nimport \\\"./interfaces/IRegistry.sol\\\";\\nimport \\\"./interfaces/ICeloUnreleasedTreasury.sol\\\";\\n\\nimport \\\"../governance/interfaces/IElection.sol\\\";\\nimport \\\"../governance/interfaces/IEpochRewards.sol\\\";\\nimport \\\"../governance/interfaces/IGovernance.sol\\\";\\nimport \\\"../governance/interfaces/ILockedGold.sol\\\";\\nimport \\\"../governance/interfaces/ILockedCelo.sol\\\";\\nimport \\\"../governance/interfaces/IValidators.sol\\\";\\n\\nimport \\\"../identity/interfaces/IRandom.sol\\\";\\nimport \\\"../identity/interfaces/IAttestations.sol\\\";\\n\\nimport \\\"../../lib/mento-core/contracts/interfaces/IExchange.sol\\\";\\nimport \\\"../../lib/mento-core/contracts/interfaces/IReserve.sol\\\";\\nimport \\\"../../lib/mento-core/contracts/interfaces/IStableToken.sol\\\";\\nimport \\\"../stability/interfaces/ISortedOracles.sol\\\";\\n\\ncontract UsingRegistry is Ownable {\\n  // solhint-disable state-visibility\\n  bytes32 constant ACCOUNTS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Accounts\\\"));\\n  bytes32 constant ATTESTATIONS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Attestations\\\"));\\n  bytes32 constant DOWNTIME_SLASHER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"DowntimeSlasher\\\"));\\n  bytes32 constant DOUBLE_SIGNING_SLASHER_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"DoubleSigningSlasher\\\"));\\n  bytes32 constant ELECTION_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Election\\\"));\\n  bytes32 constant EXCHANGE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Exchange\\\"));\\n  bytes32 constant FEE_CURRENCY_WHITELIST_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"FeeCurrencyWhitelist\\\"));\\n  bytes32 constant FREEZER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Freezer\\\"));\\n  bytes32 constant GOLD_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"GoldToken\\\"));\\n  bytes32 constant GOVERNANCE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Governance\\\"));\\n  bytes32 constant GOVERNANCE_SLASHER_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"GovernanceSlasher\\\"));\\n  bytes32 constant LOCKED_GOLD_REGISTRY_ID = keccak256(abi.encodePacked(\\\"LockedGold\\\"));\\n  bytes32 constant RESERVE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Reserve\\\"));\\n  bytes32 constant RANDOM_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Random\\\"));\\n  bytes32 constant SORTED_ORACLES_REGISTRY_ID = keccak256(abi.encodePacked(\\\"SortedOracles\\\"));\\n  bytes32 constant STABLE_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"StableToken\\\"));\\n  bytes32 constant VALIDATORS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Validators\\\"));\\n\\n  bytes32 constant CELO_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"CeloToken\\\"));\\n  bytes32 constant LOCKED_CELO_REGISTRY_ID = keccak256(abi.encodePacked(\\\"LockedCelo\\\"));\\n  bytes32 constant CELO_UNRELEASED_TREASURY_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"CeloUnreleasedTreasury\\\"));\\n  bytes32 constant EPOCH_REWARDS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"EpochRewards\\\"));\\n  bytes32 constant EPOCH_MANAGER_ENABLER_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"EpochManagerEnabler\\\"));\\n  bytes32 constant EPOCH_MANAGER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"EpochManager\\\"));\\n  // solhint-enable state-visibility\\n\\n  IRegistry public registry;\\n\\n  event RegistrySet(address indexed registryAddress);\\n\\n  modifier onlyRegisteredContract(bytes32 identifierHash) {\\n    require(registry.getAddressForOrDie(identifierHash) == msg.sender, \\\"only registered contract\\\");\\n    _;\\n  }\\n\\n  modifier onlyRegisteredContracts(bytes32[] memory identifierHashes) {\\n    require(registry.isOneOf(identifierHashes, msg.sender), \\\"only registered contracts\\\");\\n    _;\\n  }\\n\\n  /**\\n   * @notice Updates the address pointing to a Registry contract.\\n   * @param registryAddress The address of a registry contract for routing to other contracts.\\n   */\\n  function setRegistry(address registryAddress) public onlyOwner {\\n    require(registryAddress != address(0), \\\"Cannot register the null address\\\");\\n    registry = IRegistry(registryAddress);\\n    emit RegistrySet(registryAddress);\\n  }\\n\\n  function getAccounts() internal view returns (IAccounts) {\\n    return IAccounts(registry.getAddressForOrDie(ACCOUNTS_REGISTRY_ID));\\n  }\\n\\n  function getAttestations() internal view returns (IAttestations) {\\n    return IAttestations(registry.getAddressForOrDie(ATTESTATIONS_REGISTRY_ID));\\n  }\\n\\n  function getElection() internal view returns (IElection) {\\n    return IElection(registry.getAddressForOrDie(ELECTION_REGISTRY_ID));\\n  }\\n\\n  function getExchange() internal view returns (IExchange) {\\n    return IExchange(registry.getAddressForOrDie(EXCHANGE_REGISTRY_ID));\\n  }\\n\\n  function getFeeCurrencyWhitelistRegistry() internal view returns (IFeeCurrencyWhitelist) {\\n    return IFeeCurrencyWhitelist(registry.getAddressForOrDie(FEE_CURRENCY_WHITELIST_REGISTRY_ID));\\n  }\\n\\n  function getFreezer() internal view returns (IFreezer) {\\n    return IFreezer(registry.getAddressForOrDie(FREEZER_REGISTRY_ID));\\n  }\\n\\n  function getGoldToken() internal view returns (IERC20) {\\n    return IERC20(registry.getAddressForOrDie(GOLD_TOKEN_REGISTRY_ID));\\n  }\\n  function getCeloToken() internal view returns (IERC20) {\\n    return IERC20(registry.getAddressForOrDie(CELO_TOKEN_REGISTRY_ID));\\n  }\\n\\n  function getGovernance() internal view returns (IGovernance) {\\n    return IGovernance(registry.getAddressForOrDie(GOVERNANCE_REGISTRY_ID));\\n  }\\n\\n  function getLockedGold() internal view returns (ILockedGold) {\\n    return ILockedGold(registry.getAddressForOrDie(LOCKED_GOLD_REGISTRY_ID));\\n  }\\n  function getLockedCelo() internal view returns (ILockedCelo) {\\n    return ILockedCelo(registry.getAddressForOrDie(LOCKED_CELO_REGISTRY_ID));\\n  }\\n\\n  function getRandom() internal view returns (IRandom) {\\n    return IRandom(registry.getAddressForOrDie(RANDOM_REGISTRY_ID));\\n  }\\n\\n  function getReserve() internal view returns (IReserve) {\\n    return IReserve(registry.getAddressForOrDie(RESERVE_REGISTRY_ID));\\n  }\\n\\n  function getSortedOracles() internal view returns (ISortedOracles) {\\n    return ISortedOracles(registry.getAddressForOrDie(SORTED_ORACLES_REGISTRY_ID));\\n  }\\n\\n  function getStableToken() internal view returns (IStableToken) {\\n    return IStableToken(registry.getAddressForOrDie(STABLE_TOKEN_REGISTRY_ID));\\n  }\\n\\n  function getValidators() internal view returns (IValidators) {\\n    return IValidators(registry.getAddressForOrDie(VALIDATORS_REGISTRY_ID));\\n  }\\n\\n  function getCeloUnreleasedTreasury() internal view returns (ICeloUnreleasedTreasury) {\\n    return\\n      ICeloUnreleasedTreasury(registry.getAddressForOrDie(CELO_UNRELEASED_TREASURY_REGISTRY_ID));\\n  }\\n\\n  function getEpochRewards() internal view returns (IEpochRewards) {\\n    return IEpochRewards(registry.getAddressForOrDie(EPOCH_REWARDS_REGISTRY_ID));\\n  }\\n\\n  function getEpochManager() internal view returns (IEpochManager) {\\n    return IEpochManager(registry.getAddressForOrDie(EPOCH_MANAGER_REGISTRY_ID));\\n  }\\n}\\n\",\"keccak256\":\"0x222b1e45ff35146f456cde2a44ab2990aaa303c8df848934a78f87af2776ccda\"},\"project:/contracts/common/interfaces/IAccounts.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IAccounts {\\n  function setAccountDataEncryptionKey(bytes calldata) external;\\n  function setMetadataURL(string calldata) external;\\n  function setName(string calldata) external;\\n  function setWalletAddress(address, uint8, bytes32, bytes32) external;\\n  function setAccount(string calldata, bytes calldata, address, uint8, bytes32, bytes32) external;\\n\\n  function authorizeVoteSigner(address, uint8, bytes32, bytes32) external;\\n  function authorizeValidatorSigner(address, uint8, bytes32, bytes32) external;\\n  function authorizeValidatorSignerWithPublicKey(\\n    address,\\n    uint8,\\n    bytes32,\\n    bytes32,\\n    bytes calldata\\n  ) external;\\n  function authorizeValidatorSignerWithKeys(\\n    address,\\n    uint8,\\n    bytes32,\\n    bytes32,\\n    bytes calldata,\\n    bytes calldata,\\n    bytes calldata\\n  ) external;\\n  function authorizeAttestationSigner(address, uint8, bytes32, bytes32) external;\\n  function setEip712DomainSeparator() external;\\n  function createAccount() external returns (bool);\\n\\n  function setPaymentDelegation(address, uint256) external;\\n\\n  function isAccount(address) external view returns (bool);\\n  function voteSignerToAccount(address) external view returns (address);\\n  function validatorSignerToAccount(address) external view returns (address);\\n  function attestationSignerToAccount(address) external view returns (address);\\n  function signerToAccount(address) external view returns (address);\\n  function getAttestationSigner(address) external view returns (address);\\n  function getValidatorSigner(address) external view returns (address);\\n  function getVoteSigner(address) external view returns (address);\\n  function hasAuthorizedVoteSigner(address) external view returns (bool);\\n  function hasAuthorizedValidatorSigner(address) external view returns (bool);\\n  function hasAuthorizedAttestationSigner(address) external view returns (bool);\\n\\n  function batchGetMetadataURL(\\n    address[] calldata\\n  ) external view returns (uint256[] memory, bytes memory);\\n\\n  function getDataEncryptionKey(address) external view returns (bytes memory);\\n  function getWalletAddress(address) external view returns (address);\\n  function getMetadataURL(address) external view returns (string memory);\\n\\n  function getName(address) external view returns (string memory);\\n\\n  function getPaymentDelegation(address) external view returns (address, uint256);\\n  function isSigner(address, address, bytes32) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xd316739cfeeed50b89bd45a4596abf71fac174f10c2a24dbf352a53b2bab2dc1\"},\"project:/contracts/common/interfaces/ICeloUnreleasedTreasury.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ICeloUnreleasedTreasury {\\n  /**\\n   * @notice Releases the Celo to the specified address.\\n   * @param to The address to release the amount to.\\n   * @param amount The amount to release.\\n   */\\n  function release(address to, uint256 amount) external;\\n\\n  function getRemainingBalanceToRelease() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x41f4cda8fd14ba24261d9e6ef9c2f62ac15432ac78107e74045d2a880b50df82\"},\"project:/contracts/common/interfaces/ICeloVersionedContract.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ICeloVersionedContract {\\n  /**\\n   * @notice Returns the storage, major, minor, and patch version of the contract.\\n   * @return Storage version of the contract.\\n   * @return Major version of the contract.\\n   * @return Minor version of the contract.\\n   * @return Patch version of the contract.\\n   */\\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256);\\n}\\n\",\"keccak256\":\"0x3ce622e646f0bd7cce110045bf6cde1fd84242e9c8ee73a27e56956f0b1fb128\"},\"project:/contracts/common/interfaces/IEpochManager.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IEpochManager {\\n  function initializeSystem(\\n    uint256 firstEpochNumber,\\n    uint256 firstEpochBlock,\\n    address[] calldata firstElected\\n  ) external;\\n  function startNextEpochProcess() external;\\n  function finishNextEpochProcess(\\n    address[] calldata groups,\\n    address[] calldata lessers,\\n    address[] calldata greaters\\n  ) external;\\n  function setToProcessGroups() external;\\n  function processGroup(address group, address lesser, address greater) external;\\n  function sendValidatorPayment(address) external;\\n  function getCurrentEpoch() external view returns (uint256, uint256, uint256, uint256);\\n  function getEpochByNumber(\\n    uint256 epochNumber\\n  ) external view returns (uint256, uint256, uint256, uint256);\\n  function getEpochByBlockNumber(\\n    uint256 blockNumber\\n  ) external view returns (uint256, uint256, uint256, uint256);\\n  function getEpochNumberOfBlock(uint256) external view returns (uint256);\\n  function getCurrentEpochNumber() external view returns (uint256);\\n  function numberOfElectedInCurrentSet() external view returns (uint256);\\n  function getElectedAccounts() external view returns (address[] memory);\\n  function getElectedAccountByIndex(uint256 index) external view returns (address);\\n  function getElectedSigners() external view returns (address[] memory);\\n  function getElectedSignerByIndex(uint256 index) external view returns (address);\\n  function epochDuration() external view returns (uint256);\\n  function firstKnownEpoch() external view returns (uint256);\\n  function getEpochProcessingState()\\n    external\\n    view\\n    returns (uint256, uint256, uint256, uint256, uint256);\\n  function systemAlreadyInitialized() external view returns (bool);\\n  function isBlocked() external view returns (bool);\\n  function isTimeForNextEpoch() external view returns (bool);\\n  function isOnEpochProcess() external view returns (bool);\\n  function getFirstBlockAtEpoch(uint256) external view returns (uint256);\\n  function getLastBlockAtEpoch(uint256) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xc019958b7b5281fbfcd3c31b49d6ab29192ab4138de175a404bf0c17cccf9350\"},\"project:/contracts/common/interfaces/IFeeCurrencyWhitelist.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IFeeCurrencyWhitelist {\\n  function initialize() external;\\n  function addToken(address) external;\\n  function getWhitelist() external view returns (address[] memory);\\n}\\n\",\"keccak256\":\"0xa732071c691bf1ba84774ac5301fa5b18e1ecf6ea6f6210ecac00f5130341621\"},\"project:/contracts/common/interfaces/IFreezer.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IFreezer {\\n  function freeze(address target) external;\\n  function unfreeze(address target) external;\\n  function isFrozen(address) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x31cee67b005413c61d6aa90d2899e6a37257cd4c026d8422249b397131a10755\"},\"project:/contracts/common/interfaces/IRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IRegistry {\\n  function setAddressFor(string calldata, address) external;\\n  function getAddressForOrDie(bytes32) external view returns (address);\\n  function getAddressFor(bytes32) external view returns (address);\\n  function getAddressForStringOrDie(string calldata identifier) external view returns (address);\\n  function getAddressForString(string calldata identifier) external view returns (address);\\n  function isOneOf(bytes32[] calldata, address) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x7737cbda6f3519bf6a4108e07b2c991a655e8731a4c040a3681e9629cfc4b52d\"},\"project:/contracts/governance/GovernanceSlasher.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\nimport \\\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\\";\\nimport \\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\\";\\n\\nimport \\\"../common/Initializable.sol\\\";\\nimport \\\"../common/UsingRegistry.sol\\\";\\nimport \\\"./interfaces/IValidators.sol\\\";\\nimport \\\"../../contracts-0.8/common/IsL2Check.sol\\\";\\nimport \\\"../common/interfaces/ICeloVersionedContract.sol\\\";\\n\\ncontract GovernanceSlasher is\\n  Ownable,\\n  Initializable,\\n  UsingRegistry,\\n  ICeloVersionedContract,\\n  IsL2Check\\n{\\n  using SafeMath for uint256;\\n  // Maps a slashed address to the amount to be slashed.\\n  // Note that there is no reward paid when slashing via governance.\\n  mapping(address => uint256) slashed;\\n  address internal slasherExecuter;\\n\\n  event SlashingApproved(address indexed account, uint256 amount);\\n  event GovernanceSlashPerformed(address indexed account, uint256 amount);\\n  event GovernanceSlashL2Performed(address indexed account, address indexed group, uint256 amount);\\n  event SlasherExecuterSet(address slasherExecuter);\\n\\n  modifier onlyAuthorizedToSlash() {\\n    require(\\n      msg.sender == owner() || slasherExecuter == msg.sender,\\n      \\\"Sender not authorized to slash\\\"\\n    );\\n    _;\\n  }\\n\\n  /**\\n   * @notice Sets initialized == true on implementation contracts\\n   * @param test Set to true to skip implementation initialization\\n   */\\n  constructor(bool test) public Initializable(test) {}\\n\\n  /**\\n   * @notice Used in place of the constructor to allow the contract to be upgradable via proxy.\\n   * @param registryAddress The address of the registry core smart contract.\\n   */\\n  function initialize(address registryAddress) external initializer {\\n    _transferOwnership(msg.sender);\\n    setRegistry(registryAddress);\\n  }\\n\\n  /**\\n   * @notice Returns the storage, major, minor, and patch version of the contract.\\n   * @return Storage version of the contract.\\n   * @return Major version of the contract.\\n   * @return Minor version of the contract.\\n   * @return Patch version of the contract.\\n   */\\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256) {\\n    return (1, 1, 1, 0);\\n  }\\n\\n  function setSlasherExecuter(address _slasherExecuter) external onlyOwner {\\n    slasherExecuter = _slasherExecuter;\\n    emit SlasherExecuterSet(_slasherExecuter);\\n  }\\n\\n  /**\\n   * @notice Sets account penalty.\\n   * @param account Address that is punished.\\n   * @param penalty Amount of penalty in wei.\\n   * @dev Only callable by governance.\\n   */\\n  function approveSlashing(address account, uint256 penalty) external onlyAuthorizedToSlash {\\n    slashed[account] = slashed[account].add(penalty);\\n    emit SlashingApproved(account, penalty);\\n  }\\n\\n  /**\\n   * @notice Calls `LockedGold.slash` on `account` if `account` has an entry in `slashed`.\\n   * @param account Account to slash\\n   * @param electionLessers Lesser pointers for slashing locked election gold.\\n   * @param electionGreaters Greater pointers for slashing locked election gold.\\n   * @param electionIndices Indices of groups voted by slashed account.\\n   */\\n  function slash(\\n    address account,\\n    address[] calldata electionLessers,\\n    address[] calldata electionGreaters,\\n    uint256[] calldata electionIndices\\n  ) external onlyL1 returns (bool) {\\n    uint256 penalty = slashed[account];\\n    require(penalty > 0, \\\"No penalty given by governance\\\");\\n    slashed[account] = 0;\\n    getLockedGold().slash(\\n      account,\\n      penalty,\\n      address(0),\\n      0,\\n      electionLessers,\\n      electionGreaters,\\n      electionIndices\\n    );\\n    emit GovernanceSlashPerformed(account, penalty);\\n    return true;\\n  }\\n\\n  /**\\n   * @notice Calls `LockedGold.slash` on `account` if `account` has an entry in `slashed`.\\n   * @param account Account to slash\\n   * @param electionLessers Lesser pointers for slashing locked election gold.\\n   * @param electionGreaters Greater pointers for slashing locked election gold.\\n   * @param electionIndices Indices of groups voted by slashed account.\\n   */\\n  function slashL2(\\n    address account,\\n    address group,\\n    address[] calldata electionLessers,\\n    address[] calldata electionGreaters,\\n    uint256[] calldata electionIndices\\n  ) external onlyL2 onlyAuthorizedToSlash returns (bool) {\\n    uint256 penalty = slashed[account];\\n    require(penalty > 0, \\\"No penalty given by governance\\\");\\n    slashed[account] = 0;\\n\\n    ILockedGold lockedGold = getLockedGold();\\n\\n    lockedGold.slash(\\n      account,\\n      penalty,\\n      address(0),\\n      0,\\n      electionLessers,\\n      electionGreaters,\\n      electionIndices\\n    );\\n\\n    if (group != address(0)) {\\n      lockedGold.slash(\\n        group,\\n        penalty,\\n        address(0),\\n        0,\\n        electionLessers,\\n        electionGreaters,\\n        electionIndices\\n      );\\n      IValidators validators = getValidators();\\n      validators.forceDeaffiliateIfValidator(account);\\n      validators.halveSlashingMultiplier(group);\\n    }\\n\\n    emit GovernanceSlashL2Performed(account, group, penalty);\\n    return true;\\n  }\\n\\n  /**\\n   * @notice Gets account penalty.\\n   * @param account Address that is punished.\\n   * @return Amount slashed.\\n   */\\n  function getApprovedSlashing(address account) external view returns (uint256) {\\n    return slashed[account];\\n  }\\n\\n  function getSlasherExecuter() external view returns (address) {\\n    return slasherExecuter;\\n  }\\n}\\n\",\"keccak256\":\"0x991ff9336adc960fd3b023d66b2c524e876498ae9d2822e2c553a7c6dab8e739\"},\"project:/contracts/governance/interfaces/IElection.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IElection {\\n  function vote(address, uint256, address, address) external returns (bool);\\n  function activate(address) external returns (bool);\\n  function revokeActive(address, uint256, address, address, uint256) external returns (bool);\\n  function revokeAllActive(address, address, address, uint256) external returns (bool);\\n  function revokePending(address, uint256, address, address, uint256) external returns (bool);\\n  function markGroupIneligible(address) external;\\n  function markGroupEligible(address, address, address) external;\\n  function allowedToVoteOverMaxNumberOfGroups(address) external returns (bool);\\n  function forceDecrementVotes(\\n    address,\\n    uint256,\\n    address[] calldata,\\n    address[] calldata,\\n    uint256[] calldata\\n  ) external returns (uint256);\\n  function setAllowedToVoteOverMaxNumberOfGroups(bool flag) external;\\n\\n  // only owner\\n  function setElectableValidators(uint256, uint256) external returns (bool);\\n  function setMaxNumGroupsVotedFor(uint256) external returns (bool);\\n  function setElectabilityThreshold(uint256) external returns (bool);\\n\\n  // only VM\\n  function distributeEpochRewards(address, uint256, address, address) external;\\n\\n  // view functions\\n  function electValidatorSigners() external view returns (address[] memory);\\n  function electValidatorAccounts() external view returns (address[] memory);\\n  function electNValidatorSigners(uint256, uint256) external view returns (address[] memory);\\n  function electNValidatorAccounts(uint256, uint256) external view returns (address[] memory);\\n  function getElectableValidators() external view returns (uint256, uint256);\\n  function getElectabilityThreshold() external view returns (uint256);\\n  function getNumVotesReceivable(address) external view returns (uint256);\\n  function getTotalVotes() external view returns (uint256);\\n  function getActiveVotes() external view returns (uint256);\\n  function getTotalVotesByAccount(address) external view returns (uint256);\\n  function getPendingVotesForGroupByAccount(address, address) external view returns (uint256);\\n  function getActiveVotesForGroupByAccount(address, address) external view returns (uint256);\\n  function getTotalVotesForGroupByAccount(address, address) external view returns (uint256);\\n  function getActiveVoteUnitsForGroupByAccount(address, address) external view returns (uint256);\\n  function getTotalVotesForGroup(address) external view returns (uint256);\\n  function getActiveVotesForGroup(address) external view returns (uint256);\\n  function getPendingVotesForGroup(address) external view returns (uint256);\\n  function getGroupEligibility(address) external view returns (bool);\\n  function getGroupEpochRewards(\\n    address,\\n    uint256,\\n    uint256[] calldata\\n  ) external view returns (uint256);\\n  function getGroupEpochRewardsBasedOnScore(\\n    address group,\\n    uint256 totalEpochRewards,\\n    uint256 groupScore\\n  ) external view returns (uint256);\\n  function getGroupsVotedForByAccount(address) external view returns (address[] memory);\\n  function getEligibleValidatorGroups() external view returns (address[] memory);\\n  function getTotalVotesForEligibleValidatorGroups()\\n    external\\n    view\\n    returns (address[] memory, uint256[] memory);\\n  function getCurrentValidatorSigners() external view returns (address[] memory);\\n  function canReceiveVotes(address, uint256) external view returns (bool);\\n  function hasActivatablePendingVotes(address, address) external view returns (bool);\\n  function validatorSignerAddressFromCurrentSet(uint256 index) external view returns (address);\\n  function numberValidatorsInCurrentSet() external view returns (uint256);\\n  function owner() external view returns (address);\\n}\\n\",\"keccak256\":\"0x598e1f22422d01cd2feccff34c5c276c388209058d7fab3d770e25fa8dec9e59\"},\"project:/contracts/governance/interfaces/IEpochRewards.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IEpochRewards {\\n  function updateTargetVotingYield() external;\\n  function isReserveLow() external view returns (bool);\\n  function calculateTargetEpochRewards() external view returns (uint256, uint256, uint256, uint256);\\n  function getTargetVotingYieldParameters() external view returns (uint256, uint256, uint256);\\n  function getRewardsMultiplierParameters() external view returns (uint256, uint256, uint256);\\n  function getCommunityRewardFraction() external view returns (uint256);\\n  function getCarbonOffsettingFraction() external view returns (uint256);\\n  function getTargetVotingGoldFraction() external view returns (uint256);\\n  function getRewardsMultiplier() external view returns (uint256);\\n  function carbonOffsettingPartner() external view returns (address);\\n}\\n\",\"keccak256\":\"0xfa534a0dc188ffd55595c6edb28b2e4ac9f036022a644b3a61e6a12097e14788\"},\"project:/contracts/governance/interfaces/IGovernance.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IGovernance {\\n  function removeVotesWhenRevokingDelegatedVotes(\\n    address account,\\n    uint256 maxAmountAllowed\\n  ) external;\\n  function votePartially(\\n    uint256 proposalId,\\n    uint256 index,\\n    uint256 yesVotes,\\n    uint256 noVotes,\\n    uint256 abstainVotes\\n  ) external returns (bool);\\n\\n  function setConstitution(address destination, bytes4 functionId, uint256 threshold) external;\\n\\n  function isVoting(address) external view returns (bool);\\n  function getAmountOfGoldUsedForVoting(address account) external view returns (uint256);\\n\\n  function getProposal(\\n    uint256 proposalId\\n  ) external view returns (address, uint256, uint256, uint256, string memory, uint256, bool);\\n\\n  function getReferendumStageDuration() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x8780295e0ecffc9870c59ed17fd4f50902117227157dd060db19d2ebbaaf3d2b\"},\"project:/contracts/governance/interfaces/ILockedCelo.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ILockedCelo {\\n  function lock() external payable;\\n  function incrementNonvotingAccountBalance(address, uint256) external;\\n  function decrementNonvotingAccountBalance(address, uint256) external;\\n\\n  function unlock(uint256) external;\\n  function relock(uint256, uint256) external;\\n  function withdraw(uint256) external;\\n  function slash(\\n    address account,\\n    uint256 penalty,\\n    address reporter,\\n    uint256 reward,\\n    address[] calldata lessers,\\n    address[] calldata greaters,\\n    uint256[] calldata indices\\n  ) external;\\n  function addSlasher(string calldata slasherIdentifier) external;\\n\\n  function getAccountNonvotingLockedGold(address account) external view returns (uint256);\\n  function getAccountTotalLockedCelo(address) external view returns (uint256);\\n  function getTotalLockedCelo() external view returns (uint256);\\n  function getPendingWithdrawals(\\n    address\\n  ) external view returns (uint256[] memory, uint256[] memory);\\n  function getPendingWithdrawal(\\n    address account,\\n    uint256 index\\n  ) external view returns (uint256, uint256);\\n  function getTotalPendingWithdrawals(address) external view returns (uint256);\\n  function isSlasher(address) external view returns (bool);\\n\\n  function getAccountTotalDelegatedFraction(address account) external view returns (uint256);\\n\\n  function getAccountTotalGovernanceVotingPower(address account) external view returns (uint256);\\n  function unlockingPeriod() external view returns (uint256);\\n  function getAccountNonvotingLockedCelo(address account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x41cd5970ccc5612c9cd9cdf89a299a3cff0d8984d0b16ffad14da7670424920b\"},\"project:/contracts/governance/interfaces/ILockedGold.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ILockedGold {\\n  function lock() external payable;\\n  function incrementNonvotingAccountBalance(address, uint256) external;\\n  function decrementNonvotingAccountBalance(address, uint256) external;\\n\\n  function unlock(uint256) external;\\n  function relock(uint256, uint256) external;\\n  function withdraw(uint256) external;\\n  function slash(\\n    address account,\\n    uint256 penalty,\\n    address reporter,\\n    uint256 reward,\\n    address[] calldata lessers,\\n    address[] calldata greaters,\\n    uint256[] calldata indices\\n  ) external;\\n  function addSlasher(string calldata slasherIdentifier) external;\\n\\n  function getAccountTotalLockedGold(address) external view returns (uint256);\\n  function getTotalLockedGold() external view returns (uint256);\\n  function getPendingWithdrawals(\\n    address\\n  ) external view returns (uint256[] memory, uint256[] memory);\\n  function getPendingWithdrawal(\\n    address account,\\n    uint256 index\\n  ) external view returns (uint256, uint256);\\n  function getTotalPendingWithdrawals(address) external view returns (uint256);\\n  function isSlasher(address) external view returns (bool);\\n\\n  function getAccountTotalDelegatedFraction(address account) external view returns (uint256);\\n\\n  function getAccountTotalGovernanceVotingPower(address account) external view returns (uint256);\\n  function unlockingPeriod() external view returns (uint256);\\n  function getAccountNonvotingLockedGold(address account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x4ab7ee32f3cbac55e91ef1087ba3e8bbdd784833faa2b9b7e1d66ff662800227\"},\"project:/contracts/governance/interfaces/IValidators.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IValidators {\\n  function registerValidator(\\n    bytes calldata,\\n    bytes calldata,\\n    bytes calldata\\n  ) external returns (bool);\\n  function registerValidatorNoBls(bytes calldata ecdsaPublicKey) external returns (bool);\\n  function deregisterValidator(uint256) external returns (bool);\\n  function affiliate(address) external returns (bool);\\n  function deaffiliate() external returns (bool);\\n  function updateBlsPublicKey(bytes calldata, bytes calldata) external returns (bool);\\n  function registerValidatorGroup(uint256) external returns (bool);\\n  function deregisterValidatorGroup(uint256) external returns (bool);\\n  function addMember(address) external returns (bool);\\n  function addFirstMember(address, address, address) external returns (bool);\\n  function removeMember(address) external returns (bool);\\n  function reorderMember(address, address, address) external returns (bool);\\n  function updateCommission() external;\\n  function setNextCommissionUpdate(uint256) external;\\n  function resetSlashingMultiplier() external;\\n\\n  // only owner\\n  function setCommissionUpdateDelay(uint256) external;\\n  function setMaxGroupSize(uint256) external returns (bool);\\n  function setMembershipHistoryLength(uint256) external returns (bool);\\n  function setValidatorScoreParameters(uint256, uint256) external returns (bool);\\n  function setGroupLockedGoldRequirements(uint256, uint256) external returns (bool);\\n  function setValidatorLockedGoldRequirements(uint256, uint256) external returns (bool);\\n  function setSlashingMultiplierResetPeriod(uint256) external;\\n  function setDowntimeGracePeriod(uint256 value) external;\\n\\n  // only registered contract\\n  function updateEcdsaPublicKey(address, address, bytes calldata) external returns (bool);\\n  function updatePublicKeys(\\n    address,\\n    address,\\n    bytes calldata,\\n    bytes calldata,\\n    bytes calldata\\n  ) external returns (bool);\\n  function mintStableToEpochManager(uint256 amount) external;\\n\\n  // only VM\\n  function updateValidatorScoreFromSigner(address, uint256) external;\\n  function distributeEpochPaymentsFromSigner(address, uint256) external returns (uint256);\\n\\n  // only slasher\\n  function forceDeaffiliateIfValidator(address) external;\\n  function halveSlashingMultiplier(address) external;\\n\\n  // view functions\\n  function maxGroupSize() external view returns (uint256);\\n  function downtimeGracePeriod() external view returns (uint256);\\n  function getCommissionUpdateDelay() external view returns (uint256);\\n  function getValidatorScoreParameters() external view returns (uint256, uint256);\\n  function getMembershipHistory(\\n    address\\n  ) external view returns (uint256[] memory, address[] memory, uint256, uint256);\\n  function calculateEpochScore(uint256) external view returns (uint256);\\n  function calculateGroupEpochScore(uint256[] calldata) external view returns (uint256);\\n  function getAccountLockedGoldRequirement(address) external view returns (uint256);\\n  function meetsAccountLockedGoldRequirements(address) external view returns (bool);\\n  function getValidatorBlsPublicKeyFromSigner(address) external view returns (bytes memory);\\n  function getValidator(\\n    address account\\n  ) external view returns (bytes memory, bytes memory, address, uint256, address);\\n  function getValidatorsGroup(address account) external view returns (address affiliation);\\n  function getValidatorGroup(\\n    address\\n  )\\n    external\\n    view\\n    returns (address[] memory, uint256, uint256, uint256, uint256[] memory, uint256, uint256);\\n  function getGroupNumMembers(address) external view returns (uint256);\\n  function getTopGroupValidators(address, uint256) external view returns (address[] memory);\\n  function getTopGroupValidatorsAccounts(address, uint256) external view returns (address[] memory);\\n  function getGroupsNumMembers(\\n    address[] calldata accounts\\n  ) external view returns (uint256[] memory);\\n  function getNumRegisteredValidators() external view returns (uint256);\\n  function groupMembershipInEpoch(address, uint256, uint256) external view returns (address);\\n\\n  function getValidatorLockedGoldRequirements() external view returns (uint256, uint256);\\n  function getGroupLockedGoldRequirements() external view returns (uint256, uint256);\\n  function getRegisteredValidators() external view returns (address[] memory);\\n  function getRegisteredValidatorGroups() external view returns (address[] memory);\\n  function isValidatorGroup(address) external view returns (bool);\\n  function isValidator(address) external view returns (bool);\\n  function getValidatorGroupSlashingMultiplier(address) external view returns (uint256);\\n  function getMembershipInLastEpoch(address) external view returns (address);\\n  function getMembershipInLastEpochFromSigner(address) external view returns (address);\\n  function computeEpochReward(\\n    address account,\\n    uint256 score,\\n    uint256 maxPayment\\n  ) external view returns (uint256);\\n  function getMembershipHistoryLength() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x78a09c1b3e80fbb1a8fd907575a71e181d100a09d999ea5c032140efbeeeb90f\"},\"project:/contracts/identity/interfaces/IAttestations.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IAttestations {\\n  function revoke(bytes32, uint256) external;\\n  function withdraw(address) external;\\n\\n  // only owner\\n  function setAttestationRequestFee(address, uint256) external;\\n  function setAttestationExpiryBlocks(uint256) external;\\n  function setSelectIssuersWaitBlocks(uint256) external;\\n  function setMaxAttestations(uint256) external;\\n\\n  // view functions\\n  function getUnselectedRequest(bytes32, address) external view returns (uint32, uint32, address);\\n  function getAttestationIssuers(bytes32, address) external view returns (address[] memory);\\n  function getAttestationStats(bytes32, address) external view returns (uint32, uint32);\\n  function batchGetAttestationStats(\\n    bytes32[] calldata\\n  ) external view returns (uint256[] memory, address[] memory, uint64[] memory, uint64[] memory);\\n  function getAttestationState(\\n    bytes32,\\n    address,\\n    address\\n  ) external view returns (uint8, uint32, address);\\n  function getCompletableAttestations(\\n    bytes32,\\n    address\\n  ) external view returns (uint32[] memory, address[] memory, uint256[] memory, bytes memory);\\n  function getAttestationRequestFee(address) external view returns (uint256);\\n  function getMaxAttestations() external view returns (uint256);\\n  function validateAttestationCode(\\n    bytes32,\\n    address,\\n    uint8,\\n    bytes32,\\n    bytes32\\n  ) external view returns (address);\\n  function lookupAccountsForIdentifier(bytes32) external view returns (address[] memory);\\n  function requireNAttestationsRequested(bytes32, address, uint32) external view;\\n}\\n\",\"keccak256\":\"0x6afd5f303e153798b15448e0206ed5e645b6e2f2e46762cb17c5b665e256cdb2\"},\"project:/contracts/identity/interfaces/IRandom.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IRandom {\\n  function revealAndCommit(bytes32, bytes32, address) external;\\n  function randomnessBlockRetentionWindow() external view returns (uint256);\\n  function random() external view returns (bytes32);\\n  function getBlockRandomness(uint256) external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xdb545530be6397d23692e4465f4514cf3c87c1d4f553323964694818c375c08d\"},\"project:/contracts/stability/interfaces/ISortedOracles.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ISortedOracles {\\n  function addOracle(address, address) external;\\n  function removeOracle(address, address, uint256) external;\\n  function report(address, uint256, address, address) external;\\n  function removeExpiredReports(address, uint256) external;\\n  function isOldestReportExpired(address token) external view returns (bool, address);\\n  function numRates(address) external view returns (uint256);\\n  function medianRate(address) external view returns (uint256, uint256);\\n  function numTimestamps(address) external view returns (uint256);\\n  function medianTimestamp(address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xc9d69b608b060effe4a0b246e7fad096b524b848aa51d8f4eccad36c1aa0479d\"},\"project:/lib/mento-core/contracts/interfaces/IExchange.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\ninterface IExchange {\\n    function buy(\\n        uint256,\\n        uint256,\\n        bool\\n    ) external returns (uint256);\\n\\n    function sell(\\n        uint256,\\n        uint256,\\n        bool\\n    ) external returns (uint256);\\n\\n    function exchange(\\n        uint256,\\n        uint256,\\n        bool\\n    ) external returns (uint256);\\n\\n    function setUpdateFrequency(uint256) external;\\n\\n    function getBuyTokenAmount(uint256, bool) external view returns (uint256);\\n\\n    function getSellTokenAmount(uint256, bool) external view returns (uint256);\\n\\n    function getBuyAndSellBuckets(bool) external view returns (uint256, uint256);\\n}\\n\",\"keccak256\":\"0x320488022d1066ac81797b9e7a3dc303d1c8e9a48597972d4686e00f9554ade9\"},\"project:/lib/mento-core/contracts/interfaces/IReserve.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\ninterface IReserve {\\n    function setTobinTaxStalenessThreshold(uint256) external;\\n\\n    function addToken(address) external returns (bool);\\n\\n    function removeToken(address, uint256) external returns (bool);\\n\\n    function transferGold(address payable, uint256) external returns (bool);\\n\\n    function transferExchangeGold(address payable, uint256) external returns (bool);\\n\\n    function getReserveGoldBalance() external view returns (uint256);\\n\\n    function getUnfrozenReserveGoldBalance() external view returns (uint256);\\n\\n    function getOrComputeTobinTax() external returns (uint256, uint256);\\n\\n    function getTokens() external view returns (address[] memory);\\n\\n    function getReserveRatio() external view returns (uint256);\\n\\n    function addExchangeSpender(address) external;\\n\\n    function removeExchangeSpender(address, uint256) external;\\n\\n    function addSpender(address) external;\\n\\n    function removeSpender(address) external;\\n}\\n\",\"keccak256\":\"0x9162b458dc21fe7e6cfc5d4722b3db3001b1c54ecdcefa703ff9d902084150b7\"},\"project:/lib/mento-core/contracts/interfaces/IStableToken.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\n/**\\n * @title This interface describes the functions specific to Celo Stable Tokens, and in the\\n * absence of interface inheritance is intended as a companion to IERC20.sol and ICeloToken.sol.\\n */\\ninterface IStableToken {\\n    function mint(address, uint256) external returns (bool);\\n\\n    function burn(uint256) external returns (bool);\\n\\n    function setInflationParameters(uint256, uint256) external;\\n\\n    function valueToUnits(uint256) external view returns (uint256);\\n\\n    function unitsToValue(uint256) external view returns (uint256);\\n\\n    function getInflationParameters()\\n        external\\n        view\\n        returns (\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256\\n        );\\n\\n    // NOTE: duplicated with IERC20.sol, remove once interface inheritance is supported.\\n    function balanceOf(address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xcb6440c9b161b26a5b062e6c74d6fd1ed9736f292161c757406a9c39e942d20a\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051611fd3380380611fd38339818101604052602081101561003357600080fd5b810190808051906020019092919050505080600061005561011b60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35080610114576001600060146101000a81548160ff0219169083151502179055505b5050610123565b600033905090565b611ea1806101326000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063d6cbae0211610066578063d6cbae02146104a4578063d7c7d52b146105ff578063da853aed14610649578063f2fde38b146106a1576100f5565b80638da5cb5b146103b05780638f32d59b146103fa578063a91ee0dc1461041c578063c4d66de814610460576100f5565b806354255be0116100d357806354255be0146102e5578063715018a6146103185780637b1039991461032257806387fd38d31461036c576100f5565b8063158ef93e146100fa5780631c75f5c21461011c5780633a0dd69f1461016a575b600080fd5b6101026106e5565b604051808215151515815260200191505060405180910390f35b6101686004803603604081101561013257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106f8565b005b6102cb600480360360a081101561018057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156101dd57600080fd5b8201836020820111156101ef57600080fd5b8035906020019184602083028401116401000000008311171561021157600080fd5b90919293919293908035906020019064010000000081111561023257600080fd5b82018360208201111561024457600080fd5b8035906020019184602083028401116401000000008311171561026657600080fd5b90919293919293908035906020019064010000000081111561028757600080fd5b82018360208201111561029957600080fd5b803590602001918460208302840111640100000000831117156102bb57600080fd5b90919293919293905050506108df565b604051808215151515815260200191505060405180910390f35b6102ed611032565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b610320611059565b005b61032a611192565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103ae6004803603602081101561038257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111b8565b005b6103b86112d9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610402611302565b604051808215151515815260200191505060405180910390f35b61045e6004803603602081101561043257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611360565b005b6104a26004803603602081101561047657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611504565b005b6105e5600480360360808110156104ba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156104f757600080fd5b82018360208201111561050957600080fd5b8035906020019184602083028401116401000000008311171561052b57600080fd5b90919293919293908035906020019064010000000081111561054c57600080fd5b82018360208201111561055e57600080fd5b8035906020019184602083028401116401000000008311171561058057600080fd5b9091929391929390803590602001906401000000008111156105a157600080fd5b8201836020820111156105b357600080fd5b803590602001918460208302840111640100000000831117156105d557600080fd5b90919293919293905050506115b7565b604051808215151515815260200191505060405180910390f35b6106076118a6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61068b6004803603602081101561065f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118d0565b6040518082815260200191505060405180910390f35b6106e3600480360360208110156106b757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611919565b005b600060149054906101000a900460ff1681565b6107006112d9565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061078657503373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b6107f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f53656e646572206e6f7420617574686f72697a656420746f20736c617368000081525060200191505060405180910390fd5b61084a81600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461199f90919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f031b4696d0f74746e384670f56dacc22f2565b5637b797d8cf861dd5dfe73ed5826040518082815260200191505060405180910390a25050565b60006108e9611a27565b61093e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611e4a6023913960400191505060405180910390fd5b6109466112d9565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806109cc57503373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b610a3e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f53656e646572206e6f7420617574686f72697a656420746f20736c617368000081525060200191505060405180910390fd5b6000600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610af8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f4e6f2070656e616c747920676976656e20627920676f7665726e616e6365000081525060200191505060405180910390fd5b6000600260008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000610b47611a58565b90508073ffffffffffffffffffffffffffffffffffffffff166331993fc98c846000808e8e8e8e8e8e6040518b63ffffffff1660e01b8152600401808b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018a81526020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200188815260200180602001806020018060200184810384528a8a82818152602001925060200280828437600081840152601f19601f8201169050808301925050508481038352888882818152602001925060200280828437600081840152601f19601f8201169050808301925050508481038252868682818152602001925060200280828437600081840152601f19601f8201169050808301925050509d5050505050505050505050505050600060405180830381600087803b158015610cb257600080fd5b505af1158015610cc6573d6000803e3d6000fd5b50505050600073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff1614610fbb578073ffffffffffffffffffffffffffffffffffffffff166331993fc98b846000808e8e8e8e8e8e6040518b63ffffffff1660e01b8152600401808b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018a81526020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200188815260200180602001806020018060200184810384528a8a82818152602001925060200280828437600081840152601f19601f8201169050808301925050508481038352888882818152602001925060200280828437600081840152601f19601f8201169050808301925050508481038252868682818152602001925060200280828437600081840152601f19601f8201169050808301925050509d5050505050505050505050505050600060405180830381600087803b158015610e6757600080fd5b505af1158015610e7b573d6000803e3d6000fd5b505050506000610e89611b53565b90508073ffffffffffffffffffffffffffffffffffffffff1663e33301aa8d6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015610f0a57600080fd5b505af1158015610f1e573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663c22d3bba8c6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015610fa157600080fd5b505af1158015610fb5573d6000803e3d6000fd5b50505050505b8973ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff167f855603bfff3f1f2bfd2964e9477a3248969cc3c637781b944b457ca85bdbfa98846040518082815260200191505060405180910390a360019250505098975050505050505050565b60008060008060018060016000839350829250819150809050935093509350935090919293565b611061611302565b6110d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6111c0611302565b611232576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f292cc7addbd51b7795a11887072cd03aa9dae7d9ec22738ce33d47c972e084c781604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611344611c4e565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b611368611302565b6113da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561147d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f43616e6e6f7420726567697374657220746865206e756c6c206164647265737381525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b60405160405180910390a250565b600060149054906101000a900460ff1615611587576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f636f6e747261637420616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff0219169083151502179055506115ab33611c56565b6115b481611360565b50565b60006115c1611d9a565b6000600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811161167b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f4e6f2070656e616c747920676976656e20627920676f7665726e616e6365000081525060200191505060405180910390fd5b6000600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506116c8611a58565b73ffffffffffffffffffffffffffffffffffffffff166331993fc98a836000808d8d8d8d8d8d6040518b63ffffffff1660e01b8152600401808b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018a81526020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200188815260200180602001806020018060200184810384528a8a82818152602001925060200280828437600081840152601f19601f8201169050808301925050508481038352888882818152602001925060200280828437600081840152601f19601f8201169050808301925050508481038252868682818152602001925060200280828437600081840152601f19601f8201169050808301925050509d5050505050505050505050505050600060405180830381600087803b15801561183057600080fd5b505af1158015611844573d6000803e3d6000fd5b505050508873ffffffffffffffffffffffffffffffffffffffff167fd2b041bb62d3ac9e704aadbea1d3a21b6f5b4677d0766e204c2d30dfc1a022f9826040518082815260200191505060405180910390a26001915050979650505050505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b611921611302565b611993576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61199c81611c56565b50565b600080828401905083811015611a1d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008060007342000000000000000000000000000000000000189050803b915060008263ffffffff16119250505090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f4c6f636b6564476f6c6400000000000000000000000000000000000000000000815250600a019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611b1357600080fd5b505afa158015611b27573d6000803e3d6000fd5b505050506040513d6020811015611b3d57600080fd5b8101908080519060200190929190505050905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f56616c696461746f727300000000000000000000000000000000000000000000815250600a019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611c0e57600080fd5b505afa158015611c22573d6000803e3d6000fd5b505050506040513d6020811015611c3857600080fd5b8101908080519060200190929190505050905090565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611cdc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611dfb6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611da2611a27565b15611df8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180611e216029913960400191505060405180910390fd5b56fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737354686973206d6574686f64206973206e6f206c6f6e67657220737570706f7274656420696e204c322e54686973206d6574686f64206973206e6f7420737570706f7274656420696e204c312ea265627a7a72315820453a6f6350b6b7debbcfde16b426f7750e4a72dc81b707869a3bc72ba5a68b7264736f6c634300050d0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063d6cbae0211610066578063d6cbae02146104a4578063d7c7d52b146105ff578063da853aed14610649578063f2fde38b146106a1576100f5565b80638da5cb5b146103b05780638f32d59b146103fa578063a91ee0dc1461041c578063c4d66de814610460576100f5565b806354255be0116100d357806354255be0146102e5578063715018a6146103185780637b1039991461032257806387fd38d31461036c576100f5565b8063158ef93e146100fa5780631c75f5c21461011c5780633a0dd69f1461016a575b600080fd5b6101026106e5565b604051808215151515815260200191505060405180910390f35b6101686004803603604081101561013257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106f8565b005b6102cb600480360360a081101561018057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156101dd57600080fd5b8201836020820111156101ef57600080fd5b8035906020019184602083028401116401000000008311171561021157600080fd5b90919293919293908035906020019064010000000081111561023257600080fd5b82018360208201111561024457600080fd5b8035906020019184602083028401116401000000008311171561026657600080fd5b90919293919293908035906020019064010000000081111561028757600080fd5b82018360208201111561029957600080fd5b803590602001918460208302840111640100000000831117156102bb57600080fd5b90919293919293905050506108df565b604051808215151515815260200191505060405180910390f35b6102ed611032565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b610320611059565b005b61032a611192565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103ae6004803603602081101561038257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111b8565b005b6103b86112d9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610402611302565b604051808215151515815260200191505060405180910390f35b61045e6004803603602081101561043257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611360565b005b6104a26004803603602081101561047657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611504565b005b6105e5600480360360808110156104ba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156104f757600080fd5b82018360208201111561050957600080fd5b8035906020019184602083028401116401000000008311171561052b57600080fd5b90919293919293908035906020019064010000000081111561054c57600080fd5b82018360208201111561055e57600080fd5b8035906020019184602083028401116401000000008311171561058057600080fd5b9091929391929390803590602001906401000000008111156105a157600080fd5b8201836020820111156105b357600080fd5b803590602001918460208302840111640100000000831117156105d557600080fd5b90919293919293905050506115b7565b604051808215151515815260200191505060405180910390f35b6106076118a6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61068b6004803603602081101561065f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118d0565b6040518082815260200191505060405180910390f35b6106e3600480360360208110156106b757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611919565b005b600060149054906101000a900460ff1681565b6107006112d9565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061078657503373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b6107f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f53656e646572206e6f7420617574686f72697a656420746f20736c617368000081525060200191505060405180910390fd5b61084a81600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461199f90919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f031b4696d0f74746e384670f56dacc22f2565b5637b797d8cf861dd5dfe73ed5826040518082815260200191505060405180910390a25050565b60006108e9611a27565b61093e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611e4a6023913960400191505060405180910390fd5b6109466112d9565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806109cc57503373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b610a3e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f53656e646572206e6f7420617574686f72697a656420746f20736c617368000081525060200191505060405180910390fd5b6000600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610af8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f4e6f2070656e616c747920676976656e20627920676f7665726e616e6365000081525060200191505060405180910390fd5b6000600260008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000610b47611a58565b90508073ffffffffffffffffffffffffffffffffffffffff166331993fc98c846000808e8e8e8e8e8e6040518b63ffffffff1660e01b8152600401808b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018a81526020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200188815260200180602001806020018060200184810384528a8a82818152602001925060200280828437600081840152601f19601f8201169050808301925050508481038352888882818152602001925060200280828437600081840152601f19601f8201169050808301925050508481038252868682818152602001925060200280828437600081840152601f19601f8201169050808301925050509d5050505050505050505050505050600060405180830381600087803b158015610cb257600080fd5b505af1158015610cc6573d6000803e3d6000fd5b50505050600073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff1614610fbb578073ffffffffffffffffffffffffffffffffffffffff166331993fc98b846000808e8e8e8e8e8e6040518b63ffffffff1660e01b8152600401808b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018a81526020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200188815260200180602001806020018060200184810384528a8a82818152602001925060200280828437600081840152601f19601f8201169050808301925050508481038352888882818152602001925060200280828437600081840152601f19601f8201169050808301925050508481038252868682818152602001925060200280828437600081840152601f19601f8201169050808301925050509d5050505050505050505050505050600060405180830381600087803b158015610e6757600080fd5b505af1158015610e7b573d6000803e3d6000fd5b505050506000610e89611b53565b90508073ffffffffffffffffffffffffffffffffffffffff1663e33301aa8d6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015610f0a57600080fd5b505af1158015610f1e573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663c22d3bba8c6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015610fa157600080fd5b505af1158015610fb5573d6000803e3d6000fd5b50505050505b8973ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff167f855603bfff3f1f2bfd2964e9477a3248969cc3c637781b944b457ca85bdbfa98846040518082815260200191505060405180910390a360019250505098975050505050505050565b60008060008060018060016000839350829250819150809050935093509350935090919293565b611061611302565b6110d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6111c0611302565b611232576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f292cc7addbd51b7795a11887072cd03aa9dae7d9ec22738ce33d47c972e084c781604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611344611c4e565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b611368611302565b6113da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561147d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f43616e6e6f7420726567697374657220746865206e756c6c206164647265737381525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b60405160405180910390a250565b600060149054906101000a900460ff1615611587576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f636f6e747261637420616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff0219169083151502179055506115ab33611c56565b6115b481611360565b50565b60006115c1611d9a565b6000600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811161167b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f4e6f2070656e616c747920676976656e20627920676f7665726e616e6365000081525060200191505060405180910390fd5b6000600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506116c8611a58565b73ffffffffffffffffffffffffffffffffffffffff166331993fc98a836000808d8d8d8d8d8d6040518b63ffffffff1660e01b8152600401808b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018a81526020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200188815260200180602001806020018060200184810384528a8a82818152602001925060200280828437600081840152601f19601f8201169050808301925050508481038352888882818152602001925060200280828437600081840152601f19601f8201169050808301925050508481038252868682818152602001925060200280828437600081840152601f19601f8201169050808301925050509d5050505050505050505050505050600060405180830381600087803b15801561183057600080fd5b505af1158015611844573d6000803e3d6000fd5b505050508873ffffffffffffffffffffffffffffffffffffffff167fd2b041bb62d3ac9e704aadbea1d3a21b6f5b4677d0766e204c2d30dfc1a022f9826040518082815260200191505060405180910390a26001915050979650505050505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b611921611302565b611993576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61199c81611c56565b50565b600080828401905083811015611a1d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008060007342000000000000000000000000000000000000189050803b915060008263ffffffff16119250505090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f4c6f636b6564476f6c6400000000000000000000000000000000000000000000815250600a019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611b1357600080fd5b505afa158015611b27573d6000803e3d6000fd5b505050506040513d6020811015611b3d57600080fd5b8101908080519060200190929190505050905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f56616c696461746f727300000000000000000000000000000000000000000000815250600a019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611c0e57600080fd5b505afa158015611c22573d6000803e3d6000fd5b505050506040513d6020811015611c3857600080fd5b8101908080519060200190929190505050905090565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611cdc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611dfb6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611da2611a27565b15611df8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180611e216029913960400191505060405180910390fd5b56fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737354686973206d6574686f64206973206e6f206c6f6e67657220737570706f7274656420696e204c322e54686973206d6574686f64206973206e6f7420737570706f7274656420696e204c312ea265627a7a72315820453a6f6350b6b7debbcfde16b426f7750e4a72dc81b707869a3bc72ba5a68b7264736f6c634300050d0032",
  "sourceMap": "376:4935:117:-;;;1336:52;8:9:-1;5:2;;;30:1;27;20:12;5:2;1336:52:117;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1336:52:117;;;;;;;;;;;;;;;;1380:4;698:17:4;718:12;:10;;;:12;;:::i;:::-;698:32;;749:9;740:6;;:18;;;;;;;;;;;;;;;;;;806:9;773:43;;802:1;773:43;;;;;;;;;;;;664:159;896:17:28;891:57;;937:4;923:11;;:18;;;;;;;;;;;;;;;;;;891:57;842:110;1336:52:117;376:4935;;788:96:0;833:15;867:10;860:17;;788:96;:::o;376:4935:117:-;;;;;;;",
  "deployedSourceMap": "376:4935:117:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;376:4935:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;319:23:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2463:194:117;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2463:194:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3962:1010;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3962:1010:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3962:1010:117;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3962:1010:117;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3962:1010:117;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3962:1010:117;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3962:1010:117;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3962:1010:117;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3962:1010:117;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3962:1010:117;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3962:1010:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1995:117;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1684:137:4;;;:::i;:::-;;3352:25:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2116:165:117;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2116:165:117;;;;;;;;;;;;;;;;;;;:::i;:::-;;899:77:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1250:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3956:230:41;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3956:230:41;;;;;;;;;;;;;;;;;;;:::i;:::-;;1577:141:117;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1577:141:117;;;;;;;;;;;;;;;;;;;:::i;:::-;;3033:553;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3033:553:117;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3033:553:117;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3033:553:117;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3033:553:117;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3033:553:117;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3033:553:117;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3033:553:117;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3033:553:117;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3033:553:117;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3033:553:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5214:95;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5098:112;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5098:112:117;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1970:107:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1970:107:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;319:23:28;;;;;;;;;;;;;:::o;2463:194:117:-;1089:7;:5;:7::i;:::-;1075:21;;:10;:21;;;:54;;;;1119:10;1100:29;;:15;;;;;;;;;;;:29;;;1075:54;1060:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2578:29;2599:7;2578;:16;2586:7;2578:16;;;;;;;;;;;;;;;;:20;;:29;;;;:::i;:::-;2559:7;:16;2567:7;2559:16;;;;;;;;;;;;;;;:48;;;;2635:7;2618:34;;;2644:7;2618:34;;;;;;;;;;;;;;;;;;2463:194;;:::o;3962:1010::-;4191:4;435:6:11;:4;:6::i;:::-;430:73;;451:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;430:73;1089:7:117;:5;:7::i;:::-;1075:21;;:10;:21;;;:54;;;;1119:10;1100:29;;:15;;;;;;;;;;;:29;;;1075:54;1060:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4203:15;4221:7;:16;4229:7;4221:16;;;;;;;;;;;;;;;;4203:34;;4261:1;4251:7;:11;4243:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4322:1;4303:7;:16;4311:7;4303:16;;;;;;;;;;;;;;;:20;;;;4330:22;4355:15;:13;:15::i;:::-;4330:40;;4377:10;:16;;;4401:7;4416;4439:1;4449;4458:15;;4481:16;;4505:15;;4377:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4377:149:117;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4377:149:117;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4377:149:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4377:149:117;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4377:149:117;;;;4554:1;4537:19;;:5;:19;;;4533:355;;4566:10;:16;;;4592:5;4607:7;4632:1;4644;4655:15;;4680:16;;4706:15;;4566:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4566:163:117;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4566:163:117;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4566:163:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4566:163:117;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4566:163:117;;;;4737:22;4762:15;:13;:15::i;:::-;4737:40;;4785:10;:38;;;4824:7;4785:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4785:47:117;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4785:47:117;;;;4840:10;:34;;;4875:5;4840:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4840:41:117;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4840:41:117;;;;4533:355;;4935:5;4899:51;;4926:7;4899:51;;;4942:7;4899:51;;;;;;;;;;;;;;;;;;4963:4;4956:11;;;;3962:1010;;;;;;;;;;:::o;1995:117::-;2046:7;2055;2064;2073;2096:1;2099;2102;2105;2088:19;;;;;;;;;;;;;;;;;;;;1995:117;;;;:::o;1684:137:4:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:1;1745:40;;1766:6;;;;;;;;;;;1745:40;;;;;;;;;;;;1812:1;1795:6;;:19;;;;;;;;;;;;;;;;;;1684:137::o;3352:25:41:-;;;;;;;;;;;;;:::o;2116:165:117:-;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2213:16:117;2195:15;;:34;;;;;;;;;;;;;;;;;;2240:36;2259:16;2240:36;;;;;;;;;;;;;;;;;;;;;;2116:165;:::o;899:77:4:-;937:7;963:6;;;;;;;;;;;956:13;;899:77;:::o;1250:92::-;1290:4;1329:6;;;;;;;;;;;1313:22;;:12;:10;:12::i;:::-;:22;;;1306:29;;1250:92;:::o;3956:230:41:-;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4060:1:41;4033:29;;:15;:29;;;;4025:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4126:15;4105:8;;:37;;;;;;;;;;;;;;;;;;4165:15;4153:28;;;;;;;;;;;;3956:230;:::o;1577:141:117:-;476:11:28;;;;;;;;;;;475:12;467:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;540:4;526:11;;:18;;;;;;;;;;;;;;;;;;1649:30:117;1668:10;1649:18;:30::i;:::-;1685:28;1697:15;1685:11;:28::i;:::-;1577:141;:::o;3033:553::-;3219:4;328:13:11;:11;:13::i;:::-;3231:15:117;3249:7;:16;3257:7;3249:16;;;;;;;;;;;;;;;;3231:34;;3289:1;3279:7;:11;3271:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3350:1;3331:7;:16;3339:7;3331:16;;;;;;;;;;;;;;;:20;;;;3357:15;:13;:15::i;:::-;:21;;;3386:7;3401;3424:1;3434;3443:15;;3466:16;;3490:15;;3357:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3357:154:117;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3357:154:117;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3357:154:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3357:154:117;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3357:154:117;;;;3547:7;3522:42;;;3556:7;3522:42;;;;;;;;;;;;;;;;;;3577:4;3570:11;;;3033:553;;;;;;;;;:::o;5214:95::-;5267:7;5289:15;;;;;;;;;;;5282:22;;5214:95;:::o;5098:112::-;5167:7;5189;:16;5197:7;5189:16;;;;;;;;;;;;;;;;5182:23;;5098:112;;;:::o;1970:107:4:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;834:176:3:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;650:183:11:-;689:4;701:11;718:13;208:42;718:33;;794:5;782:18;774:26;;826:1;819:4;:8;;;811:17;;;;650:183;:::o;5512:144:41:-;5560:11;5598:8;;;;;;;;;;;:27;;;2261:30;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2261:30:41;;;2251:41;;;;;;5598:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5598:52:41;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5598:52:41;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5598:52:41;;;;;;;;;;;;;;;;5579:72;;5512:144;:::o;6385:143::-;6433:11;6471:8;;;;;;;;;;;:27;;;2692:30;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2692:30:41;;;2682:41;;;;;;6471:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6471:51:41;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6471:51:41;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6471:51:41;;;;;;;;;;;;;;;;6452:71;;6385:143;:::o;788:96:0:-;833:15;867:10;860:17;;788:96;:::o;2178:225:4:-;2271:1;2251:22;;:8;:22;;;;2243:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:8;2331:38;;2352:6;;;;;;;;;;;2331:38;;;;;;;;;;;;2388:8;2379:6;;:17;;;;;;;;;;;;;;;;;;2178:225;:::o;975:125:11:-;1022:6;:4;:6::i;:::-;1018:78;;;1038:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1018:78;975:125::o",
  "source": "pragma solidity ^0.5.13;\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\nimport \"../common/Initializable.sol\";\nimport \"../common/UsingRegistry.sol\";\nimport \"./interfaces/IValidators.sol\";\nimport \"../../contracts-0.8/common/IsL2Check.sol\";\nimport \"../common/interfaces/ICeloVersionedContract.sol\";\n\ncontract GovernanceSlasher is\n  Ownable,\n  Initializable,\n  UsingRegistry,\n  ICeloVersionedContract,\n  IsL2Check\n{\n  using SafeMath for uint256;\n  // Maps a slashed address to the amount to be slashed.\n  // Note that there is no reward paid when slashing via governance.\n  mapping(address => uint256) slashed;\n  address internal slasherExecuter;\n\n  event SlashingApproved(address indexed account, uint256 amount);\n  event GovernanceSlashPerformed(address indexed account, uint256 amount);\n  event GovernanceSlashL2Performed(address indexed account, address indexed group, uint256 amount);\n  event SlasherExecuterSet(address slasherExecuter);\n\n  modifier onlyAuthorizedToSlash() {\n    require(\n      msg.sender == owner() || slasherExecuter == msg.sender,\n      \"Sender not authorized to slash\"\n    );\n    _;\n  }\n\n  /**\n   * @notice Sets initialized == true on implementation contracts\n   * @param test Set to true to skip implementation initialization\n   */\n  constructor(bool test) public Initializable(test) {}\n\n  /**\n   * @notice Used in place of the constructor to allow the contract to be upgradable via proxy.\n   * @param registryAddress The address of the registry core smart contract.\n   */\n  function initialize(address registryAddress) external initializer {\n    _transferOwnership(msg.sender);\n    setRegistry(registryAddress);\n  }\n\n  /**\n   * @notice Returns the storage, major, minor, and patch version of the contract.\n   * @return Storage version of the contract.\n   * @return Major version of the contract.\n   * @return Minor version of the contract.\n   * @return Patch version of the contract.\n   */\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256) {\n    return (1, 1, 1, 0);\n  }\n\n  function setSlasherExecuter(address _slasherExecuter) external onlyOwner {\n    slasherExecuter = _slasherExecuter;\n    emit SlasherExecuterSet(_slasherExecuter);\n  }\n\n  /**\n   * @notice Sets account penalty.\n   * @param account Address that is punished.\n   * @param penalty Amount of penalty in wei.\n   * @dev Only callable by governance.\n   */\n  function approveSlashing(address account, uint256 penalty) external onlyAuthorizedToSlash {\n    slashed[account] = slashed[account].add(penalty);\n    emit SlashingApproved(account, penalty);\n  }\n\n  /**\n   * @notice Calls `LockedGold.slash` on `account` if `account` has an entry in `slashed`.\n   * @param account Account to slash\n   * @param electionLessers Lesser pointers for slashing locked election gold.\n   * @param electionGreaters Greater pointers for slashing locked election gold.\n   * @param electionIndices Indices of groups voted by slashed account.\n   */\n  function slash(\n    address account,\n    address[] calldata electionLessers,\n    address[] calldata electionGreaters,\n    uint256[] calldata electionIndices\n  ) external onlyL1 returns (bool) {\n    uint256 penalty = slashed[account];\n    require(penalty > 0, \"No penalty given by governance\");\n    slashed[account] = 0;\n    getLockedGold().slash(\n      account,\n      penalty,\n      address(0),\n      0,\n      electionLessers,\n      electionGreaters,\n      electionIndices\n    );\n    emit GovernanceSlashPerformed(account, penalty);\n    return true;\n  }\n\n  /**\n   * @notice Calls `LockedGold.slash` on `account` if `account` has an entry in `slashed`.\n   * @param account Account to slash\n   * @param electionLessers Lesser pointers for slashing locked election gold.\n   * @param electionGreaters Greater pointers for slashing locked election gold.\n   * @param electionIndices Indices of groups voted by slashed account.\n   */\n  function slashL2(\n    address account,\n    address group,\n    address[] calldata electionLessers,\n    address[] calldata electionGreaters,\n    uint256[] calldata electionIndices\n  ) external onlyL2 onlyAuthorizedToSlash returns (bool) {\n    uint256 penalty = slashed[account];\n    require(penalty > 0, \"No penalty given by governance\");\n    slashed[account] = 0;\n\n    ILockedGold lockedGold = getLockedGold();\n\n    lockedGold.slash(\n      account,\n      penalty,\n      address(0),\n      0,\n      electionLessers,\n      electionGreaters,\n      electionIndices\n    );\n\n    if (group != address(0)) {\n      lockedGold.slash(\n        group,\n        penalty,\n        address(0),\n        0,\n        electionLessers,\n        electionGreaters,\n        electionIndices\n      );\n      IValidators validators = getValidators();\n      validators.forceDeaffiliateIfValidator(account);\n      validators.halveSlashingMultiplier(group);\n    }\n\n    emit GovernanceSlashL2Performed(account, group, penalty);\n    return true;\n  }\n\n  /**\n   * @notice Gets account penalty.\n   * @param account Address that is punished.\n   * @return Amount slashed.\n   */\n  function getApprovedSlashing(address account) external view returns (uint256) {\n    return slashed[account];\n  }\n\n  function getSlasherExecuter() external view returns (address) {\n    return slasherExecuter;\n  }\n}\n",
  "sourcePath": "/Users/beaver/Development/temp/celo-monorepo/packages/protocol/contracts/governance/GovernanceSlasher.sol",
  "ast": {
    "absolutePath": "project:/contracts/governance/GovernanceSlasher.sol",
    "exportedSymbols": {
      "GovernanceSlasher": [
        37505
      ]
    },
    "id": 37506,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 37164,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:117"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 37165,
        "nodeType": "ImportDirective",
        "scope": 37506,
        "sourceUnit": 482,
        "src": "26:63:117",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 37166,
        "nodeType": "ImportDirective",
        "scope": 37506,
        "sourceUnit": 364,
        "src": "90:59:117",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/Initializable.sol",
        "file": "../common/Initializable.sol",
        "id": 37167,
        "nodeType": "ImportDirective",
        "scope": 37506,
        "sourceUnit": 9571,
        "src": "151:37:117",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/UsingRegistry.sol",
        "file": "../common/UsingRegistry.sol",
        "id": 37168,
        "nodeType": "ImportDirective",
        "scope": 37506,
        "sourceUnit": 13583,
        "src": "189:37:117",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/interfaces/IValidators.sol",
        "file": "./interfaces/IValidators.sol",
        "id": 37169,
        "nodeType": "ImportDirective",
        "scope": 37506,
        "sourceUnit": 44113,
        "src": "227:38:117",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts-0.8/common/IsL2Check.sol",
        "file": "../../contracts-0.8/common/IsL2Check.sol",
        "id": 37170,
        "nodeType": "ImportDirective",
        "scope": 37506,
        "sourceUnit": 1631,
        "src": "266:50:117",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/interfaces/ICeloVersionedContract.sol",
        "file": "../common/interfaces/ICeloVersionedContract.sol",
        "id": 37171,
        "nodeType": "ImportDirective",
        "scope": 37506,
        "sourceUnit": 14595,
        "src": "317:57:117",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 37172,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 481,
              "src": "408:7:117",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$481",
                "typeString": "contract Ownable"
              }
            },
            "id": 37173,
            "nodeType": "InheritanceSpecifier",
            "src": "408:7:117"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 37174,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9570,
              "src": "419:13:117",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$9570",
                "typeString": "contract Initializable"
              }
            },
            "id": 37175,
            "nodeType": "InheritanceSpecifier",
            "src": "419:13:117"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 37176,
              "name": "UsingRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13582,
              "src": "436:13:117",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UsingRegistry_$13582",
                "typeString": "contract UsingRegistry"
              }
            },
            "id": 37177,
            "nodeType": "InheritanceSpecifier",
            "src": "436:13:117"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 37178,
              "name": "ICeloVersionedContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14594,
              "src": "453:22:117",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICeloVersionedContract_$14594",
                "typeString": "contract ICeloVersionedContract"
              }
            },
            "id": 37179,
            "nodeType": "InheritanceSpecifier",
            "src": "453:22:117"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 37180,
              "name": "IsL2Check",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1630,
              "src": "479:9:117",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IsL2Check_$1630",
                "typeString": "contract IsL2Check"
              }
            },
            "id": 37181,
            "nodeType": "InheritanceSpecifier",
            "src": "479:9:117"
          }
        ],
        "contractDependencies": [
          26,
          481,
          1630,
          9570,
          13582,
          14594
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 37505,
        "linearizedBaseContracts": [
          37505,
          1630,
          14594,
          13582,
          9570,
          481,
          26
        ],
        "name": "GovernanceSlasher",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 37184,
            "libraryName": {
              "contractScope": null,
              "id": 37182,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 363,
              "src": "499:8:117",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$363",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "493:27:117",
            "typeName": {
              "id": 37183,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "512:7:117",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 37188,
            "name": "slashed",
            "nodeType": "VariableDeclaration",
            "scope": 37505,
            "src": "649:35:117",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 37187,
              "keyType": {
                "id": 37185,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "657:7:117",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "649:27:117",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 37186,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "668:7:117",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 37190,
            "name": "slasherExecuter",
            "nodeType": "VariableDeclaration",
            "scope": 37505,
            "src": "688:32:117",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 37189,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "688:7:117",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 37196,
            "name": "SlashingApproved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37192,
                  "indexed": true,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 37196,
                  "src": "748:23:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37191,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "748:7:117",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37194,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 37196,
                  "src": "773:14:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "773:7:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "747:41:117"
            },
            "src": "725:64:117"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 37202,
            "name": "GovernanceSlashPerformed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37198,
                  "indexed": true,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 37202,
                  "src": "823:23:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "823:7:117",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37200,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 37202,
                  "src": "848:14:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37199,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "848:7:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "822:41:117"
            },
            "src": "792:72:117"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 37210,
            "name": "GovernanceSlashL2Performed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37204,
                  "indexed": true,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 37210,
                  "src": "900:23:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37203,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "900:7:117",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37206,
                  "indexed": true,
                  "name": "group",
                  "nodeType": "VariableDeclaration",
                  "scope": 37210,
                  "src": "925:21:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37205,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "925:7:117",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37208,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 37210,
                  "src": "948:14:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "948:7:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "899:64:117"
            },
            "src": "867:97:117"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 37214,
            "name": "SlasherExecuterSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37212,
                  "indexed": false,
                  "name": "slasherExecuter",
                  "nodeType": "VariableDeclaration",
                  "scope": 37214,
                  "src": "992:23:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37211,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "992:7:117",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "991:25:117"
            },
            "src": "967:50:117"
          },
          {
            "body": {
              "id": 37231,
              "nodeType": "Block",
              "src": "1054:133:117",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 37226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 37221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 37217,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59923,
                              "src": "1075:3:117",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 37218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1075:10:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 37219,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 404,
                              "src": "1089:5:117",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 37220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1089:7:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1075:21:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 37225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 37222,
                            "name": "slasherExecuter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37190,
                            "src": "1100:15:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 37223,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59923,
                              "src": "1119:3:117",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 37224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1119:10:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1100:29:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1075:54:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53656e646572206e6f7420617574686f72697a656420746f20736c617368",
                        "id": 37227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1137:32:117",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b675a9c778eb076a911e8764cf9d1a924f098513fdf147aef918ec372934dd39",
                          "typeString": "literal_string \"Sender not authorized to slash\""
                        },
                        "value": "Sender not authorized to slash"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b675a9c778eb076a911e8764cf9d1a924f098513fdf147aef918ec372934dd39",
                          "typeString": "literal_string \"Sender not authorized to slash\""
                        }
                      ],
                      "id": 37216,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59926,
                        59927
                      ],
                      "referencedDeclaration": 59927,
                      "src": "1060:7:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1060:115:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37229,
                  "nodeType": "ExpressionStatement",
                  "src": "1060:115:117"
                },
                {
                  "id": 37230,
                  "nodeType": "PlaceholderStatement",
                  "src": "1181:1:117"
                }
              ]
            },
            "documentation": null,
            "id": 37232,
            "name": "onlyAuthorizedToSlash",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 37215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1051:2:117"
            },
            "src": "1021:166:117",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 37240,
              "nodeType": "Block",
              "src": "1386:2:117",
              "statements": []
            },
            "documentation": "@notice Sets initialized == true on implementation contracts\n@param test Set to true to skip implementation initialization",
            "id": 37241,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 37237,
                    "name": "test",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37234,
                    "src": "1380:4:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 37238,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 37236,
                  "name": "Initializable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9570,
                  "src": "1366:13:117",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Initializable_$9570_$",
                    "typeString": "type(contract Initializable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1366:19:117"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37234,
                  "name": "test",
                  "nodeType": "VariableDeclaration",
                  "scope": 37241,
                  "src": "1348:9:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 37233,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1348:4:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1347:11:117"
            },
            "returnParameters": {
              "id": 37239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1386:0:117"
            },
            "scope": 37505,
            "src": "1336:52:117",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 37257,
              "nodeType": "Block",
              "src": "1643:75:117",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 37249,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59923,
                          "src": "1668:3:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 37250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1668:10:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 37248,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 480,
                      "src": "1649:18:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 37251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1649:30:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37252,
                  "nodeType": "ExpressionStatement",
                  "src": "1649:30:117"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37254,
                        "name": "registryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37243,
                        "src": "1697:15:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 37253,
                      "name": "setRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13334,
                      "src": "1685:11:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 37255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1685:28:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37256,
                  "nodeType": "ExpressionStatement",
                  "src": "1685:28:117"
                }
              ]
            },
            "documentation": "@notice Used in place of the constructor to allow the contract to be upgradable via proxy.\n@param registryAddress The address of the registry core smart contract.",
            "id": 37258,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 37246,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 37245,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9555,
                  "src": "1631:11:117",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1631:11:117"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37243,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 37258,
                  "src": "1597:23:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37242,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1597:7:117",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1596:25:117"
            },
            "returnParameters": {
              "id": 37247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1643:0:117"
            },
            "scope": 37505,
            "src": "1577:141:117",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 37275,
              "nodeType": "Block",
              "src": "2082:30:117",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 37269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2096:1:117",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 37270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2099:1:117",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 37271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2102:1:117",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 37272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2105:1:117",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "id": 37273,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2095:12:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_1_by_1_$_t_rational_1_by_1_$_t_rational_1_by_1_$_t_rational_0_by_1_$",
                      "typeString": "tuple(int_const 1,int_const 1,int_const 1,int_const 0)"
                    }
                  },
                  "functionReturnParameters": 37268,
                  "id": 37274,
                  "nodeType": "Return",
                  "src": "2088:19:117"
                }
              ]
            },
            "documentation": "@notice Returns the storage, major, minor, and patch version of the contract.\n@return Storage version of the contract.\n@return Major version of the contract.\n@return Minor version of the contract.\n@return Patch version of the contract.",
            "id": 37276,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVersionNumber",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2020:2:117"
            },
            "returnParameters": {
              "id": 37268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37261,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37276,
                  "src": "2046:7:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37260,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2046:7:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37263,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37276,
                  "src": "2055:7:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2055:7:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37265,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37276,
                  "src": "2064:7:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37264,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2064:7:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37267,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37276,
                  "src": "2073:7:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37266,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2073:7:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2045:36:117"
            },
            "scope": 37505,
            "src": "1995:117:117",
            "stateMutability": "pure",
            "superFunction": 14593,
            "visibility": "external"
          },
          {
            "body": {
              "id": 37291,
              "nodeType": "Block",
              "src": "2189:92:117",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 37285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 37283,
                      "name": "slasherExecuter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37190,
                      "src": "2195:15:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 37284,
                      "name": "_slasherExecuter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37278,
                      "src": "2213:16:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2195:34:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 37286,
                  "nodeType": "ExpressionStatement",
                  "src": "2195:34:117"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37288,
                        "name": "_slasherExecuter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37278,
                        "src": "2259:16:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 37287,
                      "name": "SlasherExecuterSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37214,
                      "src": "2240:18:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 37289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2240:36:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37290,
                  "nodeType": "EmitStatement",
                  "src": "2235:41:117"
                }
              ]
            },
            "documentation": null,
            "id": 37292,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 37281,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 37280,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 414,
                  "src": "2179:9:117",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2179:9:117"
              }
            ],
            "name": "setSlasherExecuter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37278,
                  "name": "_slasherExecuter",
                  "nodeType": "VariableDeclaration",
                  "scope": 37292,
                  "src": "2144:24:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37277,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2144:7:117",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2143:26:117"
            },
            "returnParameters": {
              "id": 37282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2189:0:117"
            },
            "scope": 37505,
            "src": "2116:165:117",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 37317,
              "nodeType": "Block",
              "src": "2553:104:117",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 37310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 37301,
                        "name": "slashed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37188,
                        "src": "2559:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 37303,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 37302,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37294,
                        "src": "2567:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2559:16:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 37308,
                          "name": "penalty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37296,
                          "src": "2599:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 37304,
                            "name": "slashed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37188,
                            "src": "2578:7:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 37306,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 37305,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37294,
                            "src": "2586:7:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2578:16:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 37307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 203,
                        "src": "2578:20:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 37309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2578:29:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2559:48:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37311,
                  "nodeType": "ExpressionStatement",
                  "src": "2559:48:117"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37313,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37294,
                        "src": "2635:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37314,
                        "name": "penalty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37296,
                        "src": "2644:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37312,
                      "name": "SlashingApproved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37196,
                      "src": "2618:16:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 37315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2618:34:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37316,
                  "nodeType": "EmitStatement",
                  "src": "2613:39:117"
                }
              ]
            },
            "documentation": "@notice Sets account penalty.\n@param account Address that is punished.\n@param penalty Amount of penalty in wei.\n@dev Only callable by governance.",
            "id": 37318,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 37299,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 37298,
                  "name": "onlyAuthorizedToSlash",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 37232,
                  "src": "2531:21:117",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2531:21:117"
              }
            ],
            "name": "approveSlashing",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37294,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 37318,
                  "src": "2488:15:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37293,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2488:7:117",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37296,
                  "name": "penalty",
                  "nodeType": "VariableDeclaration",
                  "scope": 37318,
                  "src": "2505:15:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37295,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2505:7:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2487:34:117"
            },
            "returnParameters": {
              "id": 37300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2553:0:117"
            },
            "scope": 37505,
            "src": "2463:194:117",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 37376,
              "nodeType": "Block",
              "src": "3225:361:117",
              "statements": [
                {
                  "assignments": [
                    37337
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37337,
                      "name": "penalty",
                      "nodeType": "VariableDeclaration",
                      "scope": 37376,
                      "src": "3231:15:117",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 37336,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3231:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 37341,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 37338,
                      "name": "slashed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37188,
                      "src": "3249:7:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 37340,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 37339,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37320,
                      "src": "3257:7:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3249:16:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3231:34:117"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 37345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 37343,
                          "name": "penalty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37337,
                          "src": "3279:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 37344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3289:1:117",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3279:11:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f2070656e616c747920676976656e20627920676f7665726e616e6365",
                        "id": 37346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3292:32:117",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb6208e69218437b73722e7bd2d4e4366d044980d8fb32393bea44181d218268",
                          "typeString": "literal_string \"No penalty given by governance\""
                        },
                        "value": "No penalty given by governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb6208e69218437b73722e7bd2d4e4366d044980d8fb32393bea44181d218268",
                          "typeString": "literal_string \"No penalty given by governance\""
                        }
                      ],
                      "id": 37342,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59926,
                        59927
                      ],
                      "referencedDeclaration": 59927,
                      "src": "3271:7:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3271:54:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37348,
                  "nodeType": "ExpressionStatement",
                  "src": "3271:54:117"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 37353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 37349,
                        "name": "slashed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37188,
                        "src": "3331:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 37351,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 37350,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37320,
                        "src": "3339:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3331:16:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 37352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3350:1:117",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3331:20:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37354,
                  "nodeType": "ExpressionStatement",
                  "src": "3331:20:117"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37358,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37320,
                        "src": "3386:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37359,
                        "name": "penalty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37337,
                        "src": "3401:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 37361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3424:1:117",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 37360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3416:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 37362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3416:10:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 37363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3434:1:117",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "id": 37364,
                        "name": "electionLessers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37323,
                        "src": "3443:15:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37365,
                        "name": "electionGreaters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37326,
                        "src": "3466:16:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37366,
                        "name": "electionIndices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37329,
                        "src": "3490:15:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 37355,
                          "name": "getLockedGold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13464,
                          "src": "3357:13:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ILockedGold_$43407_$",
                            "typeString": "function () view returns (contract ILockedGold)"
                          }
                        },
                        "id": 37356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3357:15:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILockedGold_$43407",
                          "typeString": "contract ILockedGold"
                        }
                      },
                      "id": 37357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "slash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43327,
                      "src": "3357:21:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256,address[] memory,address[] memory,uint256[] memory) external"
                      }
                    },
                    "id": 37367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3357:154:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37368,
                  "nodeType": "ExpressionStatement",
                  "src": "3357:154:117"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37370,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37320,
                        "src": "3547:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37371,
                        "name": "penalty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37337,
                        "src": "3556:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37369,
                      "name": "GovernanceSlashPerformed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37202,
                      "src": "3522:24:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 37372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3522:42:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37373,
                  "nodeType": "EmitStatement",
                  "src": "3517:47:117"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 37374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3577:4:117",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 37335,
                  "id": 37375,
                  "nodeType": "Return",
                  "src": "3570:11:117"
                }
              ]
            },
            "documentation": "@notice Calls `LockedGold.slash` on `account` if `account` has an entry in `slashed`.\n@param account Account to slash\n@param electionLessers Lesser pointers for slashing locked election gold.\n@param electionGreaters Greater pointers for slashing locked election gold.\n@param electionIndices Indices of groups voted by slashed account.",
            "id": 37377,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 37332,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 37331,
                  "name": "onlyL1",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1585,
                  "src": "3203:6:117",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3203:6:117"
              }
            ],
            "name": "slash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37320,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 37377,
                  "src": "3053:15:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37319,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3053:7:117",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37323,
                  "name": "electionLessers",
                  "nodeType": "VariableDeclaration",
                  "scope": 37377,
                  "src": "3074:34:117",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 37321,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3074:7:117",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 37322,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3074:9:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37326,
                  "name": "electionGreaters",
                  "nodeType": "VariableDeclaration",
                  "scope": 37377,
                  "src": "3114:35:117",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 37324,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3114:7:117",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 37325,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3114:9:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37329,
                  "name": "electionIndices",
                  "nodeType": "VariableDeclaration",
                  "scope": 37377,
                  "src": "3155:34:117",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 37327,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3155:7:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 37328,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3155:9:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3047:146:117"
            },
            "returnParameters": {
              "id": 37335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37334,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37377,
                  "src": "3219:4:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 37333,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3219:4:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3218:6:117"
            },
            "scope": 37505,
            "src": "3033:553:117",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 37483,
              "nodeType": "Block",
              "src": "4197:775:117",
              "statements": [
                {
                  "assignments": [
                    37400
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37400,
                      "name": "penalty",
                      "nodeType": "VariableDeclaration",
                      "scope": 37483,
                      "src": "4203:15:117",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 37399,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4203:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 37404,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 37401,
                      "name": "slashed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37188,
                      "src": "4221:7:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 37403,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 37402,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37379,
                      "src": "4229:7:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4221:16:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4203:34:117"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 37408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 37406,
                          "name": "penalty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37400,
                          "src": "4251:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 37407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4261:1:117",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4251:11:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f2070656e616c747920676976656e20627920676f7665726e616e6365",
                        "id": 37409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4264:32:117",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb6208e69218437b73722e7bd2d4e4366d044980d8fb32393bea44181d218268",
                          "typeString": "literal_string \"No penalty given by governance\""
                        },
                        "value": "No penalty given by governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb6208e69218437b73722e7bd2d4e4366d044980d8fb32393bea44181d218268",
                          "typeString": "literal_string \"No penalty given by governance\""
                        }
                      ],
                      "id": 37405,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59926,
                        59927
                      ],
                      "referencedDeclaration": 59927,
                      "src": "4243:7:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4243:54:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37411,
                  "nodeType": "ExpressionStatement",
                  "src": "4243:54:117"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 37416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 37412,
                        "name": "slashed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37188,
                        "src": "4303:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 37414,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 37413,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37379,
                        "src": "4311:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4303:16:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 37415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4322:1:117",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4303:20:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37417,
                  "nodeType": "ExpressionStatement",
                  "src": "4303:20:117"
                },
                {
                  "assignments": [
                    37419
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37419,
                      "name": "lockedGold",
                      "nodeType": "VariableDeclaration",
                      "scope": 37483,
                      "src": "4330:22:117",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILockedGold_$43407",
                        "typeString": "contract ILockedGold"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 37418,
                        "name": "ILockedGold",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 43407,
                        "src": "4330:11:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILockedGold_$43407",
                          "typeString": "contract ILockedGold"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 37422,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 37420,
                      "name": "getLockedGold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13464,
                      "src": "4355:13:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ILockedGold_$43407_$",
                        "typeString": "function () view returns (contract ILockedGold)"
                      }
                    },
                    "id": 37421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4355:15:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILockedGold_$43407",
                      "typeString": "contract ILockedGold"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4330:40:117"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37426,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37379,
                        "src": "4401:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37427,
                        "name": "penalty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37400,
                        "src": "4416:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 37429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4439:1:117",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 37428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4431:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 37430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4431:10:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 37431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4449:1:117",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "id": 37432,
                        "name": "electionLessers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37384,
                        "src": "4458:15:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37433,
                        "name": "electionGreaters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37387,
                        "src": "4481:16:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37434,
                        "name": "electionIndices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37390,
                        "src": "4505:15:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 37423,
                        "name": "lockedGold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37419,
                        "src": "4377:10:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILockedGold_$43407",
                          "typeString": "contract ILockedGold"
                        }
                      },
                      "id": 37425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "slash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43327,
                      "src": "4377:16:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256,address[] memory,address[] memory,uint256[] memory) external"
                      }
                    },
                    "id": 37435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4377:149:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37436,
                  "nodeType": "ExpressionStatement",
                  "src": "4377:149:117"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 37441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 37437,
                      "name": "group",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37381,
                      "src": "4537:5:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 37439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4554:1:117",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 37438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4546:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 37440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4546:10:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4537:19:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 37474,
                  "nodeType": "IfStatement",
                  "src": "4533:355:117",
                  "trueBody": {
                    "id": 37473,
                    "nodeType": "Block",
                    "src": "4558:330:117",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 37445,
                              "name": "group",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37381,
                              "src": "4592:5:117",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 37446,
                              "name": "penalty",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37400,
                              "src": "4607:7:117",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 37448,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4632:1:117",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 37447,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4624:7:117",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 37449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4624:10:117",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 37450,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4644:1:117",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "argumentTypes": null,
                              "id": 37451,
                              "name": "electionLessers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37384,
                              "src": "4655:15:117",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 37452,
                              "name": "electionGreaters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37387,
                              "src": "4680:16:117",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 37453,
                              "name": "electionIndices",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37390,
                              "src": "4706:15:117",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 37442,
                              "name": "lockedGold",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37419,
                              "src": "4566:10:117",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILockedGold_$43407",
                                "typeString": "contract ILockedGold"
                              }
                            },
                            "id": 37444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "slash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43327,
                            "src": "4566:16:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,uint256,address,uint256,address[] memory,address[] memory,uint256[] memory) external"
                            }
                          },
                          "id": 37454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4566:163:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37455,
                        "nodeType": "ExpressionStatement",
                        "src": "4566:163:117"
                      },
                      {
                        "assignments": [
                          37457
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 37457,
                            "name": "validators",
                            "nodeType": "VariableDeclaration",
                            "scope": 37473,
                            "src": "4737:22:117",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IValidators_$44112",
                              "typeString": "contract IValidators"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 37456,
                              "name": "IValidators",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 44112,
                              "src": "4737:11:117",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IValidators_$44112",
                                "typeString": "contract IValidators"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 37460,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 37458,
                            "name": "getValidators",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13542,
                            "src": "4762:13:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IValidators_$44112_$",
                              "typeString": "function () view returns (contract IValidators)"
                            }
                          },
                          "id": 37459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4762:15:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IValidators_$44112",
                            "typeString": "contract IValidators"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4737:40:117"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 37464,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37379,
                              "src": "4824:7:117",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 37461,
                              "name": "validators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37457,
                              "src": "4785:10:117",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IValidators_$44112",
                                "typeString": "contract IValidators"
                              }
                            },
                            "id": 37463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "forceDeaffiliateIfValidator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43861,
                            "src": "4785:38:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 37465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4785:47:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37466,
                        "nodeType": "ExpressionStatement",
                        "src": "4785:47:117"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 37470,
                              "name": "group",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37381,
                              "src": "4875:5:117",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 37467,
                              "name": "validators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37457,
                              "src": "4840:10:117",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IValidators_$44112",
                                "typeString": "contract IValidators"
                              }
                            },
                            "id": 37469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "halveSlashingMultiplier",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43866,
                            "src": "4840:34:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 37471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4840:41:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37472,
                        "nodeType": "ExpressionStatement",
                        "src": "4840:41:117"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37476,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37379,
                        "src": "4926:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37477,
                        "name": "group",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37381,
                        "src": "4935:5:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37478,
                        "name": "penalty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37400,
                        "src": "4942:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37475,
                      "name": "GovernanceSlashL2Performed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37210,
                      "src": "4899:26:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 37479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4899:51:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37480,
                  "nodeType": "EmitStatement",
                  "src": "4894:56:117"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 37481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4963:4:117",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 37398,
                  "id": 37482,
                  "nodeType": "Return",
                  "src": "4956:11:117"
                }
              ]
            },
            "documentation": "@notice Calls `LockedGold.slash` on `account` if `account` has an entry in `slashed`.\n@param account Account to slash\n@param electionLessers Lesser pointers for slashing locked election gold.\n@param electionGreaters Greater pointers for slashing locked election gold.\n@param electionIndices Indices of groups voted by slashed account.",
            "id": 37484,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 37393,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 37392,
                  "name": "onlyL2",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1598,
                  "src": "4153:6:117",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4153:6:117"
              },
              {
                "arguments": null,
                "id": 37395,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 37394,
                  "name": "onlyAuthorizedToSlash",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 37232,
                  "src": "4160:21:117",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4160:21:117"
              }
            ],
            "name": "slashL2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37379,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 37484,
                  "src": "3984:15:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37378,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3984:7:117",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37381,
                  "name": "group",
                  "nodeType": "VariableDeclaration",
                  "scope": 37484,
                  "src": "4005:13:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37380,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4005:7:117",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37384,
                  "name": "electionLessers",
                  "nodeType": "VariableDeclaration",
                  "scope": 37484,
                  "src": "4024:34:117",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 37382,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4024:7:117",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 37383,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4024:9:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37387,
                  "name": "electionGreaters",
                  "nodeType": "VariableDeclaration",
                  "scope": 37484,
                  "src": "4064:35:117",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 37385,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4064:7:117",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 37386,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4064:9:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37390,
                  "name": "electionIndices",
                  "nodeType": "VariableDeclaration",
                  "scope": 37484,
                  "src": "4105:34:117",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 37388,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4105:7:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 37389,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4105:9:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3978:165:117"
            },
            "returnParameters": {
              "id": 37398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37397,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37484,
                  "src": "4191:4:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 37396,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4191:4:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4190:6:117"
            },
            "scope": 37505,
            "src": "3962:1010:117",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 37495,
              "nodeType": "Block",
              "src": "5176:34:117",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 37491,
                      "name": "slashed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37188,
                      "src": "5189:7:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 37493,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 37492,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37486,
                      "src": "5197:7:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5189:16:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 37490,
                  "id": 37494,
                  "nodeType": "Return",
                  "src": "5182:23:117"
                }
              ]
            },
            "documentation": "@notice Gets account penalty.\n@param account Address that is punished.\n@return Amount slashed.",
            "id": 37496,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApprovedSlashing",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37486,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 37496,
                  "src": "5127:15:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37485,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5127:7:117",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5126:17:117"
            },
            "returnParameters": {
              "id": 37490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37489,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37496,
                  "src": "5167:7:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37488,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5167:7:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5166:9:117"
            },
            "scope": 37505,
            "src": "5098:112:117",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 37503,
              "nodeType": "Block",
              "src": "5276:33:117",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 37501,
                    "name": "slasherExecuter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37190,
                    "src": "5289:15:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 37500,
                  "id": 37502,
                  "nodeType": "Return",
                  "src": "5282:22:117"
                }
              ]
            },
            "documentation": null,
            "id": 37504,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSlasherExecuter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5241:2:117"
            },
            "returnParameters": {
              "id": 37500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37499,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37504,
                  "src": "5267:7:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37498,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5267:7:117",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5266:9:117"
            },
            "scope": 37505,
            "src": "5214:95:117",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 37506,
        "src": "376:4935:117"
      }
    ],
    "src": "0:5312:117"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/governance/GovernanceSlasher.sol",
      "exportedSymbols": {
        "GovernanceSlasher": [
          37505
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".13"
          ]
        },
        "id": 37164,
        "name": "PragmaDirective",
        "src": "0:24:117"
      },
      {
        "attributes": {
          "SourceUnit": 482,
          "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
          "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
          "scope": 37506,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 37165,
        "name": "ImportDirective",
        "src": "26:63:117"
      },
      {
        "attributes": {
          "SourceUnit": 364,
          "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
          "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
          "scope": 37506,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 37166,
        "name": "ImportDirective",
        "src": "90:59:117"
      },
      {
        "attributes": {
          "SourceUnit": 9571,
          "absolutePath": "project:/contracts/common/Initializable.sol",
          "file": "../common/Initializable.sol",
          "scope": 37506,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 37167,
        "name": "ImportDirective",
        "src": "151:37:117"
      },
      {
        "attributes": {
          "SourceUnit": 13583,
          "absolutePath": "project:/contracts/common/UsingRegistry.sol",
          "file": "../common/UsingRegistry.sol",
          "scope": 37506,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 37168,
        "name": "ImportDirective",
        "src": "189:37:117"
      },
      {
        "attributes": {
          "SourceUnit": 44113,
          "absolutePath": "project:/contracts/governance/interfaces/IValidators.sol",
          "file": "./interfaces/IValidators.sol",
          "scope": 37506,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 37169,
        "name": "ImportDirective",
        "src": "227:38:117"
      },
      {
        "attributes": {
          "SourceUnit": 1631,
          "absolutePath": "project:/contracts-0.8/common/IsL2Check.sol",
          "file": "../../contracts-0.8/common/IsL2Check.sol",
          "scope": 37506,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 37170,
        "name": "ImportDirective",
        "src": "266:50:117"
      },
      {
        "attributes": {
          "SourceUnit": 14595,
          "absolutePath": "project:/contracts/common/interfaces/ICeloVersionedContract.sol",
          "file": "../common/interfaces/ICeloVersionedContract.sol",
          "scope": 37506,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 37171,
        "name": "ImportDirective",
        "src": "317:57:117"
      },
      {
        "attributes": {
          "contractDependencies": [
            26,
            481,
            1630,
            9570,
            13582,
            14594
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            37505,
            1630,
            14594,
            13582,
            9570,
            481,
            26
          ],
          "name": "GovernanceSlasher",
          "scope": 37506
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Ownable",
                  "referencedDeclaration": 481,
                  "type": "contract Ownable"
                },
                "id": 37172,
                "name": "UserDefinedTypeName",
                "src": "408:7:117"
              }
            ],
            "id": 37173,
            "name": "InheritanceSpecifier",
            "src": "408:7:117"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Initializable",
                  "referencedDeclaration": 9570,
                  "type": "contract Initializable"
                },
                "id": 37174,
                "name": "UserDefinedTypeName",
                "src": "419:13:117"
              }
            ],
            "id": 37175,
            "name": "InheritanceSpecifier",
            "src": "419:13:117"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "UsingRegistry",
                  "referencedDeclaration": 13582,
                  "type": "contract UsingRegistry"
                },
                "id": 37176,
                "name": "UserDefinedTypeName",
                "src": "436:13:117"
              }
            ],
            "id": 37177,
            "name": "InheritanceSpecifier",
            "src": "436:13:117"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ICeloVersionedContract",
                  "referencedDeclaration": 14594,
                  "type": "contract ICeloVersionedContract"
                },
                "id": 37178,
                "name": "UserDefinedTypeName",
                "src": "453:22:117"
              }
            ],
            "id": 37179,
            "name": "InheritanceSpecifier",
            "src": "453:22:117"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "IsL2Check",
                  "referencedDeclaration": 1630,
                  "type": "contract IsL2Check"
                },
                "id": 37180,
                "name": "UserDefinedTypeName",
                "src": "479:9:117"
              }
            ],
            "id": 37181,
            "name": "InheritanceSpecifier",
            "src": "479:9:117"
          },
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "SafeMath",
                  "referencedDeclaration": 363,
                  "type": "library SafeMath"
                },
                "id": 37182,
                "name": "UserDefinedTypeName",
                "src": "499:8:117"
              },
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 37183,
                "name": "ElementaryTypeName",
                "src": "512:7:117"
              }
            ],
            "id": 37184,
            "name": "UsingForDirective",
            "src": "493:27:117"
          },
          {
            "attributes": {
              "constant": false,
              "name": "slashed",
              "scope": 37505,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => uint256)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => uint256)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 37185,
                    "name": "ElementaryTypeName",
                    "src": "657:7:117"
                  },
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 37186,
                    "name": "ElementaryTypeName",
                    "src": "668:7:117"
                  }
                ],
                "id": 37187,
                "name": "Mapping",
                "src": "649:27:117"
              }
            ],
            "id": 37188,
            "name": "VariableDeclaration",
            "src": "649:35:117"
          },
          {
            "attributes": {
              "constant": false,
              "name": "slasherExecuter",
              "scope": 37505,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 37189,
                "name": "ElementaryTypeName",
                "src": "688:7:117"
              }
            ],
            "id": 37190,
            "name": "VariableDeclaration",
            "src": "688:32:117"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "SlashingApproved"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "account",
                      "scope": 37196,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 37191,
                        "name": "ElementaryTypeName",
                        "src": "748:7:117"
                      }
                    ],
                    "id": 37192,
                    "name": "VariableDeclaration",
                    "src": "748:23:117"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "amount",
                      "scope": 37196,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 37193,
                        "name": "ElementaryTypeName",
                        "src": "773:7:117"
                      }
                    ],
                    "id": 37194,
                    "name": "VariableDeclaration",
                    "src": "773:14:117"
                  }
                ],
                "id": 37195,
                "name": "ParameterList",
                "src": "747:41:117"
              }
            ],
            "id": 37196,
            "name": "EventDefinition",
            "src": "725:64:117"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "GovernanceSlashPerformed"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "account",
                      "scope": 37202,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 37197,
                        "name": "ElementaryTypeName",
                        "src": "823:7:117"
                      }
                    ],
                    "id": 37198,
                    "name": "VariableDeclaration",
                    "src": "823:23:117"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "amount",
                      "scope": 37202,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 37199,
                        "name": "ElementaryTypeName",
                        "src": "848:7:117"
                      }
                    ],
                    "id": 37200,
                    "name": "VariableDeclaration",
                    "src": "848:14:117"
                  }
                ],
                "id": 37201,
                "name": "ParameterList",
                "src": "822:41:117"
              }
            ],
            "id": 37202,
            "name": "EventDefinition",
            "src": "792:72:117"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "GovernanceSlashL2Performed"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "account",
                      "scope": 37210,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 37203,
                        "name": "ElementaryTypeName",
                        "src": "900:7:117"
                      }
                    ],
                    "id": 37204,
                    "name": "VariableDeclaration",
                    "src": "900:23:117"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "group",
                      "scope": 37210,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 37205,
                        "name": "ElementaryTypeName",
                        "src": "925:7:117"
                      }
                    ],
                    "id": 37206,
                    "name": "VariableDeclaration",
                    "src": "925:21:117"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "amount",
                      "scope": 37210,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 37207,
                        "name": "ElementaryTypeName",
                        "src": "948:7:117"
                      }
                    ],
                    "id": 37208,
                    "name": "VariableDeclaration",
                    "src": "948:14:117"
                  }
                ],
                "id": 37209,
                "name": "ParameterList",
                "src": "899:64:117"
              }
            ],
            "id": 37210,
            "name": "EventDefinition",
            "src": "867:97:117"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "SlasherExecuterSet"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "slasherExecuter",
                      "scope": 37214,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 37211,
                        "name": "ElementaryTypeName",
                        "src": "992:7:117"
                      }
                    ],
                    "id": 37212,
                    "name": "VariableDeclaration",
                    "src": "992:23:117"
                  }
                ],
                "id": 37213,
                "name": "ParameterList",
                "src": "991:25:117"
              }
            ],
            "id": 37214,
            "name": "EventDefinition",
            "src": "967:50:117"
          },
          {
            "attributes": {
              "documentation": null,
              "name": "onlyAuthorizedToSlash",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 37215,
                "name": "ParameterList",
                "src": "1051:2:117"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b675a9c778eb076a911e8764cf9d1a924f098513fdf147aef918ec372934dd39",
                                  "typeString": "literal_string \"Sender not authorized to slash\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59926,
                                59927
                              ],
                              "referencedDeclaration": 59927,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 37216,
                            "name": "Identifier",
                            "src": "1060:7:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "||",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "==",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 59923,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 37217,
                                        "name": "Identifier",
                                        "src": "1075:3:117"
                                      }
                                    ],
                                    "id": 37218,
                                    "name": "MemberAccess",
                                    "src": "1075:10:117"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "address",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 404,
                                          "type": "function () view returns (address)",
                                          "value": "owner"
                                        },
                                        "id": 37219,
                                        "name": "Identifier",
                                        "src": "1089:5:117"
                                      }
                                    ],
                                    "id": 37220,
                                    "name": "FunctionCall",
                                    "src": "1089:7:117"
                                  }
                                ],
                                "id": 37221,
                                "name": "BinaryOperation",
                                "src": "1075:21:117"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "==",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 37190,
                                      "type": "address",
                                      "value": "slasherExecuter"
                                    },
                                    "id": 37222,
                                    "name": "Identifier",
                                    "src": "1100:15:117"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 59923,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 37223,
                                        "name": "Identifier",
                                        "src": "1119:3:117"
                                      }
                                    ],
                                    "id": 37224,
                                    "name": "MemberAccess",
                                    "src": "1119:10:117"
                                  }
                                ],
                                "id": 37225,
                                "name": "BinaryOperation",
                                "src": "1100:29:117"
                              }
                            ],
                            "id": 37226,
                            "name": "BinaryOperation",
                            "src": "1075:54:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "53656e646572206e6f7420617574686f72697a656420746f20736c617368",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Sender not authorized to slash\"",
                              "value": "Sender not authorized to slash"
                            },
                            "id": 37227,
                            "name": "Literal",
                            "src": "1137:32:117"
                          }
                        ],
                        "id": 37228,
                        "name": "FunctionCall",
                        "src": "1060:115:117"
                      }
                    ],
                    "id": 37229,
                    "name": "ExpressionStatement",
                    "src": "1060:115:117"
                  },
                  {
                    "id": 37230,
                    "name": "PlaceholderStatement",
                    "src": "1181:1:117"
                  }
                ],
                "id": 37231,
                "name": "Block",
                "src": "1054:133:117"
              }
            ],
            "id": 37232,
            "name": "ModifierDefinition",
            "src": "1021:166:117"
          },
          {
            "attributes": {
              "documentation": "@notice Sets initialized == true on implementation contracts\n@param test Set to true to skip implementation initialization",
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 37505,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "test",
                      "scope": 37241,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 37233,
                        "name": "ElementaryTypeName",
                        "src": "1348:4:117"
                      }
                    ],
                    "id": 37234,
                    "name": "VariableDeclaration",
                    "src": "1348:9:117"
                  }
                ],
                "id": 37235,
                "name": "ParameterList",
                "src": "1347:11:117"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 37239,
                "name": "ParameterList",
                "src": "1386:0:117"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 9570,
                      "type": "type(contract Initializable)",
                      "value": "Initializable"
                    },
                    "id": 37236,
                    "name": "Identifier",
                    "src": "1366:13:117"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 37234,
                      "type": "bool",
                      "value": "test"
                    },
                    "id": 37237,
                    "name": "Identifier",
                    "src": "1380:4:117"
                  }
                ],
                "id": 37238,
                "name": "ModifierInvocation",
                "src": "1366:19:117"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 37240,
                "name": "Block",
                "src": "1386:2:117"
              }
            ],
            "id": 37241,
            "name": "FunctionDefinition",
            "src": "1336:52:117"
          },
          {
            "attributes": {
              "documentation": "@notice Used in place of the constructor to allow the contract to be upgradable via proxy.\n@param registryAddress The address of the registry core smart contract.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "initialize",
              "scope": 37505,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "registryAddress",
                      "scope": 37258,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 37242,
                        "name": "ElementaryTypeName",
                        "src": "1597:7:117"
                      }
                    ],
                    "id": 37243,
                    "name": "VariableDeclaration",
                    "src": "1597:23:117"
                  }
                ],
                "id": 37244,
                "name": "ParameterList",
                "src": "1596:25:117"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 37247,
                "name": "ParameterList",
                "src": "1643:0:117"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 9555,
                      "type": "modifier ()",
                      "value": "initializer"
                    },
                    "id": 37245,
                    "name": "Identifier",
                    "src": "1631:11:117"
                  }
                ],
                "id": 37246,
                "name": "ModifierInvocation",
                "src": "1631:11:117"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 480,
                              "type": "function (address)",
                              "value": "_transferOwnership"
                            },
                            "id": 37248,
                            "name": "Identifier",
                            "src": "1649:18:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 59923,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 37249,
                                "name": "Identifier",
                                "src": "1668:3:117"
                              }
                            ],
                            "id": 37250,
                            "name": "MemberAccess",
                            "src": "1668:10:117"
                          }
                        ],
                        "id": 37251,
                        "name": "FunctionCall",
                        "src": "1649:30:117"
                      }
                    ],
                    "id": 37252,
                    "name": "ExpressionStatement",
                    "src": "1649:30:117"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 13334,
                              "type": "function (address)",
                              "value": "setRegistry"
                            },
                            "id": 37253,
                            "name": "Identifier",
                            "src": "1685:11:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37243,
                              "type": "address",
                              "value": "registryAddress"
                            },
                            "id": 37254,
                            "name": "Identifier",
                            "src": "1697:15:117"
                          }
                        ],
                        "id": 37255,
                        "name": "FunctionCall",
                        "src": "1685:28:117"
                      }
                    ],
                    "id": 37256,
                    "name": "ExpressionStatement",
                    "src": "1685:28:117"
                  }
                ],
                "id": 37257,
                "name": "Block",
                "src": "1643:75:117"
              }
            ],
            "id": 37258,
            "name": "FunctionDefinition",
            "src": "1577:141:117"
          },
          {
            "attributes": {
              "documentation": "@notice Returns the storage, major, minor, and patch version of the contract.\n@return Storage version of the contract.\n@return Major version of the contract.\n@return Minor version of the contract.\n@return Patch version of the contract.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getVersionNumber",
              "scope": 37505,
              "stateMutability": "pure",
              "superFunction": 14593,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 37259,
                "name": "ParameterList",
                "src": "2020:2:117"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 37276,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 37260,
                        "name": "ElementaryTypeName",
                        "src": "2046:7:117"
                      }
                    ],
                    "id": 37261,
                    "name": "VariableDeclaration",
                    "src": "2046:7:117"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 37276,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 37262,
                        "name": "ElementaryTypeName",
                        "src": "2055:7:117"
                      }
                    ],
                    "id": 37263,
                    "name": "VariableDeclaration",
                    "src": "2055:7:117"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 37276,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 37264,
                        "name": "ElementaryTypeName",
                        "src": "2064:7:117"
                      }
                    ],
                    "id": 37265,
                    "name": "VariableDeclaration",
                    "src": "2064:7:117"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 37276,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 37266,
                        "name": "ElementaryTypeName",
                        "src": "2073:7:117"
                      }
                    ],
                    "id": 37267,
                    "name": "VariableDeclaration",
                    "src": "2073:7:117"
                  }
                ],
                "id": 37268,
                "name": "ParameterList",
                "src": "2045:36:117"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 37268
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "type": "tuple(int_const 1,int_const 1,int_const 1,int_const 0)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 37269,
                            "name": "Literal",
                            "src": "2096:1:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 37270,
                            "name": "Literal",
                            "src": "2099:1:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 37271,
                            "name": "Literal",
                            "src": "2102:1:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 37272,
                            "name": "Literal",
                            "src": "2105:1:117"
                          }
                        ],
                        "id": 37273,
                        "name": "TupleExpression",
                        "src": "2095:12:117"
                      }
                    ],
                    "id": 37274,
                    "name": "Return",
                    "src": "2088:19:117"
                  }
                ],
                "id": 37275,
                "name": "Block",
                "src": "2082:30:117"
              }
            ],
            "id": 37276,
            "name": "FunctionDefinition",
            "src": "1995:117:117"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "setSlasherExecuter",
              "scope": 37505,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_slasherExecuter",
                      "scope": 37292,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 37277,
                        "name": "ElementaryTypeName",
                        "src": "2144:7:117"
                      }
                    ],
                    "id": 37278,
                    "name": "VariableDeclaration",
                    "src": "2144:24:117"
                  }
                ],
                "id": 37279,
                "name": "ParameterList",
                "src": "2143:26:117"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 37282,
                "name": "ParameterList",
                "src": "2189:0:117"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 414,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 37280,
                    "name": "Identifier",
                    "src": "2179:9:117"
                  }
                ],
                "id": 37281,
                "name": "ModifierInvocation",
                "src": "2179:9:117"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37190,
                              "type": "address",
                              "value": "slasherExecuter"
                            },
                            "id": 37283,
                            "name": "Identifier",
                            "src": "2195:15:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37278,
                              "type": "address",
                              "value": "_slasherExecuter"
                            },
                            "id": 37284,
                            "name": "Identifier",
                            "src": "2213:16:117"
                          }
                        ],
                        "id": 37285,
                        "name": "Assignment",
                        "src": "2195:34:117"
                      }
                    ],
                    "id": 37286,
                    "name": "ExpressionStatement",
                    "src": "2195:34:117"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37214,
                              "type": "function (address)",
                              "value": "SlasherExecuterSet"
                            },
                            "id": 37287,
                            "name": "Identifier",
                            "src": "2240:18:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37278,
                              "type": "address",
                              "value": "_slasherExecuter"
                            },
                            "id": 37288,
                            "name": "Identifier",
                            "src": "2259:16:117"
                          }
                        ],
                        "id": 37289,
                        "name": "FunctionCall",
                        "src": "2240:36:117"
                      }
                    ],
                    "id": 37290,
                    "name": "EmitStatement",
                    "src": "2235:41:117"
                  }
                ],
                "id": 37291,
                "name": "Block",
                "src": "2189:92:117"
              }
            ],
            "id": 37292,
            "name": "FunctionDefinition",
            "src": "2116:165:117"
          },
          {
            "attributes": {
              "documentation": "@notice Sets account penalty.\n@param account Address that is punished.\n@param penalty Amount of penalty in wei.\n@dev Only callable by governance.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "approveSlashing",
              "scope": 37505,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "account",
                      "scope": 37318,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 37293,
                        "name": "ElementaryTypeName",
                        "src": "2488:7:117"
                      }
                    ],
                    "id": 37294,
                    "name": "VariableDeclaration",
                    "src": "2488:15:117"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "penalty",
                      "scope": 37318,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 37295,
                        "name": "ElementaryTypeName",
                        "src": "2505:7:117"
                      }
                    ],
                    "id": 37296,
                    "name": "VariableDeclaration",
                    "src": "2505:15:117"
                  }
                ],
                "id": 37297,
                "name": "ParameterList",
                "src": "2487:34:117"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 37300,
                "name": "ParameterList",
                "src": "2553:0:117"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 37232,
                      "type": "modifier ()",
                      "value": "onlyAuthorizedToSlash"
                    },
                    "id": 37298,
                    "name": "Identifier",
                    "src": "2531:21:117"
                  }
                ],
                "id": 37299,
                "name": "ModifierInvocation",
                "src": "2531:21:117"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 37188,
                                  "type": "mapping(address => uint256)",
                                  "value": "slashed"
                                },
                                "id": 37301,
                                "name": "Identifier",
                                "src": "2559:7:117"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 37294,
                                  "type": "address",
                                  "value": "account"
                                },
                                "id": 37302,
                                "name": "Identifier",
                                "src": "2567:7:117"
                              }
                            ],
                            "id": 37303,
                            "name": "IndexAccess",
                            "src": "2559:16:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "add",
                                  "referencedDeclaration": 203,
                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 37188,
                                          "type": "mapping(address => uint256)",
                                          "value": "slashed"
                                        },
                                        "id": 37304,
                                        "name": "Identifier",
                                        "src": "2578:7:117"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 37294,
                                          "type": "address",
                                          "value": "account"
                                        },
                                        "id": 37305,
                                        "name": "Identifier",
                                        "src": "2586:7:117"
                                      }
                                    ],
                                    "id": 37306,
                                    "name": "IndexAccess",
                                    "src": "2578:16:117"
                                  }
                                ],
                                "id": 37307,
                                "name": "MemberAccess",
                                "src": "2578:20:117"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 37296,
                                  "type": "uint256",
                                  "value": "penalty"
                                },
                                "id": 37308,
                                "name": "Identifier",
                                "src": "2599:7:117"
                              }
                            ],
                            "id": 37309,
                            "name": "FunctionCall",
                            "src": "2578:29:117"
                          }
                        ],
                        "id": 37310,
                        "name": "Assignment",
                        "src": "2559:48:117"
                      }
                    ],
                    "id": 37311,
                    "name": "ExpressionStatement",
                    "src": "2559:48:117"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37196,
                              "type": "function (address,uint256)",
                              "value": "SlashingApproved"
                            },
                            "id": 37312,
                            "name": "Identifier",
                            "src": "2618:16:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37294,
                              "type": "address",
                              "value": "account"
                            },
                            "id": 37313,
                            "name": "Identifier",
                            "src": "2635:7:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37296,
                              "type": "uint256",
                              "value": "penalty"
                            },
                            "id": 37314,
                            "name": "Identifier",
                            "src": "2644:7:117"
                          }
                        ],
                        "id": 37315,
                        "name": "FunctionCall",
                        "src": "2618:34:117"
                      }
                    ],
                    "id": 37316,
                    "name": "EmitStatement",
                    "src": "2613:39:117"
                  }
                ],
                "id": 37317,
                "name": "Block",
                "src": "2553:104:117"
              }
            ],
            "id": 37318,
            "name": "FunctionDefinition",
            "src": "2463:194:117"
          },
          {
            "attributes": {
              "documentation": "@notice Calls `LockedGold.slash` on `account` if `account` has an entry in `slashed`.\n@param account Account to slash\n@param electionLessers Lesser pointers for slashing locked election gold.\n@param electionGreaters Greater pointers for slashing locked election gold.\n@param electionIndices Indices of groups voted by slashed account.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "slash",
              "scope": 37505,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "account",
                      "scope": 37377,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 37319,
                        "name": "ElementaryTypeName",
                        "src": "3053:7:117"
                      }
                    ],
                    "id": 37320,
                    "name": "VariableDeclaration",
                    "src": "3053:15:117"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "electionLessers",
                      "scope": 37377,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "address[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "address[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 37321,
                            "name": "ElementaryTypeName",
                            "src": "3074:7:117"
                          }
                        ],
                        "id": 37322,
                        "name": "ArrayTypeName",
                        "src": "3074:9:117"
                      }
                    ],
                    "id": 37323,
                    "name": "VariableDeclaration",
                    "src": "3074:34:117"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "electionGreaters",
                      "scope": 37377,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "address[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "address[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 37324,
                            "name": "ElementaryTypeName",
                            "src": "3114:7:117"
                          }
                        ],
                        "id": 37325,
                        "name": "ArrayTypeName",
                        "src": "3114:9:117"
                      }
                    ],
                    "id": 37326,
                    "name": "VariableDeclaration",
                    "src": "3114:35:117"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "electionIndices",
                      "scope": 37377,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "uint256[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 37327,
                            "name": "ElementaryTypeName",
                            "src": "3155:7:117"
                          }
                        ],
                        "id": 37328,
                        "name": "ArrayTypeName",
                        "src": "3155:9:117"
                      }
                    ],
                    "id": 37329,
                    "name": "VariableDeclaration",
                    "src": "3155:34:117"
                  }
                ],
                "id": 37330,
                "name": "ParameterList",
                "src": "3047:146:117"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 37377,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 37333,
                        "name": "ElementaryTypeName",
                        "src": "3219:4:117"
                      }
                    ],
                    "id": 37334,
                    "name": "VariableDeclaration",
                    "src": "3219:4:117"
                  }
                ],
                "id": 37335,
                "name": "ParameterList",
                "src": "3218:6:117"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1585,
                      "type": "modifier ()",
                      "value": "onlyL1"
                    },
                    "id": 37331,
                    "name": "Identifier",
                    "src": "3203:6:117"
                  }
                ],
                "id": 37332,
                "name": "ModifierInvocation",
                "src": "3203:6:117"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        37337
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "penalty",
                          "scope": 37376,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 37336,
                            "name": "ElementaryTypeName",
                            "src": "3231:7:117"
                          }
                        ],
                        "id": 37337,
                        "name": "VariableDeclaration",
                        "src": "3231:15:117"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37188,
                              "type": "mapping(address => uint256)",
                              "value": "slashed"
                            },
                            "id": 37338,
                            "name": "Identifier",
                            "src": "3249:7:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37320,
                              "type": "address",
                              "value": "account"
                            },
                            "id": 37339,
                            "name": "Identifier",
                            "src": "3257:7:117"
                          }
                        ],
                        "id": 37340,
                        "name": "IndexAccess",
                        "src": "3249:16:117"
                      }
                    ],
                    "id": 37341,
                    "name": "VariableDeclarationStatement",
                    "src": "3231:34:117"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_fb6208e69218437b73722e7bd2d4e4366d044980d8fb32393bea44181d218268",
                                  "typeString": "literal_string \"No penalty given by governance\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59926,
                                59927
                              ],
                              "referencedDeclaration": 59927,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 37342,
                            "name": "Identifier",
                            "src": "3271:7:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 37337,
                                  "type": "uint256",
                                  "value": "penalty"
                                },
                                "id": 37343,
                                "name": "Identifier",
                                "src": "3279:7:117"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 37344,
                                "name": "Literal",
                                "src": "3289:1:117"
                              }
                            ],
                            "id": 37345,
                            "name": "BinaryOperation",
                            "src": "3279:11:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4e6f2070656e616c747920676976656e20627920676f7665726e616e6365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"No penalty given by governance\"",
                              "value": "No penalty given by governance"
                            },
                            "id": 37346,
                            "name": "Literal",
                            "src": "3292:32:117"
                          }
                        ],
                        "id": 37347,
                        "name": "FunctionCall",
                        "src": "3271:54:117"
                      }
                    ],
                    "id": 37348,
                    "name": "ExpressionStatement",
                    "src": "3271:54:117"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 37188,
                                  "type": "mapping(address => uint256)",
                                  "value": "slashed"
                                },
                                "id": 37349,
                                "name": "Identifier",
                                "src": "3331:7:117"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 37320,
                                  "type": "address",
                                  "value": "account"
                                },
                                "id": 37350,
                                "name": "Identifier",
                                "src": "3339:7:117"
                              }
                            ],
                            "id": 37351,
                            "name": "IndexAccess",
                            "src": "3331:16:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 37352,
                            "name": "Literal",
                            "src": "3350:1:117"
                          }
                        ],
                        "id": 37353,
                        "name": "Assignment",
                        "src": "3331:20:117"
                      }
                    ],
                    "id": 37354,
                    "name": "ExpressionStatement",
                    "src": "3331:20:117"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "slash",
                              "referencedDeclaration": 43327,
                              "type": "function (address,uint256,address,uint256,address[] memory,address[] memory,uint256[] memory) external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "contract ILockedGold",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 13464,
                                      "type": "function () view returns (contract ILockedGold)",
                                      "value": "getLockedGold"
                                    },
                                    "id": 37355,
                                    "name": "Identifier",
                                    "src": "3357:13:117"
                                  }
                                ],
                                "id": 37356,
                                "name": "FunctionCall",
                                "src": "3357:15:117"
                              }
                            ],
                            "id": 37357,
                            "name": "MemberAccess",
                            "src": "3357:21:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37320,
                              "type": "address",
                              "value": "account"
                            },
                            "id": 37358,
                            "name": "Identifier",
                            "src": "3386:7:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37337,
                              "type": "uint256",
                              "value": "penalty"
                            },
                            "id": 37359,
                            "name": "Identifier",
                            "src": "3401:7:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)",
                                  "value": "address"
                                },
                                "id": 37360,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3416:7:117"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 37361,
                                "name": "Literal",
                                "src": "3424:1:117"
                              }
                            ],
                            "id": 37362,
                            "name": "FunctionCall",
                            "src": "3416:10:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 37363,
                            "name": "Literal",
                            "src": "3434:1:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37323,
                              "type": "address[] calldata",
                              "value": "electionLessers"
                            },
                            "id": 37364,
                            "name": "Identifier",
                            "src": "3443:15:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37326,
                              "type": "address[] calldata",
                              "value": "electionGreaters"
                            },
                            "id": 37365,
                            "name": "Identifier",
                            "src": "3466:16:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37329,
                              "type": "uint256[] calldata",
                              "value": "electionIndices"
                            },
                            "id": 37366,
                            "name": "Identifier",
                            "src": "3490:15:117"
                          }
                        ],
                        "id": 37367,
                        "name": "FunctionCall",
                        "src": "3357:154:117"
                      }
                    ],
                    "id": 37368,
                    "name": "ExpressionStatement",
                    "src": "3357:154:117"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37202,
                              "type": "function (address,uint256)",
                              "value": "GovernanceSlashPerformed"
                            },
                            "id": 37369,
                            "name": "Identifier",
                            "src": "3522:24:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37320,
                              "type": "address",
                              "value": "account"
                            },
                            "id": 37370,
                            "name": "Identifier",
                            "src": "3547:7:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37337,
                              "type": "uint256",
                              "value": "penalty"
                            },
                            "id": 37371,
                            "name": "Identifier",
                            "src": "3556:7:117"
                          }
                        ],
                        "id": 37372,
                        "name": "FunctionCall",
                        "src": "3522:42:117"
                      }
                    ],
                    "id": 37373,
                    "name": "EmitStatement",
                    "src": "3517:47:117"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 37335
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 37374,
                        "name": "Literal",
                        "src": "3577:4:117"
                      }
                    ],
                    "id": 37375,
                    "name": "Return",
                    "src": "3570:11:117"
                  }
                ],
                "id": 37376,
                "name": "Block",
                "src": "3225:361:117"
              }
            ],
            "id": 37377,
            "name": "FunctionDefinition",
            "src": "3033:553:117"
          },
          {
            "attributes": {
              "documentation": "@notice Calls `LockedGold.slash` on `account` if `account` has an entry in `slashed`.\n@param account Account to slash\n@param electionLessers Lesser pointers for slashing locked election gold.\n@param electionGreaters Greater pointers for slashing locked election gold.\n@param electionIndices Indices of groups voted by slashed account.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "slashL2",
              "scope": 37505,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "account",
                      "scope": 37484,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 37378,
                        "name": "ElementaryTypeName",
                        "src": "3984:7:117"
                      }
                    ],
                    "id": 37379,
                    "name": "VariableDeclaration",
                    "src": "3984:15:117"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "group",
                      "scope": 37484,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 37380,
                        "name": "ElementaryTypeName",
                        "src": "4005:7:117"
                      }
                    ],
                    "id": 37381,
                    "name": "VariableDeclaration",
                    "src": "4005:13:117"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "electionLessers",
                      "scope": 37484,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "address[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "address[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 37382,
                            "name": "ElementaryTypeName",
                            "src": "4024:7:117"
                          }
                        ],
                        "id": 37383,
                        "name": "ArrayTypeName",
                        "src": "4024:9:117"
                      }
                    ],
                    "id": 37384,
                    "name": "VariableDeclaration",
                    "src": "4024:34:117"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "electionGreaters",
                      "scope": 37484,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "address[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "address[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 37385,
                            "name": "ElementaryTypeName",
                            "src": "4064:7:117"
                          }
                        ],
                        "id": 37386,
                        "name": "ArrayTypeName",
                        "src": "4064:9:117"
                      }
                    ],
                    "id": 37387,
                    "name": "VariableDeclaration",
                    "src": "4064:35:117"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "electionIndices",
                      "scope": 37484,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "uint256[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 37388,
                            "name": "ElementaryTypeName",
                            "src": "4105:7:117"
                          }
                        ],
                        "id": 37389,
                        "name": "ArrayTypeName",
                        "src": "4105:9:117"
                      }
                    ],
                    "id": 37390,
                    "name": "VariableDeclaration",
                    "src": "4105:34:117"
                  }
                ],
                "id": 37391,
                "name": "ParameterList",
                "src": "3978:165:117"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 37484,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 37396,
                        "name": "ElementaryTypeName",
                        "src": "4191:4:117"
                      }
                    ],
                    "id": 37397,
                    "name": "VariableDeclaration",
                    "src": "4191:4:117"
                  }
                ],
                "id": 37398,
                "name": "ParameterList",
                "src": "4190:6:117"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1598,
                      "type": "modifier ()",
                      "value": "onlyL2"
                    },
                    "id": 37392,
                    "name": "Identifier",
                    "src": "4153:6:117"
                  }
                ],
                "id": 37393,
                "name": "ModifierInvocation",
                "src": "4153:6:117"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 37232,
                      "type": "modifier ()",
                      "value": "onlyAuthorizedToSlash"
                    },
                    "id": 37394,
                    "name": "Identifier",
                    "src": "4160:21:117"
                  }
                ],
                "id": 37395,
                "name": "ModifierInvocation",
                "src": "4160:21:117"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        37400
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "penalty",
                          "scope": 37483,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 37399,
                            "name": "ElementaryTypeName",
                            "src": "4203:7:117"
                          }
                        ],
                        "id": 37400,
                        "name": "VariableDeclaration",
                        "src": "4203:15:117"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37188,
                              "type": "mapping(address => uint256)",
                              "value": "slashed"
                            },
                            "id": 37401,
                            "name": "Identifier",
                            "src": "4221:7:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37379,
                              "type": "address",
                              "value": "account"
                            },
                            "id": 37402,
                            "name": "Identifier",
                            "src": "4229:7:117"
                          }
                        ],
                        "id": 37403,
                        "name": "IndexAccess",
                        "src": "4221:16:117"
                      }
                    ],
                    "id": 37404,
                    "name": "VariableDeclarationStatement",
                    "src": "4203:34:117"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_fb6208e69218437b73722e7bd2d4e4366d044980d8fb32393bea44181d218268",
                                  "typeString": "literal_string \"No penalty given by governance\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59926,
                                59927
                              ],
                              "referencedDeclaration": 59927,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 37405,
                            "name": "Identifier",
                            "src": "4243:7:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 37400,
                                  "type": "uint256",
                                  "value": "penalty"
                                },
                                "id": 37406,
                                "name": "Identifier",
                                "src": "4251:7:117"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 37407,
                                "name": "Literal",
                                "src": "4261:1:117"
                              }
                            ],
                            "id": 37408,
                            "name": "BinaryOperation",
                            "src": "4251:11:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4e6f2070656e616c747920676976656e20627920676f7665726e616e6365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"No penalty given by governance\"",
                              "value": "No penalty given by governance"
                            },
                            "id": 37409,
                            "name": "Literal",
                            "src": "4264:32:117"
                          }
                        ],
                        "id": 37410,
                        "name": "FunctionCall",
                        "src": "4243:54:117"
                      }
                    ],
                    "id": 37411,
                    "name": "ExpressionStatement",
                    "src": "4243:54:117"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 37188,
                                  "type": "mapping(address => uint256)",
                                  "value": "slashed"
                                },
                                "id": 37412,
                                "name": "Identifier",
                                "src": "4303:7:117"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 37379,
                                  "type": "address",
                                  "value": "account"
                                },
                                "id": 37413,
                                "name": "Identifier",
                                "src": "4311:7:117"
                              }
                            ],
                            "id": 37414,
                            "name": "IndexAccess",
                            "src": "4303:16:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 37415,
                            "name": "Literal",
                            "src": "4322:1:117"
                          }
                        ],
                        "id": 37416,
                        "name": "Assignment",
                        "src": "4303:20:117"
                      }
                    ],
                    "id": 37417,
                    "name": "ExpressionStatement",
                    "src": "4303:20:117"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        37419
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "lockedGold",
                          "scope": 37483,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract ILockedGold",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "ILockedGold",
                              "referencedDeclaration": 43407,
                              "type": "contract ILockedGold"
                            },
                            "id": 37418,
                            "name": "UserDefinedTypeName",
                            "src": "4330:11:117"
                          }
                        ],
                        "id": 37419,
                        "name": "VariableDeclaration",
                        "src": "4330:22:117"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "contract ILockedGold",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 13464,
                              "type": "function () view returns (contract ILockedGold)",
                              "value": "getLockedGold"
                            },
                            "id": 37420,
                            "name": "Identifier",
                            "src": "4355:13:117"
                          }
                        ],
                        "id": 37421,
                        "name": "FunctionCall",
                        "src": "4355:15:117"
                      }
                    ],
                    "id": 37422,
                    "name": "VariableDeclarationStatement",
                    "src": "4330:40:117"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "slash",
                              "referencedDeclaration": 43327,
                              "type": "function (address,uint256,address,uint256,address[] memory,address[] memory,uint256[] memory) external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 37419,
                                  "type": "contract ILockedGold",
                                  "value": "lockedGold"
                                },
                                "id": 37423,
                                "name": "Identifier",
                                "src": "4377:10:117"
                              }
                            ],
                            "id": 37425,
                            "name": "MemberAccess",
                            "src": "4377:16:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37379,
                              "type": "address",
                              "value": "account"
                            },
                            "id": 37426,
                            "name": "Identifier",
                            "src": "4401:7:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37400,
                              "type": "uint256",
                              "value": "penalty"
                            },
                            "id": 37427,
                            "name": "Identifier",
                            "src": "4416:7:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)",
                                  "value": "address"
                                },
                                "id": 37428,
                                "name": "ElementaryTypeNameExpression",
                                "src": "4431:7:117"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 37429,
                                "name": "Literal",
                                "src": "4439:1:117"
                              }
                            ],
                            "id": 37430,
                            "name": "FunctionCall",
                            "src": "4431:10:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 37431,
                            "name": "Literal",
                            "src": "4449:1:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37384,
                              "type": "address[] calldata",
                              "value": "electionLessers"
                            },
                            "id": 37432,
                            "name": "Identifier",
                            "src": "4458:15:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37387,
                              "type": "address[] calldata",
                              "value": "electionGreaters"
                            },
                            "id": 37433,
                            "name": "Identifier",
                            "src": "4481:16:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37390,
                              "type": "uint256[] calldata",
                              "value": "electionIndices"
                            },
                            "id": 37434,
                            "name": "Identifier",
                            "src": "4505:15:117"
                          }
                        ],
                        "id": 37435,
                        "name": "FunctionCall",
                        "src": "4377:149:117"
                      }
                    ],
                    "id": 37436,
                    "name": "ExpressionStatement",
                    "src": "4377:149:117"
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "!=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37381,
                              "type": "address",
                              "value": "group"
                            },
                            "id": 37437,
                            "name": "Identifier",
                            "src": "4537:5:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)",
                                  "value": "address"
                                },
                                "id": 37438,
                                "name": "ElementaryTypeNameExpression",
                                "src": "4546:7:117"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 37439,
                                "name": "Literal",
                                "src": "4554:1:117"
                              }
                            ],
                            "id": 37440,
                            "name": "FunctionCall",
                            "src": "4546:10:117"
                          }
                        ],
                        "id": 37441,
                        "name": "BinaryOperation",
                        "src": "4537:19:117"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        },
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        {
                                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                          "typeString": "address[] calldata"
                                        },
                                        {
                                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                          "typeString": "address[] calldata"
                                        },
                                        {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                          "typeString": "uint256[] calldata"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "slash",
                                      "referencedDeclaration": 43327,
                                      "type": "function (address,uint256,address,uint256,address[] memory,address[] memory,uint256[] memory) external"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 37419,
                                          "type": "contract ILockedGold",
                                          "value": "lockedGold"
                                        },
                                        "id": 37442,
                                        "name": "Identifier",
                                        "src": "4566:10:117"
                                      }
                                    ],
                                    "id": 37444,
                                    "name": "MemberAccess",
                                    "src": "4566:16:117"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 37381,
                                      "type": "address",
                                      "value": "group"
                                    },
                                    "id": 37445,
                                    "name": "Identifier",
                                    "src": "4592:5:117"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 37400,
                                      "type": "uint256",
                                      "value": "penalty"
                                    },
                                    "id": 37446,
                                    "name": "Identifier",
                                    "src": "4607:7:117"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "address payable",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(address)",
                                          "value": "address"
                                        },
                                        "id": 37447,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "4624:7:117"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "30",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 0",
                                          "value": "0"
                                        },
                                        "id": 37448,
                                        "name": "Literal",
                                        "src": "4632:1:117"
                                      }
                                    ],
                                    "id": 37449,
                                    "name": "FunctionCall",
                                    "src": "4624:10:117"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 37450,
                                    "name": "Literal",
                                    "src": "4644:1:117"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 37384,
                                      "type": "address[] calldata",
                                      "value": "electionLessers"
                                    },
                                    "id": 37451,
                                    "name": "Identifier",
                                    "src": "4655:15:117"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 37387,
                                      "type": "address[] calldata",
                                      "value": "electionGreaters"
                                    },
                                    "id": 37452,
                                    "name": "Identifier",
                                    "src": "4680:16:117"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 37390,
                                      "type": "uint256[] calldata",
                                      "value": "electionIndices"
                                    },
                                    "id": 37453,
                                    "name": "Identifier",
                                    "src": "4706:15:117"
                                  }
                                ],
                                "id": 37454,
                                "name": "FunctionCall",
                                "src": "4566:163:117"
                              }
                            ],
                            "id": 37455,
                            "name": "ExpressionStatement",
                            "src": "4566:163:117"
                          },
                          {
                            "attributes": {
                              "assignments": [
                                37457
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "validators",
                                  "scope": 37473,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "contract IValidators",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "contractScope": null,
                                      "name": "IValidators",
                                      "referencedDeclaration": 44112,
                                      "type": "contract IValidators"
                                    },
                                    "id": 37456,
                                    "name": "UserDefinedTypeName",
                                    "src": "4737:11:117"
                                  }
                                ],
                                "id": 37457,
                                "name": "VariableDeclaration",
                                "src": "4737:22:117"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "contract IValidators",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 13542,
                                      "type": "function () view returns (contract IValidators)",
                                      "value": "getValidators"
                                    },
                                    "id": 37458,
                                    "name": "Identifier",
                                    "src": "4762:13:117"
                                  }
                                ],
                                "id": 37459,
                                "name": "FunctionCall",
                                "src": "4762:15:117"
                              }
                            ],
                            "id": 37460,
                            "name": "VariableDeclarationStatement",
                            "src": "4737:40:117"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "forceDeaffiliateIfValidator",
                                      "referencedDeclaration": 43861,
                                      "type": "function (address) external"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 37457,
                                          "type": "contract IValidators",
                                          "value": "validators"
                                        },
                                        "id": 37461,
                                        "name": "Identifier",
                                        "src": "4785:10:117"
                                      }
                                    ],
                                    "id": 37463,
                                    "name": "MemberAccess",
                                    "src": "4785:38:117"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 37379,
                                      "type": "address",
                                      "value": "account"
                                    },
                                    "id": 37464,
                                    "name": "Identifier",
                                    "src": "4824:7:117"
                                  }
                                ],
                                "id": 37465,
                                "name": "FunctionCall",
                                "src": "4785:47:117"
                              }
                            ],
                            "id": 37466,
                            "name": "ExpressionStatement",
                            "src": "4785:47:117"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "halveSlashingMultiplier",
                                      "referencedDeclaration": 43866,
                                      "type": "function (address) external"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 37457,
                                          "type": "contract IValidators",
                                          "value": "validators"
                                        },
                                        "id": 37467,
                                        "name": "Identifier",
                                        "src": "4840:10:117"
                                      }
                                    ],
                                    "id": 37469,
                                    "name": "MemberAccess",
                                    "src": "4840:34:117"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 37381,
                                      "type": "address",
                                      "value": "group"
                                    },
                                    "id": 37470,
                                    "name": "Identifier",
                                    "src": "4875:5:117"
                                  }
                                ],
                                "id": 37471,
                                "name": "FunctionCall",
                                "src": "4840:41:117"
                              }
                            ],
                            "id": 37472,
                            "name": "ExpressionStatement",
                            "src": "4840:41:117"
                          }
                        ],
                        "id": 37473,
                        "name": "Block",
                        "src": "4558:330:117"
                      }
                    ],
                    "id": 37474,
                    "name": "IfStatement",
                    "src": "4533:355:117"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37210,
                              "type": "function (address,address,uint256)",
                              "value": "GovernanceSlashL2Performed"
                            },
                            "id": 37475,
                            "name": "Identifier",
                            "src": "4899:26:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37379,
                              "type": "address",
                              "value": "account"
                            },
                            "id": 37476,
                            "name": "Identifier",
                            "src": "4926:7:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37381,
                              "type": "address",
                              "value": "group"
                            },
                            "id": 37477,
                            "name": "Identifier",
                            "src": "4935:5:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37400,
                              "type": "uint256",
                              "value": "penalty"
                            },
                            "id": 37478,
                            "name": "Identifier",
                            "src": "4942:7:117"
                          }
                        ],
                        "id": 37479,
                        "name": "FunctionCall",
                        "src": "4899:51:117"
                      }
                    ],
                    "id": 37480,
                    "name": "EmitStatement",
                    "src": "4894:56:117"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 37398
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 37481,
                        "name": "Literal",
                        "src": "4963:4:117"
                      }
                    ],
                    "id": 37482,
                    "name": "Return",
                    "src": "4956:11:117"
                  }
                ],
                "id": 37483,
                "name": "Block",
                "src": "4197:775:117"
              }
            ],
            "id": 37484,
            "name": "FunctionDefinition",
            "src": "3962:1010:117"
          },
          {
            "attributes": {
              "documentation": "@notice Gets account penalty.\n@param account Address that is punished.\n@return Amount slashed.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getApprovedSlashing",
              "scope": 37505,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "account",
                      "scope": 37496,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 37485,
                        "name": "ElementaryTypeName",
                        "src": "5127:7:117"
                      }
                    ],
                    "id": 37486,
                    "name": "VariableDeclaration",
                    "src": "5127:15:117"
                  }
                ],
                "id": 37487,
                "name": "ParameterList",
                "src": "5126:17:117"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 37496,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 37488,
                        "name": "ElementaryTypeName",
                        "src": "5167:7:117"
                      }
                    ],
                    "id": 37489,
                    "name": "VariableDeclaration",
                    "src": "5167:7:117"
                  }
                ],
                "id": 37490,
                "name": "ParameterList",
                "src": "5166:9:117"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 37490
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37188,
                              "type": "mapping(address => uint256)",
                              "value": "slashed"
                            },
                            "id": 37491,
                            "name": "Identifier",
                            "src": "5189:7:117"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37486,
                              "type": "address",
                              "value": "account"
                            },
                            "id": 37492,
                            "name": "Identifier",
                            "src": "5197:7:117"
                          }
                        ],
                        "id": 37493,
                        "name": "IndexAccess",
                        "src": "5189:16:117"
                      }
                    ],
                    "id": 37494,
                    "name": "Return",
                    "src": "5182:23:117"
                  }
                ],
                "id": 37495,
                "name": "Block",
                "src": "5176:34:117"
              }
            ],
            "id": 37496,
            "name": "FunctionDefinition",
            "src": "5098:112:117"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getSlasherExecuter",
              "scope": 37505,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 37497,
                "name": "ParameterList",
                "src": "5241:2:117"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 37504,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 37498,
                        "name": "ElementaryTypeName",
                        "src": "5267:7:117"
                      }
                    ],
                    "id": 37499,
                    "name": "VariableDeclaration",
                    "src": "5267:7:117"
                  }
                ],
                "id": 37500,
                "name": "ParameterList",
                "src": "5266:9:117"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 37500
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 37190,
                          "type": "address",
                          "value": "slasherExecuter"
                        },
                        "id": 37501,
                        "name": "Identifier",
                        "src": "5289:15:117"
                      }
                    ],
                    "id": 37502,
                    "name": "Return",
                    "src": "5282:22:117"
                  }
                ],
                "id": 37503,
                "name": "Block",
                "src": "5276:33:117"
              }
            ],
            "id": 37504,
            "name": "FunctionDefinition",
            "src": "5214:95:117"
          }
        ],
        "id": 37505,
        "name": "ContractDefinition",
        "src": "376:4935:117"
      }
    ],
    "id": 37506,
    "name": "SourceUnit",
    "src": "0:5312:117"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.13+commit.5b0b510c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2025-05-05T17:49:51.404Z",
  "devdoc": {
    "methods": {
      "approveSlashing(address,uint256)": {
        "details": "Only callable by governance.",
        "params": {
          "account": "Address that is punished.",
          "penalty": "Amount of penalty in wei."
        }
      },
      "constructor": {
        "params": {
          "test": "Set to true to skip implementation initialization"
        }
      },
      "getApprovedSlashing(address)": {
        "params": {
          "account": "Address that is punished."
        },
        "return": "Amount slashed."
      },
      "getVersionNumber()": {
        "return": "Storage version of the contract.Major version of the contract.Minor version of the contract.Patch version of the contract."
      },
      "initialize(address)": {
        "params": {
          "registryAddress": "The address of the registry core smart contract."
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setRegistry(address)": {
        "params": {
          "registryAddress": "The address of a registry contract for routing to other contracts."
        }
      },
      "slash(address,address[],address[],uint256[])": {
        "params": {
          "account": "Account to slash",
          "electionGreaters": "Greater pointers for slashing locked election gold.",
          "electionIndices": "Indices of groups voted by slashed account.",
          "electionLessers": "Lesser pointers for slashing locked election gold."
        }
      },
      "slashL2(address,address,address[],address[],uint256[])": {
        "params": {
          "account": "Account to slash",
          "electionGreaters": "Greater pointers for slashing locked election gold.",
          "electionIndices": "Indices of groups voted by slashed account.",
          "electionLessers": "Lesser pointers for slashing locked election gold."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "approveSlashing(address,uint256)": {
        "notice": "Sets account penalty."
      },
      "constructor": "Sets initialized == true on implementation contracts",
      "getApprovedSlashing(address)": {
        "notice": "Gets account penalty."
      },
      "getVersionNumber()": {
        "notice": "Returns the storage, major, minor, and patch version of the contract."
      },
      "initialize(address)": {
        "notice": "Used in place of the constructor to allow the contract to be upgradable via proxy."
      },
      "setRegistry(address)": {
        "notice": "Updates the address pointing to a Registry contract."
      },
      "slash(address,address[],address[],uint256[])": {
        "notice": "Calls `LockedGold.slash` on `account` if `account` has an entry in `slashed`."
      },
      "slashL2(address,address,address[],address[],uint256[])": {
        "notice": "Calls `LockedGold.slash` on `account` if `account` has an entry in `slashed`."
      }
    }
  }
}