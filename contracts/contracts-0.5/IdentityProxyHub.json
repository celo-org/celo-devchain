{
  "contractName": "IdentityProxyHub",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "RegistrySet",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "identityProxyCodeHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract IRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "destination",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "makeCall",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVersionNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        }
      ],
      "name": "getOrDeployIdentityProxy",
      "outputs": [
        {
          "internalType": "contract IdentityProxy",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        }
      ],
      "name": "getIdentityProxy",
      "outputs": [
        {
          "internalType": "contract IdentityProxy",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        }
      ],
      "name": "passesIdentityHeuristic",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.13+commit.5b0b510c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"RegistrySet\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"}],\"name\":\"getIdentityProxy\",\"outputs\":[{\"internalType\":\"contract IdentityProxy\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"}],\"name\":\"getOrDeployIdentityProxy\",\"outputs\":[{\"internalType\":\"contract IdentityProxy\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVersionNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"identityProxyCodeHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"makeCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"}],\"name\":\"passesIdentityHeuristic\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract IRegistry\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"setRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"getIdentityProxy(bytes32)\":{\"details\":\"This function will return a correct address whether or not the corresponding IdentityProxy has been deployed. IdentityProxies are deployed using CREATE2 and this computes a CREATE2 address.\",\"params\":{\"identifier\":\"The identifier whose proxy address is computed.\"},\"return\":\"The identifier's IdentityProxy address.\"},\"getOrDeployIdentityProxy(bytes32)\":{\"params\":{\"identifier\":\"The identifier whose proxy address is returned.\"},\"return\":\"The identifier's IdentityProxy address.\"},\"getVersionNumber()\":{\"return\":\"Storage version of the contract.Major version of the contract.Minor version of the contract.Patch version of the contract.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"makeCall(bytes32,address,bytes)\":{\"params\":{\"data\":\"The calldata the IdentityProxy should send with the call.\",\"destination\":\"The address the IdentityProxy should call.\",\"identifier\":\"The identifier whose IdentityProxy to call through.\"},\"return\":\"The return value of the external call.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"passesIdentityHeuristic(address,bytes32)\":{\"details\":\"Heuristic for ownership checks that the given account:  1. Has at least 3 completed attestations on the given identifier.  2. Completed strictly more than half of requested attestations.  3. Has at least as many completed attestations as any other account.\",\"params\":{\"addr\":\"The address to check.\",\"identifier\":\"The identifier to check.\"},\"return\":\"True if the given address is the likely owner of the given identifier, false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setRegistry(address)\":{\"params\":{\"registryAddress\":\"The address of a registry contract for routing to other contracts.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"getIdentityProxy(bytes32)\":{\"notice\":\"Returns the IdentityProxy address corresponding to the identifier.\"},\"getOrDeployIdentityProxy(bytes32)\":{\"notice\":\"Returns the IdentityProxy address corresponding to the identifier, deploying an IdentityProxy if one hasn't already been deployed for this identifier.\"},\"getVersionNumber()\":{\"notice\":\"Returns the storage, major, minor, and patch version of the contract.\"},\"makeCall(bytes32,address,bytes)\":{\"notice\":\"Performs an arbitrary call through the identifier's IdentityProxy, assuming msg.sender passes the identity heuristic.\"},\"passesIdentityHeuristic(address,bytes32)\":{\"notice\":\"Returns true if the given address is the likely owner of the given identifier.\"},\"setRegistry(address)\":{\"notice\":\"Updates the address pointing to a Registry contract.\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/identity/IdentityProxyHub.sol\":\"IdentityProxyHub\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\ncontract Context {\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\n    // an instance of this contract, which should be used via inheritance.\\n    constructor () internal { }\\n    // solhint-disable-previous-line no-empty-blocks\\n\\n    function _msgSender() internal view returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\"},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\nimport \\\"../GSN/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(isOwner(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the caller is the current owner.\\n     */\\n    function isOwner() public view returns (bool) {\\n        return _msgSender() == _owner;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     */\\n    function _transferOwnership(address newOwner) internal {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\"},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\\n * the optional functions; to access them see {ERC20Detailed}.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\"},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"content\":\"pragma solidity ^0.5.5;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following \\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\n        // for accounts without code, i.e. `keccak256('')`\\n        bytes32 codehash;\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { codehash := extcodehash(account) }\\n        return (codehash != accountHash && codehash != 0x0);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` into `address payable`. Note that this is\\n     * simply a type cast: the actual underlying value is not changed.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function toPayable(address account) internal pure returns (address payable) {\\n        return address(uint160(account));\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-call-value\\n        (bool success, ) = recipient.call.value(amount)(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\"},\"project:/contracts/common/Create2.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\n/**\\n * @title Used for deploying contracts using the CREATE2 opcode.\\n */\\nlibrary Create2 {\\n  /**\\n   * @notice Deploys a contract with CREATE2.\\n   * @param salt The CREATE2 salt.\\n   * @param initCode The contract init code to use for deployment.\\n   * @return Address of the deployed contract.\\n   */\\n  function deploy(bytes32 salt, bytes memory initCode) internal returns (address) {\\n    address deployedAddress;\\n    assembly {\\n      deployedAddress := create2(0, add(initCode, 32), mload(initCode), salt)\\n      if iszero(extcodesize(deployedAddress)) {\\n        revert(0, 0)\\n      }\\n    }\\n    return deployedAddress;\\n  }\\n\\n  /**\\n   * @notice Computes the CREATE2 address for given inputs.\\n   * @param deployer Address of the deployer.\\n   * @param salt The CREATE2 salt.\\n   * @param initCodeHash Hash of the init code used for deployment.\\n   * @return The address at which such a contract would be deployed.\\n   */\\n  function computeAddress(\\n    address deployer,\\n    bytes32 salt,\\n    bytes32 initCodeHash\\n  ) internal pure returns (address) {\\n    return\\n      address(\\n        uint160(uint256(keccak256(abi.encodePacked(bytes1(0xff), deployer, salt, initCodeHash))))\\n      );\\n  }\\n}\\n\",\"keccak256\":\"0x623db13bc78b6f0a126d36052e6c3a7d343f41daeb96549d666589019f08606a\"},\"project:/contracts/common/ExternalCall.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\nimport \\\"openzeppelin-solidity/contracts/utils/Address.sol\\\";\\n\\nlibrary ExternalCall {\\n  /**\\n   * @notice Executes external call.\\n   * @param destination The address to call.\\n   * @param value The CELO value to be sent.\\n   * @param data The data to be sent.\\n   * @return The call return value.\\n   */\\n  function execute(\\n    address destination,\\n    uint256 value,\\n    bytes memory data\\n  ) internal returns (bytes memory) {\\n    if (data.length > 0) require(Address.isContract(destination), \\\"Invalid contract address\\\");\\n    bool success;\\n    bytes memory returnData;\\n    (success, returnData) = destination.call.value(value)(data);\\n    require(success, \\\"Transaction execution failed.\\\");\\n    return returnData;\\n  }\\n}\\n\",\"keccak256\":\"0x07b3210ecdc833330a73e5bfd49032bad8fab096bb365ad57da105e1570642fc\"},\"project:/contracts/common/UsingRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity ^0.5.13;\\n\\nimport \\\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\\";\\nimport \\\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\\\";\\n\\nimport \\\"./interfaces/IAccounts.sol\\\";\\nimport \\\"./interfaces/IEpochManager.sol\\\";\\nimport \\\"./interfaces/IFeeCurrencyWhitelist.sol\\\";\\nimport \\\"./interfaces/IFreezer.sol\\\";\\nimport \\\"./interfaces/IRegistry.sol\\\";\\nimport \\\"./interfaces/ICeloUnreleasedTreasury.sol\\\";\\n\\nimport \\\"../governance/interfaces/IElection.sol\\\";\\nimport \\\"../governance/interfaces/IEpochRewards.sol\\\";\\nimport \\\"../governance/interfaces/IGovernance.sol\\\";\\nimport \\\"../governance/interfaces/ILockedGold.sol\\\";\\nimport \\\"../governance/interfaces/ILockedCelo.sol\\\";\\nimport \\\"../governance/interfaces/IValidators.sol\\\";\\n\\nimport \\\"../identity/interfaces/IRandom.sol\\\";\\nimport \\\"../identity/interfaces/IAttestations.sol\\\";\\n\\nimport \\\"../../lib/mento-core/contracts/interfaces/IExchange.sol\\\";\\nimport \\\"../../lib/mento-core/contracts/interfaces/IReserve.sol\\\";\\nimport \\\"../../lib/mento-core/contracts/interfaces/IStableToken.sol\\\";\\nimport \\\"../stability/interfaces/ISortedOracles.sol\\\";\\n\\ncontract UsingRegistry is Ownable {\\n  // solhint-disable state-visibility\\n  bytes32 constant ACCOUNTS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Accounts\\\"));\\n  bytes32 constant ATTESTATIONS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Attestations\\\"));\\n  bytes32 constant DOWNTIME_SLASHER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"DowntimeSlasher\\\"));\\n  bytes32 constant DOUBLE_SIGNING_SLASHER_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"DoubleSigningSlasher\\\"));\\n  bytes32 constant ELECTION_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Election\\\"));\\n  bytes32 constant EXCHANGE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Exchange\\\"));\\n  bytes32 constant FEE_CURRENCY_WHITELIST_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"FeeCurrencyWhitelist\\\"));\\n  bytes32 constant FREEZER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Freezer\\\"));\\n  bytes32 constant GOLD_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"GoldToken\\\"));\\n  bytes32 constant GOVERNANCE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Governance\\\"));\\n  bytes32 constant GOVERNANCE_SLASHER_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"GovernanceSlasher\\\"));\\n  bytes32 constant LOCKED_GOLD_REGISTRY_ID = keccak256(abi.encodePacked(\\\"LockedGold\\\"));\\n  bytes32 constant RESERVE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Reserve\\\"));\\n  bytes32 constant RANDOM_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Random\\\"));\\n  bytes32 constant SORTED_ORACLES_REGISTRY_ID = keccak256(abi.encodePacked(\\\"SortedOracles\\\"));\\n  bytes32 constant STABLE_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"StableToken\\\"));\\n  bytes32 constant VALIDATORS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Validators\\\"));\\n\\n  bytes32 constant CELO_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"CeloToken\\\"));\\n  bytes32 constant LOCKED_CELO_REGISTRY_ID = keccak256(abi.encodePacked(\\\"LockedCelo\\\"));\\n  bytes32 constant CELO_UNRELEASED_TREASURY_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"CeloUnreleasedTreasury\\\"));\\n  bytes32 constant EPOCH_REWARDS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"EpochRewards\\\"));\\n  bytes32 constant EPOCH_MANAGER_ENABLER_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"EpochManagerEnabler\\\"));\\n  bytes32 constant EPOCH_MANAGER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"EpochManager\\\"));\\n  // solhint-enable state-visibility\\n\\n  IRegistry public registry;\\n\\n  event RegistrySet(address indexed registryAddress);\\n\\n  modifier onlyRegisteredContract(bytes32 identifierHash) {\\n    require(registry.getAddressForOrDie(identifierHash) == msg.sender, \\\"only registered contract\\\");\\n    _;\\n  }\\n\\n  modifier onlyRegisteredContracts(bytes32[] memory identifierHashes) {\\n    require(registry.isOneOf(identifierHashes, msg.sender), \\\"only registered contracts\\\");\\n    _;\\n  }\\n\\n  /**\\n   * @notice Updates the address pointing to a Registry contract.\\n   * @param registryAddress The address of a registry contract for routing to other contracts.\\n   */\\n  function setRegistry(address registryAddress) public onlyOwner {\\n    require(registryAddress != address(0), \\\"Cannot register the null address\\\");\\n    registry = IRegistry(registryAddress);\\n    emit RegistrySet(registryAddress);\\n  }\\n\\n  function getAccounts() internal view returns (IAccounts) {\\n    return IAccounts(registry.getAddressForOrDie(ACCOUNTS_REGISTRY_ID));\\n  }\\n\\n  function getAttestations() internal view returns (IAttestations) {\\n    return IAttestations(registry.getAddressForOrDie(ATTESTATIONS_REGISTRY_ID));\\n  }\\n\\n  function getElection() internal view returns (IElection) {\\n    return IElection(registry.getAddressForOrDie(ELECTION_REGISTRY_ID));\\n  }\\n\\n  function getExchange() internal view returns (IExchange) {\\n    return IExchange(registry.getAddressForOrDie(EXCHANGE_REGISTRY_ID));\\n  }\\n\\n  function getFeeCurrencyWhitelistRegistry() internal view returns (IFeeCurrencyWhitelist) {\\n    return IFeeCurrencyWhitelist(registry.getAddressForOrDie(FEE_CURRENCY_WHITELIST_REGISTRY_ID));\\n  }\\n\\n  function getFreezer() internal view returns (IFreezer) {\\n    return IFreezer(registry.getAddressForOrDie(FREEZER_REGISTRY_ID));\\n  }\\n\\n  function getGoldToken() internal view returns (IERC20) {\\n    return IERC20(registry.getAddressForOrDie(GOLD_TOKEN_REGISTRY_ID));\\n  }\\n  function getCeloToken() internal view returns (IERC20) {\\n    return IERC20(registry.getAddressForOrDie(CELO_TOKEN_REGISTRY_ID));\\n  }\\n\\n  function getGovernance() internal view returns (IGovernance) {\\n    return IGovernance(registry.getAddressForOrDie(GOVERNANCE_REGISTRY_ID));\\n  }\\n\\n  function getLockedGold() internal view returns (ILockedGold) {\\n    return ILockedGold(registry.getAddressForOrDie(LOCKED_GOLD_REGISTRY_ID));\\n  }\\n  function getLockedCelo() internal view returns (ILockedCelo) {\\n    return ILockedCelo(registry.getAddressForOrDie(LOCKED_CELO_REGISTRY_ID));\\n  }\\n\\n  function getRandom() internal view returns (IRandom) {\\n    return IRandom(registry.getAddressForOrDie(RANDOM_REGISTRY_ID));\\n  }\\n\\n  function getReserve() internal view returns (IReserve) {\\n    return IReserve(registry.getAddressForOrDie(RESERVE_REGISTRY_ID));\\n  }\\n\\n  function getSortedOracles() internal view returns (ISortedOracles) {\\n    return ISortedOracles(registry.getAddressForOrDie(SORTED_ORACLES_REGISTRY_ID));\\n  }\\n\\n  function getStableToken() internal view returns (IStableToken) {\\n    return IStableToken(registry.getAddressForOrDie(STABLE_TOKEN_REGISTRY_ID));\\n  }\\n\\n  function getValidators() internal view returns (IValidators) {\\n    return IValidators(registry.getAddressForOrDie(VALIDATORS_REGISTRY_ID));\\n  }\\n\\n  function getCeloUnreleasedTreasury() internal view returns (ICeloUnreleasedTreasury) {\\n    return\\n      ICeloUnreleasedTreasury(registry.getAddressForOrDie(CELO_UNRELEASED_TREASURY_REGISTRY_ID));\\n  }\\n\\n  function getEpochRewards() internal view returns (IEpochRewards) {\\n    return IEpochRewards(registry.getAddressForOrDie(EPOCH_REWARDS_REGISTRY_ID));\\n  }\\n\\n  function getEpochManager() internal view returns (IEpochManager) {\\n    return IEpochManager(registry.getAddressForOrDie(EPOCH_MANAGER_REGISTRY_ID));\\n  }\\n}\\n\",\"keccak256\":\"0x222b1e45ff35146f456cde2a44ab2990aaa303c8df848934a78f87af2776ccda\"},\"project:/contracts/common/interfaces/IAccounts.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IAccounts {\\n  function setAccountDataEncryptionKey(bytes calldata) external;\\n  function setMetadataURL(string calldata) external;\\n  function setName(string calldata) external;\\n  function setWalletAddress(address, uint8, bytes32, bytes32) external;\\n  function setAccount(string calldata, bytes calldata, address, uint8, bytes32, bytes32) external;\\n\\n  function authorizeVoteSigner(address, uint8, bytes32, bytes32) external;\\n  function authorizeValidatorSigner(address, uint8, bytes32, bytes32) external;\\n  function authorizeValidatorSignerWithPublicKey(\\n    address,\\n    uint8,\\n    bytes32,\\n    bytes32,\\n    bytes calldata\\n  ) external;\\n  function authorizeValidatorSignerWithKeys(\\n    address,\\n    uint8,\\n    bytes32,\\n    bytes32,\\n    bytes calldata,\\n    bytes calldata,\\n    bytes calldata\\n  ) external;\\n  function authorizeAttestationSigner(address, uint8, bytes32, bytes32) external;\\n  function setEip712DomainSeparator() external;\\n  function createAccount() external returns (bool);\\n\\n  function setPaymentDelegation(address, uint256) external;\\n\\n  function isAccount(address) external view returns (bool);\\n  function voteSignerToAccount(address) external view returns (address);\\n  function validatorSignerToAccount(address) external view returns (address);\\n  function attestationSignerToAccount(address) external view returns (address);\\n  function signerToAccount(address) external view returns (address);\\n  function getAttestationSigner(address) external view returns (address);\\n  function getValidatorSigner(address) external view returns (address);\\n  function getVoteSigner(address) external view returns (address);\\n  function hasAuthorizedVoteSigner(address) external view returns (bool);\\n  function hasAuthorizedValidatorSigner(address) external view returns (bool);\\n  function hasAuthorizedAttestationSigner(address) external view returns (bool);\\n\\n  function batchGetMetadataURL(\\n    address[] calldata\\n  ) external view returns (uint256[] memory, bytes memory);\\n\\n  function getDataEncryptionKey(address) external view returns (bytes memory);\\n  function getWalletAddress(address) external view returns (address);\\n  function getMetadataURL(address) external view returns (string memory);\\n\\n  function getName(address) external view returns (string memory);\\n\\n  function getPaymentDelegation(address) external view returns (address, uint256);\\n  function isSigner(address, address, bytes32) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xd316739cfeeed50b89bd45a4596abf71fac174f10c2a24dbf352a53b2bab2dc1\"},\"project:/contracts/common/interfaces/ICeloUnreleasedTreasury.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ICeloUnreleasedTreasury {\\n  /**\\n   * @notice Releases the Celo to the specified address.\\n   * @param to The address to release the amount to.\\n   * @param amount The amount to release.\\n   */\\n  function release(address to, uint256 amount) external;\\n\\n  function getRemainingBalanceToRelease() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x41f4cda8fd14ba24261d9e6ef9c2f62ac15432ac78107e74045d2a880b50df82\"},\"project:/contracts/common/interfaces/ICeloVersionedContract.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ICeloVersionedContract {\\n  /**\\n   * @notice Returns the storage, major, minor, and patch version of the contract.\\n   * @return Storage version of the contract.\\n   * @return Major version of the contract.\\n   * @return Minor version of the contract.\\n   * @return Patch version of the contract.\\n   */\\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256);\\n}\\n\",\"keccak256\":\"0x3ce622e646f0bd7cce110045bf6cde1fd84242e9c8ee73a27e56956f0b1fb128\"},\"project:/contracts/common/interfaces/IEpochManager.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IEpochManager {\\n  function initializeSystem(\\n    uint256 firstEpochNumber,\\n    uint256 firstEpochBlock,\\n    address[] calldata firstElected\\n  ) external;\\n  function startNextEpochProcess() external;\\n  function finishNextEpochProcess(\\n    address[] calldata groups,\\n    address[] calldata lessers,\\n    address[] calldata greaters\\n  ) external;\\n  function setToProcessGroups() external;\\n  function processGroup(address group, address lesser, address greater) external;\\n  function sendValidatorPayment(address) external;\\n  function getCurrentEpoch() external view returns (uint256, uint256, uint256, uint256);\\n  function getEpochByNumber(\\n    uint256 epochNumber\\n  ) external view returns (uint256, uint256, uint256, uint256);\\n  function getEpochByBlockNumber(\\n    uint256 blockNumber\\n  ) external view returns (uint256, uint256, uint256, uint256);\\n  function getEpochNumberOfBlock(uint256) external view returns (uint256);\\n  function getCurrentEpochNumber() external view returns (uint256);\\n  function numberOfElectedInCurrentSet() external view returns (uint256);\\n  function getElectedAccounts() external view returns (address[] memory);\\n  function getElectedAccountByIndex(uint256 index) external view returns (address);\\n  function getElectedSigners() external view returns (address[] memory);\\n  function getElectedSignerByIndex(uint256 index) external view returns (address);\\n  function epochDuration() external view returns (uint256);\\n  function firstKnownEpoch() external view returns (uint256);\\n  function getEpochProcessingState()\\n    external\\n    view\\n    returns (uint256, uint256, uint256, uint256, uint256);\\n  function systemAlreadyInitialized() external view returns (bool);\\n  function isBlocked() external view returns (bool);\\n  function isTimeForNextEpoch() external view returns (bool);\\n  function isOnEpochProcess() external view returns (bool);\\n  function getFirstBlockAtEpoch(uint256) external view returns (uint256);\\n  function getLastBlockAtEpoch(uint256) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xc019958b7b5281fbfcd3c31b49d6ab29192ab4138de175a404bf0c17cccf9350\"},\"project:/contracts/common/interfaces/IFeeCurrencyWhitelist.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IFeeCurrencyWhitelist {\\n  function initialize() external;\\n  function addToken(address) external;\\n  function getWhitelist() external view returns (address[] memory);\\n}\\n\",\"keccak256\":\"0xa732071c691bf1ba84774ac5301fa5b18e1ecf6ea6f6210ecac00f5130341621\"},\"project:/contracts/common/interfaces/IFreezer.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IFreezer {\\n  function freeze(address target) external;\\n  function unfreeze(address target) external;\\n  function isFrozen(address) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x31cee67b005413c61d6aa90d2899e6a37257cd4c026d8422249b397131a10755\"},\"project:/contracts/common/interfaces/IRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IRegistry {\\n  function setAddressFor(string calldata, address) external;\\n  function getAddressForOrDie(bytes32) external view returns (address);\\n  function getAddressFor(bytes32) external view returns (address);\\n  function getAddressForStringOrDie(string calldata identifier) external view returns (address);\\n  function getAddressForString(string calldata identifier) external view returns (address);\\n  function isOneOf(bytes32[] calldata, address) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x7737cbda6f3519bf6a4108e07b2c991a655e8731a4c040a3681e9629cfc4b52d\"},\"project:/contracts/governance/interfaces/IElection.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IElection {\\n  function vote(address, uint256, address, address) external returns (bool);\\n  function activate(address) external returns (bool);\\n  function revokeActive(address, uint256, address, address, uint256) external returns (bool);\\n  function revokeAllActive(address, address, address, uint256) external returns (bool);\\n  function revokePending(address, uint256, address, address, uint256) external returns (bool);\\n  function markGroupIneligible(address) external;\\n  function markGroupEligible(address, address, address) external;\\n  function allowedToVoteOverMaxNumberOfGroups(address) external returns (bool);\\n  function forceDecrementVotes(\\n    address,\\n    uint256,\\n    address[] calldata,\\n    address[] calldata,\\n    uint256[] calldata\\n  ) external returns (uint256);\\n  function setAllowedToVoteOverMaxNumberOfGroups(bool flag) external;\\n\\n  // only owner\\n  function setElectableValidators(uint256, uint256) external returns (bool);\\n  function setMaxNumGroupsVotedFor(uint256) external returns (bool);\\n  function setElectabilityThreshold(uint256) external returns (bool);\\n\\n  // only VM\\n  function distributeEpochRewards(address, uint256, address, address) external;\\n\\n  // view functions\\n  function electValidatorSigners() external view returns (address[] memory);\\n  function electValidatorAccounts() external view returns (address[] memory);\\n  function electNValidatorSigners(uint256, uint256) external view returns (address[] memory);\\n  function electNValidatorAccounts(uint256, uint256) external view returns (address[] memory);\\n  function getElectableValidators() external view returns (uint256, uint256);\\n  function getElectabilityThreshold() external view returns (uint256);\\n  function getNumVotesReceivable(address) external view returns (uint256);\\n  function getTotalVotes() external view returns (uint256);\\n  function getActiveVotes() external view returns (uint256);\\n  function getTotalVotesByAccount(address) external view returns (uint256);\\n  function getPendingVotesForGroupByAccount(address, address) external view returns (uint256);\\n  function getActiveVotesForGroupByAccount(address, address) external view returns (uint256);\\n  function getTotalVotesForGroupByAccount(address, address) external view returns (uint256);\\n  function getActiveVoteUnitsForGroupByAccount(address, address) external view returns (uint256);\\n  function getTotalVotesForGroup(address) external view returns (uint256);\\n  function getActiveVotesForGroup(address) external view returns (uint256);\\n  function getPendingVotesForGroup(address) external view returns (uint256);\\n  function getGroupEligibility(address) external view returns (bool);\\n  function getGroupEpochRewards(\\n    address,\\n    uint256,\\n    uint256[] calldata\\n  ) external view returns (uint256);\\n  function getGroupEpochRewardsBasedOnScore(\\n    address group,\\n    uint256 totalEpochRewards,\\n    uint256 groupScore\\n  ) external view returns (uint256);\\n  function getGroupsVotedForByAccount(address) external view returns (address[] memory);\\n  function getEligibleValidatorGroups() external view returns (address[] memory);\\n  function getTotalVotesForEligibleValidatorGroups()\\n    external\\n    view\\n    returns (address[] memory, uint256[] memory);\\n  function getCurrentValidatorSigners() external view returns (address[] memory);\\n  function canReceiveVotes(address, uint256) external view returns (bool);\\n  function hasActivatablePendingVotes(address, address) external view returns (bool);\\n  function validatorSignerAddressFromCurrentSet(uint256 index) external view returns (address);\\n  function numberValidatorsInCurrentSet() external view returns (uint256);\\n  function owner() external view returns (address);\\n}\\n\",\"keccak256\":\"0x598e1f22422d01cd2feccff34c5c276c388209058d7fab3d770e25fa8dec9e59\"},\"project:/contracts/governance/interfaces/IEpochRewards.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IEpochRewards {\\n  function updateTargetVotingYield() external;\\n  function isReserveLow() external view returns (bool);\\n  function calculateTargetEpochRewards() external view returns (uint256, uint256, uint256, uint256);\\n  function getTargetVotingYieldParameters() external view returns (uint256, uint256, uint256);\\n  function getRewardsMultiplierParameters() external view returns (uint256, uint256, uint256);\\n  function getCommunityRewardFraction() external view returns (uint256);\\n  function getCarbonOffsettingFraction() external view returns (uint256);\\n  function getTargetVotingGoldFraction() external view returns (uint256);\\n  function getRewardsMultiplier() external view returns (uint256);\\n  function carbonOffsettingPartner() external view returns (address);\\n}\\n\",\"keccak256\":\"0xfa534a0dc188ffd55595c6edb28b2e4ac9f036022a644b3a61e6a12097e14788\"},\"project:/contracts/governance/interfaces/IGovernance.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IGovernance {\\n  function removeVotesWhenRevokingDelegatedVotes(\\n    address account,\\n    uint256 maxAmountAllowed\\n  ) external;\\n  function votePartially(\\n    uint256 proposalId,\\n    uint256 index,\\n    uint256 yesVotes,\\n    uint256 noVotes,\\n    uint256 abstainVotes\\n  ) external returns (bool);\\n\\n  function setConstitution(address destination, bytes4 functionId, uint256 threshold) external;\\n\\n  function isVoting(address) external view returns (bool);\\n  function getAmountOfGoldUsedForVoting(address account) external view returns (uint256);\\n\\n  function getProposal(\\n    uint256 proposalId\\n  ) external view returns (address, uint256, uint256, uint256, string memory, uint256, bool);\\n\\n  function getReferendumStageDuration() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x8780295e0ecffc9870c59ed17fd4f50902117227157dd060db19d2ebbaaf3d2b\"},\"project:/contracts/governance/interfaces/ILockedCelo.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ILockedCelo {\\n  function lock() external payable;\\n  function incrementNonvotingAccountBalance(address, uint256) external;\\n  function decrementNonvotingAccountBalance(address, uint256) external;\\n\\n  function unlock(uint256) external;\\n  function relock(uint256, uint256) external;\\n  function withdraw(uint256) external;\\n  function slash(\\n    address account,\\n    uint256 penalty,\\n    address reporter,\\n    uint256 reward,\\n    address[] calldata lessers,\\n    address[] calldata greaters,\\n    uint256[] calldata indices\\n  ) external;\\n  function addSlasher(string calldata slasherIdentifier) external;\\n\\n  function getAccountNonvotingLockedGold(address account) external view returns (uint256);\\n  function getAccountTotalLockedCelo(address) external view returns (uint256);\\n  function getTotalLockedCelo() external view returns (uint256);\\n  function getPendingWithdrawals(\\n    address\\n  ) external view returns (uint256[] memory, uint256[] memory);\\n  function getPendingWithdrawal(\\n    address account,\\n    uint256 index\\n  ) external view returns (uint256, uint256);\\n  function getTotalPendingWithdrawals(address) external view returns (uint256);\\n  function isSlasher(address) external view returns (bool);\\n\\n  function getAccountTotalDelegatedFraction(address account) external view returns (uint256);\\n\\n  function getAccountTotalGovernanceVotingPower(address account) external view returns (uint256);\\n  function unlockingPeriod() external view returns (uint256);\\n  function getAccountNonvotingLockedCelo(address account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x41cd5970ccc5612c9cd9cdf89a299a3cff0d8984d0b16ffad14da7670424920b\"},\"project:/contracts/governance/interfaces/ILockedGold.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ILockedGold {\\n  function lock() external payable;\\n  function incrementNonvotingAccountBalance(address, uint256) external;\\n  function decrementNonvotingAccountBalance(address, uint256) external;\\n\\n  function unlock(uint256) external;\\n  function relock(uint256, uint256) external;\\n  function withdraw(uint256) external;\\n  function slash(\\n    address account,\\n    uint256 penalty,\\n    address reporter,\\n    uint256 reward,\\n    address[] calldata lessers,\\n    address[] calldata greaters,\\n    uint256[] calldata indices\\n  ) external;\\n  function addSlasher(string calldata slasherIdentifier) external;\\n\\n  function getAccountTotalLockedGold(address) external view returns (uint256);\\n  function getTotalLockedGold() external view returns (uint256);\\n  function getPendingWithdrawals(\\n    address\\n  ) external view returns (uint256[] memory, uint256[] memory);\\n  function getPendingWithdrawal(\\n    address account,\\n    uint256 index\\n  ) external view returns (uint256, uint256);\\n  function getTotalPendingWithdrawals(address) external view returns (uint256);\\n  function isSlasher(address) external view returns (bool);\\n\\n  function getAccountTotalDelegatedFraction(address account) external view returns (uint256);\\n\\n  function getAccountTotalGovernanceVotingPower(address account) external view returns (uint256);\\n  function unlockingPeriod() external view returns (uint256);\\n  function getAccountNonvotingLockedGold(address account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x4ab7ee32f3cbac55e91ef1087ba3e8bbdd784833faa2b9b7e1d66ff662800227\"},\"project:/contracts/governance/interfaces/IValidators.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IValidators {\\n  function registerValidator(\\n    bytes calldata,\\n    bytes calldata,\\n    bytes calldata\\n  ) external returns (bool);\\n  function registerValidatorNoBls(bytes calldata ecdsaPublicKey) external returns (bool);\\n  function deregisterValidator(uint256) external returns (bool);\\n  function affiliate(address) external returns (bool);\\n  function deaffiliate() external returns (bool);\\n  function updateBlsPublicKey(bytes calldata, bytes calldata) external returns (bool);\\n  function registerValidatorGroup(uint256) external returns (bool);\\n  function deregisterValidatorGroup(uint256) external returns (bool);\\n  function addMember(address) external returns (bool);\\n  function addFirstMember(address, address, address) external returns (bool);\\n  function removeMember(address) external returns (bool);\\n  function reorderMember(address, address, address) external returns (bool);\\n  function updateCommission() external;\\n  function setNextCommissionUpdate(uint256) external;\\n  function resetSlashingMultiplier() external;\\n\\n  // only owner\\n  function setCommissionUpdateDelay(uint256) external;\\n  function setMaxGroupSize(uint256) external returns (bool);\\n  function setMembershipHistoryLength(uint256) external returns (bool);\\n  function setValidatorScoreParameters(uint256, uint256) external returns (bool);\\n  function setGroupLockedGoldRequirements(uint256, uint256) external returns (bool);\\n  function setValidatorLockedGoldRequirements(uint256, uint256) external returns (bool);\\n  function setSlashingMultiplierResetPeriod(uint256) external;\\n  function setDowntimeGracePeriod(uint256 value) external;\\n\\n  // only registered contract\\n  function updateEcdsaPublicKey(address, address, bytes calldata) external returns (bool);\\n  function updatePublicKeys(\\n    address,\\n    address,\\n    bytes calldata,\\n    bytes calldata,\\n    bytes calldata\\n  ) external returns (bool);\\n  function mintStableToEpochManager(uint256 amount) external;\\n\\n  // only VM\\n  function updateValidatorScoreFromSigner(address, uint256) external;\\n  function distributeEpochPaymentsFromSigner(address, uint256) external returns (uint256);\\n\\n  // only slasher\\n  function forceDeaffiliateIfValidator(address) external;\\n  function halveSlashingMultiplier(address) external;\\n\\n  // view functions\\n  function maxGroupSize() external view returns (uint256);\\n  function downtimeGracePeriod() external view returns (uint256);\\n  function getCommissionUpdateDelay() external view returns (uint256);\\n  function getValidatorScoreParameters() external view returns (uint256, uint256);\\n  function getMembershipHistory(\\n    address\\n  ) external view returns (uint256[] memory, address[] memory, uint256, uint256);\\n  function calculateEpochScore(uint256) external view returns (uint256);\\n  function calculateGroupEpochScore(uint256[] calldata) external view returns (uint256);\\n  function getAccountLockedGoldRequirement(address) external view returns (uint256);\\n  function meetsAccountLockedGoldRequirements(address) external view returns (bool);\\n  function getValidatorBlsPublicKeyFromSigner(address) external view returns (bytes memory);\\n  function getValidator(\\n    address account\\n  ) external view returns (bytes memory, bytes memory, address, uint256, address);\\n  function getValidatorsGroup(address account) external view returns (address affiliation);\\n  function getValidatorGroup(\\n    address\\n  )\\n    external\\n    view\\n    returns (address[] memory, uint256, uint256, uint256, uint256[] memory, uint256, uint256);\\n  function getGroupNumMembers(address) external view returns (uint256);\\n  function getTopGroupValidators(address, uint256) external view returns (address[] memory);\\n  function getTopGroupValidatorsAccounts(address, uint256) external view returns (address[] memory);\\n  function getGroupsNumMembers(\\n    address[] calldata accounts\\n  ) external view returns (uint256[] memory);\\n  function getNumRegisteredValidators() external view returns (uint256);\\n  function groupMembershipInEpoch(address, uint256, uint256) external view returns (address);\\n\\n  function getValidatorLockedGoldRequirements() external view returns (uint256, uint256);\\n  function getGroupLockedGoldRequirements() external view returns (uint256, uint256);\\n  function getRegisteredValidators() external view returns (address[] memory);\\n  function getRegisteredValidatorGroups() external view returns (address[] memory);\\n  function isValidatorGroup(address) external view returns (bool);\\n  function isValidator(address) external view returns (bool);\\n  function getValidatorGroupSlashingMultiplier(address) external view returns (uint256);\\n  function getMembershipInLastEpoch(address) external view returns (address);\\n  function getMembershipInLastEpochFromSigner(address) external view returns (address);\\n  function computeEpochReward(\\n    address account,\\n    uint256 score,\\n    uint256 maxPayment\\n  ) external view returns (uint256);\\n  function getMembershipHistoryLength() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x78a09c1b3e80fbb1a8fd907575a71e181d100a09d999ea5c032140efbeeeb90f\"},\"project:/contracts/identity/IdentityProxy.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\nimport \\\"../common/ExternalCall.sol\\\";\\n\\ncontract IdentityProxy {\\n  address public deployer;\\n\\n  modifier onlyDeployer() {\\n    require(msg.sender == deployer, \\\"Only callable by original deployer\\\");\\n    _;\\n  }\\n\\n  constructor() public {\\n    deployer = msg.sender;\\n  }\\n\\n  /**\\n   * @notice Performs an arbitrary call.\\n   * @param destination The address to call.\\n   * @param data The calldata to send with the call.\\n   * @dev This can only be called by the deployer of this contract, presumably\\n   * the IdentityProxyHub after it checks the identity heuristic.\\n   * @return The return value of the external call.\\n   */\\n  function makeCall(\\n    address destination,\\n    bytes calldata data\\n  ) external payable onlyDeployer returns (bytes memory) {\\n    return ExternalCall.execute(destination, msg.value, data);\\n  }\\n}\\n\",\"keccak256\":\"0xdfd4bae88d4c146ab2b99d6d9032c5b4fdbdfe6bb935c7a306328817fcd23372\"},\"project:/contracts/identity/IdentityProxyHub.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\nimport \\\"../common/Create2.sol\\\";\\nimport \\\"../common/interfaces/ICeloVersionedContract.sol\\\";\\nimport \\\"../common/UsingRegistry.sol\\\";\\nimport \\\"./IdentityProxy.sol\\\";\\n\\ncontract IdentityProxyHub is UsingRegistry, ICeloVersionedContract {\\n  bytes32 public constant identityProxyCodeHash =\\n    keccak256(\\n      // solhint-disable-next-line indent\\n      abi.encodePacked(type(IdentityProxy).creationCode)\\n    );\\n\\n  /**\\n   * @notice Performs an arbitrary call through the identifier's IdentityProxy,\\n   * assuming msg.sender passes the identity heuristic.\\n   * @param identifier The identifier whose IdentityProxy to call through.\\n   * @param destination The address the IdentityProxy should call.\\n   * @param data The calldata the IdentityProxy should send with the call.\\n   * @return The return value of the external call.\\n   */\\n  function makeCall(\\n    bytes32 identifier,\\n    address destination,\\n    bytes calldata data\\n  ) external payable returns (bytes memory) {\\n    require(passesIdentityHeuristic(msg.sender, identifier), \\\"does not pass identity heuristic\\\");\\n    return getOrDeployIdentityProxy(identifier).makeCall.value(msg.value)(destination, data);\\n  }\\n\\n  /**\\n   * @notice Returns the storage, major, minor, and patch version of the contract.\\n   * @return Storage version of the contract.\\n   * @return Major version of the contract.\\n   * @return Minor version of the contract.\\n   * @return Patch version of the contract.\\n   */\\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256) {\\n    return (1, 0, 0, 1);\\n  }\\n\\n  /**\\n   * @notice Returns the IdentityProxy address corresponding to the identifier,\\n   * deploying an IdentityProxy if one hasn't already been deployed for this\\n   * identifier.\\n   * @param identifier The identifier whose proxy address is returned.\\n   * @return The identifier's IdentityProxy address.\\n   */\\n  function getOrDeployIdentityProxy(bytes32 identifier) public returns (IdentityProxy) {\\n    IdentityProxy identityProxy = getIdentityProxy(identifier);\\n    uint256 codeSize;\\n    assembly {\\n      codeSize := extcodesize(identityProxy)\\n    }\\n    if (codeSize == 0) {\\n      deployIdentityProxy(identifier);\\n    }\\n\\n    return identityProxy;\\n  }\\n\\n  /**\\n   * @notice Returns the IdentityProxy address corresponding to the identifier.\\n   * @param identifier The identifier whose proxy address is computed.\\n   * @return The identifier's IdentityProxy address.\\n   * @dev This function will return a correct address whether or not the\\n   * corresponding IdentityProxy has been deployed. IdentityProxies are deployed\\n   * using CREATE2 and this computes a CREATE2 address.\\n   */\\n  function getIdentityProxy(bytes32 identifier) public view returns (IdentityProxy) {\\n    return IdentityProxy(Create2.computeAddress(address(this), identifier, identityProxyCodeHash));\\n  }\\n\\n  /**\\n   * @notice Returns true if the given address is the likely owner of the given\\n   * identifier.\\n   * @param addr The address to check.\\n   * @param identifier The identifier to check.\\n   * @return True if the given address is the likely owner of the given\\n   * identifier, false otherwise.\\n   * @dev Heuristic for ownership checks that the given account:\\n   *   1. Has at least 3 completed attestations on the given identifier.\\n   *   2. Completed strictly more than half of requested attestations.\\n   *   3. Has at least as many completed attestations as any other account.\\n   */\\n  function passesIdentityHeuristic(address addr, bytes32 identifier) public view returns (bool) {\\n    IAttestations attestations = getAttestations();\\n    (uint32 completed, uint32 requested) = attestations.getAttestationStats(identifier, addr);\\n\\n    // 1. Check that the account has at least 3 completed attestations on the given identifier.\\n    bool hasEnoughCompletions = completed >= 3;\\n\\n    // 2. Check that the account Completed strictly more than half of requested attestations.\\n    bool completedOverHalfRequests = false;\\n    if (completed > 0) {\\n      completedOverHalfRequests = requested / completed < 2;\\n    }\\n\\n    // 3. Check that the account has at least as many completed attestations as any other account.\\n    bool hasMostCompletions = true;\\n    address[] memory addresses = attestations.lookupAccountsForIdentifier(identifier);\\n    for (uint256 i = 0; i < addresses.length; i++) {\\n      address otherAddr = addresses[i];\\n      if (otherAddr != addr) {\\n        (uint32 otherCompleted, ) = attestations.getAttestationStats(identifier, otherAddr);\\n        hasMostCompletions = hasMostCompletions && otherCompleted <= completed;\\n      }\\n    }\\n\\n    // Return true if the account passed all three checks above.\\n    // Note: We do not return early on failures as we are optimizing for the passing case.\\n    return hasEnoughCompletions && completedOverHalfRequests && hasMostCompletions;\\n  }\\n\\n  function deployIdentityProxy(bytes32 identifier) internal returns (IdentityProxy) {\\n    // solhint-disable-next-line indent\\n    return IdentityProxy(Create2.deploy(identifier, type(IdentityProxy).creationCode));\\n  }\\n}\\n\",\"keccak256\":\"0x018bf1edfdaec0fbff352d55fa1611db3db88d6f1c921358880708202a1f6a5b\"},\"project:/contracts/identity/interfaces/IAttestations.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IAttestations {\\n  function revoke(bytes32, uint256) external;\\n  function withdraw(address) external;\\n\\n  // only owner\\n  function setAttestationRequestFee(address, uint256) external;\\n  function setAttestationExpiryBlocks(uint256) external;\\n  function setSelectIssuersWaitBlocks(uint256) external;\\n  function setMaxAttestations(uint256) external;\\n\\n  // view functions\\n  function getUnselectedRequest(bytes32, address) external view returns (uint32, uint32, address);\\n  function getAttestationIssuers(bytes32, address) external view returns (address[] memory);\\n  function getAttestationStats(bytes32, address) external view returns (uint32, uint32);\\n  function batchGetAttestationStats(\\n    bytes32[] calldata\\n  ) external view returns (uint256[] memory, address[] memory, uint64[] memory, uint64[] memory);\\n  function getAttestationState(\\n    bytes32,\\n    address,\\n    address\\n  ) external view returns (uint8, uint32, address);\\n  function getCompletableAttestations(\\n    bytes32,\\n    address\\n  ) external view returns (uint32[] memory, address[] memory, uint256[] memory, bytes memory);\\n  function getAttestationRequestFee(address) external view returns (uint256);\\n  function getMaxAttestations() external view returns (uint256);\\n  function validateAttestationCode(\\n    bytes32,\\n    address,\\n    uint8,\\n    bytes32,\\n    bytes32\\n  ) external view returns (address);\\n  function lookupAccountsForIdentifier(bytes32) external view returns (address[] memory);\\n  function requireNAttestationsRequested(bytes32, address, uint32) external view;\\n}\\n\",\"keccak256\":\"0x6afd5f303e153798b15448e0206ed5e645b6e2f2e46762cb17c5b665e256cdb2\"},\"project:/contracts/identity/interfaces/IRandom.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IRandom {\\n  function revealAndCommit(bytes32, bytes32, address) external;\\n  function randomnessBlockRetentionWindow() external view returns (uint256);\\n  function random() external view returns (bytes32);\\n  function getBlockRandomness(uint256) external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xdb545530be6397d23692e4465f4514cf3c87c1d4f553323964694818c375c08d\"},\"project:/contracts/stability/interfaces/ISortedOracles.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ISortedOracles {\\n  function addOracle(address, address) external;\\n  function removeOracle(address, address, uint256) external;\\n  function report(address, uint256, address, address) external;\\n  function removeExpiredReports(address, uint256) external;\\n  function isOldestReportExpired(address token) external view returns (bool, address);\\n  function numRates(address) external view returns (uint256);\\n  function medianRate(address) external view returns (uint256, uint256);\\n  function numTimestamps(address) external view returns (uint256);\\n  function medianTimestamp(address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xc9d69b608b060effe4a0b246e7fad096b524b848aa51d8f4eccad36c1aa0479d\"},\"project:/lib/mento-core/contracts/interfaces/IExchange.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\ninterface IExchange {\\n    function buy(\\n        uint256,\\n        uint256,\\n        bool\\n    ) external returns (uint256);\\n\\n    function sell(\\n        uint256,\\n        uint256,\\n        bool\\n    ) external returns (uint256);\\n\\n    function exchange(\\n        uint256,\\n        uint256,\\n        bool\\n    ) external returns (uint256);\\n\\n    function setUpdateFrequency(uint256) external;\\n\\n    function getBuyTokenAmount(uint256, bool) external view returns (uint256);\\n\\n    function getSellTokenAmount(uint256, bool) external view returns (uint256);\\n\\n    function getBuyAndSellBuckets(bool) external view returns (uint256, uint256);\\n}\\n\",\"keccak256\":\"0x320488022d1066ac81797b9e7a3dc303d1c8e9a48597972d4686e00f9554ade9\"},\"project:/lib/mento-core/contracts/interfaces/IReserve.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\ninterface IReserve {\\n    function setTobinTaxStalenessThreshold(uint256) external;\\n\\n    function addToken(address) external returns (bool);\\n\\n    function removeToken(address, uint256) external returns (bool);\\n\\n    function transferGold(address payable, uint256) external returns (bool);\\n\\n    function transferExchangeGold(address payable, uint256) external returns (bool);\\n\\n    function getReserveGoldBalance() external view returns (uint256);\\n\\n    function getUnfrozenReserveGoldBalance() external view returns (uint256);\\n\\n    function getOrComputeTobinTax() external returns (uint256, uint256);\\n\\n    function getTokens() external view returns (address[] memory);\\n\\n    function getReserveRatio() external view returns (uint256);\\n\\n    function addExchangeSpender(address) external;\\n\\n    function removeExchangeSpender(address, uint256) external;\\n\\n    function addSpender(address) external;\\n\\n    function removeSpender(address) external;\\n}\\n\",\"keccak256\":\"0x9162b458dc21fe7e6cfc5d4722b3db3001b1c54ecdcefa703ff9d902084150b7\"},\"project:/lib/mento-core/contracts/interfaces/IStableToken.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\n/**\\n * @title This interface describes the functions specific to Celo Stable Tokens, and in the\\n * absence of interface inheritance is intended as a companion to IERC20.sol and ICeloToken.sol.\\n */\\ninterface IStableToken {\\n    function mint(address, uint256) external returns (bool);\\n\\n    function burn(uint256) external returns (bool);\\n\\n    function setInflationParameters(uint256, uint256) external;\\n\\n    function valueToUnits(uint256) external view returns (uint256);\\n\\n    function unitsToValue(uint256) external view returns (uint256);\\n\\n    function getInflationParameters()\\n        external\\n        view\\n        returns (\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256\\n        );\\n\\n    // NOTE: duplicated with IERC20.sol, remove once interface inheritance is supported.\\n    function balanceOf(address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xcb6440c9b161b26a5b062e6c74d6fd1ed9736f292161c757406a9c39e942d20a\"}},\"version\":1}",
  "bytecode": "0x608060405260006100146100b760201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100bf565b600033905090565b611a31806100ce6000396000f3fe6080604052600436106100a75760003560e01c80637b103999116100645780637b103999146103385780638da5cb5b1461038f5780638f32d59b146103e6578063a91ee0dc14610415578063ddecbfe814610466578063f2fde38b146104e1576100a7565b806342b9356f146100ac57806346fa85d5146100d757806354255be0146101525780635f75912b14610192578063632b7ea514610205578063715018a614610321575b600080fd5b3480156100b857600080fd5b506100c1610532565b6040518082815260200191505060405180910390f35b3480156100e357600080fd5b50610110600480360360208110156100fa57600080fd5b81019080803590602001909291905050506105ca565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561015e57600080fd5b50610167610672565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b34801561019e57600080fd5b506101eb600480360360408110156101b557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610699565b604051808215151515815260200191505060405180910390f35b6102a66004803603606081101561021b57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561026257600080fd5b82018360208201111561027457600080fd5b8035906020019184600183028401116401000000008311171561029657600080fd5b9091929391929390505050610a61565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102e65780820151818401526020810190506102cb565b50505050905090810190601f1680156103135780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561032d57600080fd5b50610336610c9e565b005b34801561034457600080fd5b5061034d610dd7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561039b57600080fd5b506103a4610dfd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103f257600080fd5b506103fb610e26565b604051808215151515815260200191505060405180910390f35b34801561042157600080fd5b506104646004803603602081101561043857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e84565b005b34801561047257600080fd5b5061049f6004803603602081101561048957600080fd5b8101908080359060200190929190505050611028565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104ed57600080fd5b506105306004803603602081101561050457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061105a565b005b6040518060200161054290611445565b6020820181038252601f19601f820116604052506040516020018082805190602001908083835b6020831061058c5780518252602082019150602081019050602083039250610569565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012081565b600061066b3083604051806020016105e190611445565b6020820181038252601f19601f820116604052506040516020018082805190602001908083835b6020831061062b5780518252602082019150602081019050602083039250610608565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001206110e0565b9050919050565b60008060008060016000806001839350829250819150809050935093509350935090919293565b6000806106a46111a4565b90506000808273ffffffffffffffffffffffffffffffffffffffff1663596abea586886040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050604080518083038186803b15801561072d57600080fd5b505afa158015610741573d6000803e3d6000fd5b505050506040513d604081101561075757600080fd5b81019080805190602001909291908051906020019092919050505091509150600060038363ffffffff1610159050600080905060008463ffffffff1611156107bb5760028463ffffffff168463ffffffff16816107b057fe5b0463ffffffff161090505b60006001905060608673ffffffffffffffffffffffffffffffffffffffff166303cc1aff8a6040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b15801561081457600080fd5b505afa158015610828573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561085257600080fd5b810190808051604051939291908464010000000082111561087257600080fd5b8382019150602082018581111561088857600080fd5b82518660208202830111640100000000821117156108a557600080fd5b8083526020830192505050908051906020019060200280838360005b838110156108dc5780820151818401526020810190506108c1565b50505050905001604052505050905060008090505b8151811015610a3e57600082828151811061090857fe5b602002602001015190508b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a305760008973ffffffffffffffffffffffffffffffffffffffff1663596abea58d846040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050604080518083038186803b1580156109cb57600080fd5b505afa1580156109df573d6000803e3d6000fd5b505050506040513d60408110156109f557600080fd5b810190808051906020019092919080519060200190929190505050509050848015610a2c57508863ffffffff168163ffffffff1611155b9450505b5080806001019150506108f1565b50838015610a495750825b8015610a525750815b97505050505050505092915050565b6060610a6d3386610699565b610adf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f646f6573206e6f742070617373206964656e746974792068657572697374696381525060200191505060405180910390fd5b610ae885611028565b73ffffffffffffffffffffffffffffffffffffffff16631cb9ce63348686866040518563ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509450505050506000604051808303818588803b158015610b9a57600080fd5b505af1158015610bae573d6000803e3d6000fd5b50505050506040513d6000823e3d601f19601f820116820180604052506020811015610bd957600080fd5b8101908080516040519392919084640100000000821115610bf957600080fd5b83820191506020820185811115610c0f57600080fd5b8251866001820283011164010000000082111715610c2c57600080fd5b8083526020830192505050908051906020019080838360005b83811015610c60578082015181840152602081019050610c45565b50505050905090810190601f168015610c8d5780820380516001836020036101000a031916815260200191505b506040525050509050949350505050565b610ca6610e26565b610d18576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610e6861129f565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b610e8c610e26565b610efe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610fa1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f43616e6e6f7420726567697374657220746865206e756c6c206164647265737381525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b60405160405180910390a250565b600080611034836105ca565b90506000813b905060008114156110505761104e846112a7565b505b8192505050919050565b611062610e26565b6110d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6110dd816112dd565b50565b600060ff60f81b84848460405160200180857effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526001018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018381526020018281526020019450505050506040516020818303038152906040528051906020012060001c90509392505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f4174746573746174696f6e730000000000000000000000000000000000000000815250600c019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561125f57600080fd5b505afa158015611273573d6000803e3d6000fd5b505050506040513d602081101561128957600080fd5b8101908080519060200190929190505050905090565b600033905090565b60006112d682604051806020016112bd90611445565b6020820181038252601f19601f82011660405250611421565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611363576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806119d76026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080838351602085016000f59050803b61143b57600080fd5b8091505092915050565b610584806114538339019056fe608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610524806100606000396000f3fe6080604052600436106100295760003560e01c80631cb9ce631461002e578063d5f3948814610140575b600080fd5b6100c56004803603604081101561004457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561008157600080fd5b82018360208201111561009357600080fd5b803590602001918460018302840111640100000000831117156100b557600080fd5b9091929391929390505050610197565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101055780820151818401526020810190506100ea565b50505050905090810190601f1680156101325780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561014c57600080fd5b50610155610296565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461023e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806104ce6022913960400191505060405180910390fd5b61028d843485858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506102bb565b90509392505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600082511115610343576102d084610482565b610342576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f496e76616c696420636f6e74726163742061646472657373000000000000000081525060200191505060405180910390fd5b5b600060608573ffffffffffffffffffffffffffffffffffffffff1685856040518082805190602001908083835b602083106103935780518252602082019150602081019050602083039250610370565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146103f5576040519150601f19603f3d011682016040523d82523d6000602084013e6103fa565b606091505b50809250819350505081610476576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f5472616e73616374696f6e20657865637574696f6e206661696c65642e00000081525060200191505060405180910390fd5b80925050509392505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91508082141580156104c457506000801b8214155b9250505091905056fe4f6e6c792063616c6c61626c65206279206f726967696e616c206465706c6f796572a265627a7a72315820796e51776349bb2b3e4dcb41346aa3bf42360e48d1cc096de34492628cb3f13164736f6c634300050d00324f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a72315820e41ef86626839f7c1f5f93488c47172340327a93f3bf59f43f7295d348a8665064736f6c634300050d0032",
  "deployedBytecode": "0x6080604052600436106100a75760003560e01c80637b103999116100645780637b103999146103385780638da5cb5b1461038f5780638f32d59b146103e6578063a91ee0dc14610415578063ddecbfe814610466578063f2fde38b146104e1576100a7565b806342b9356f146100ac57806346fa85d5146100d757806354255be0146101525780635f75912b14610192578063632b7ea514610205578063715018a614610321575b600080fd5b3480156100b857600080fd5b506100c1610532565b6040518082815260200191505060405180910390f35b3480156100e357600080fd5b50610110600480360360208110156100fa57600080fd5b81019080803590602001909291905050506105ca565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561015e57600080fd5b50610167610672565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b34801561019e57600080fd5b506101eb600480360360408110156101b557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610699565b604051808215151515815260200191505060405180910390f35b6102a66004803603606081101561021b57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561026257600080fd5b82018360208201111561027457600080fd5b8035906020019184600183028401116401000000008311171561029657600080fd5b9091929391929390505050610a61565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102e65780820151818401526020810190506102cb565b50505050905090810190601f1680156103135780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561032d57600080fd5b50610336610c9e565b005b34801561034457600080fd5b5061034d610dd7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561039b57600080fd5b506103a4610dfd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103f257600080fd5b506103fb610e26565b604051808215151515815260200191505060405180910390f35b34801561042157600080fd5b506104646004803603602081101561043857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e84565b005b34801561047257600080fd5b5061049f6004803603602081101561048957600080fd5b8101908080359060200190929190505050611028565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104ed57600080fd5b506105306004803603602081101561050457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061105a565b005b6040518060200161054290611445565b6020820181038252601f19601f820116604052506040516020018082805190602001908083835b6020831061058c5780518252602082019150602081019050602083039250610569565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012081565b600061066b3083604051806020016105e190611445565b6020820181038252601f19601f820116604052506040516020018082805190602001908083835b6020831061062b5780518252602082019150602081019050602083039250610608565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001206110e0565b9050919050565b60008060008060016000806001839350829250819150809050935093509350935090919293565b6000806106a46111a4565b90506000808273ffffffffffffffffffffffffffffffffffffffff1663596abea586886040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050604080518083038186803b15801561072d57600080fd5b505afa158015610741573d6000803e3d6000fd5b505050506040513d604081101561075757600080fd5b81019080805190602001909291908051906020019092919050505091509150600060038363ffffffff1610159050600080905060008463ffffffff1611156107bb5760028463ffffffff168463ffffffff16816107b057fe5b0463ffffffff161090505b60006001905060608673ffffffffffffffffffffffffffffffffffffffff166303cc1aff8a6040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b15801561081457600080fd5b505afa158015610828573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561085257600080fd5b810190808051604051939291908464010000000082111561087257600080fd5b8382019150602082018581111561088857600080fd5b82518660208202830111640100000000821117156108a557600080fd5b8083526020830192505050908051906020019060200280838360005b838110156108dc5780820151818401526020810190506108c1565b50505050905001604052505050905060008090505b8151811015610a3e57600082828151811061090857fe5b602002602001015190508b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a305760008973ffffffffffffffffffffffffffffffffffffffff1663596abea58d846040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050604080518083038186803b1580156109cb57600080fd5b505afa1580156109df573d6000803e3d6000fd5b505050506040513d60408110156109f557600080fd5b810190808051906020019092919080519060200190929190505050509050848015610a2c57508863ffffffff168163ffffffff1611155b9450505b5080806001019150506108f1565b50838015610a495750825b8015610a525750815b97505050505050505092915050565b6060610a6d3386610699565b610adf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f646f6573206e6f742070617373206964656e746974792068657572697374696381525060200191505060405180910390fd5b610ae885611028565b73ffffffffffffffffffffffffffffffffffffffff16631cb9ce63348686866040518563ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509450505050506000604051808303818588803b158015610b9a57600080fd5b505af1158015610bae573d6000803e3d6000fd5b50505050506040513d6000823e3d601f19601f820116820180604052506020811015610bd957600080fd5b8101908080516040519392919084640100000000821115610bf957600080fd5b83820191506020820185811115610c0f57600080fd5b8251866001820283011164010000000082111715610c2c57600080fd5b8083526020830192505050908051906020019080838360005b83811015610c60578082015181840152602081019050610c45565b50505050905090810190601f168015610c8d5780820380516001836020036101000a031916815260200191505b506040525050509050949350505050565b610ca6610e26565b610d18576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610e6861129f565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b610e8c610e26565b610efe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610fa1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f43616e6e6f7420726567697374657220746865206e756c6c206164647265737381525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b60405160405180910390a250565b600080611034836105ca565b90506000813b905060008114156110505761104e846112a7565b505b8192505050919050565b611062610e26565b6110d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6110dd816112dd565b50565b600060ff60f81b84848460405160200180857effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526001018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018381526020018281526020019450505050506040516020818303038152906040528051906020012060001c90509392505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f4174746573746174696f6e730000000000000000000000000000000000000000815250600c019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561125f57600080fd5b505afa158015611273573d6000803e3d6000fd5b505050506040513d602081101561128957600080fd5b8101908080519060200190929190505050905090565b600033905090565b60006112d682604051806020016112bd90611445565b6020820181038252601f19601f82011660405250611421565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611363576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806119d76026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080838351602085016000f59050803b61143b57600080fd5b8091505092915050565b610584806114538339019056fe608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610524806100606000396000f3fe6080604052600436106100295760003560e01c80631cb9ce631461002e578063d5f3948814610140575b600080fd5b6100c56004803603604081101561004457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561008157600080fd5b82018360208201111561009357600080fd5b803590602001918460018302840111640100000000831117156100b557600080fd5b9091929391929390505050610197565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101055780820151818401526020810190506100ea565b50505050905090810190601f1680156101325780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561014c57600080fd5b50610155610296565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461023e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806104ce6022913960400191505060405180910390fd5b61028d843485858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506102bb565b90509392505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600082511115610343576102d084610482565b610342576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f496e76616c696420636f6e74726163742061646472657373000000000000000081525060200191505060405180910390fd5b5b600060608573ffffffffffffffffffffffffffffffffffffffff1685856040518082805190602001908083835b602083106103935780518252602082019150602081019050602083039250610370565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146103f5576040519150601f19603f3d011682016040523d82523d6000602084013e6103fa565b606091505b50809250819350505081610476576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f5472616e73616374696f6e20657865637574696f6e206661696c65642e00000081525060200191505060405180910390fd5b80925050509392505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91508082141580156104c457506000801b8214155b9250505091905056fe4f6e6c792063616c6c61626c65206279206f726967696e616c206465706c6f796572a265627a7a72315820796e51776349bb2b3e4dcb41346aa3bf42360e48d1cc096de34492628cb3f13164736f6c634300050d00324f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a72315820e41ef86626839f7c1f5f93488c47172340327a93f3bf59f43f7295d348a8665064736f6c634300050d0032",
  "sourceMap": "185:4866:163:-;;;698:17:4;718:12;:10;;;:12;;:::i;:::-;698:32;;749:9;740:6;;:18;;;;;;;;;;;;;;;;;;806:9;773:43;;802:1;773:43;;;;;;;;;;;;664:159;185:4866:163;;788:96:0;833:15;867:10;860:17;;788:96;:::o;185:4866:163:-;;;;;;;",
  "deployedSourceMap": "185:4866:163:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;256:167;;8:9:-1;5:2;;;30:1;27;20:12;5:2;256:167:163;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2655:187;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2655:187:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2655:187:163;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1455:117;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1455:117:163;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3433:1397;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3433:1397:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3433:1397:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;845:333;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;845:333:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;845:333:163;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;845:333:163;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;845:333:163;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;845:333:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1684:137:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1684:137:4;;;:::i;:::-;;3352:25:41;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3352:25:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;899:77:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;899:77:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1250:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1250:92:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3956:230:41;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3956:230:41;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3956:230:41;;;;;;;;;;;;;;;;;;;:::i;:::-;;1886:339:163;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1886:339:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1886:339:163;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1970:107:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1970:107:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1970:107:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;256:167:163;384:32;;;;;;;;:::i;:::-;41:4:-1;34:5;30:16;25:3;21:26;14:5;7:41;87:2;83:7;78:2;73:3;69:12;65:26;61:2;54:38;384:32:163;367:50;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;367:50:163;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;367:50:163;;;308:115;;;;;;256:167;:::o;2655:187::-;2722:13;2764:72;2795:4;2802:10;384:32;;;;;;;;:::i;:::-;41:4:-1;34:5;30:16;25:3;21:26;14:5;7:41;87:2;83:7;78:2;73:3;69:12;65:26;61:2;54:38;384:32:163;367:50;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;367:50:163;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;367:50:163;;;308:115;;;;;;2764:22;:72::i;:::-;2743:94;;2655:187;;;:::o;1455:117::-;1506:7;1515;1524;1533;1556:1;1559;1562;1565;1548:19;;;;;;;;;;;;;;;;;;;;1455:117;;;;:::o;3433:1397::-;3521:4;3533:26;3562:17;:15;:17::i;:::-;3533:46;;3586:16;3604;3624:12;:32;;;3657:10;3669:4;3624:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3624:50:163;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3624:50:163;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3624:50:163;;;;;;;;;;;;;;;;;;;;;;;;;3585:89;;;;3777:25;3818:1;3805:9;:14;;;;3777:42;;3920:30;3953:5;3920:38;;3980:1;3968:9;:13;;;3964:87;;;4043:1;4031:9;4019:21;;:9;:21;;;;;;;;:25;;;3991:53;;3964:87;4156:23;4182:4;4156:30;;4192:26;4221:12;:40;;;4262:10;4221:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4221:52:163;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4221:52:163;;;;;;39:16:-1;36:1;17:17;2:54;4221:52:163;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4221:52:163;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;385:12;380:3;373:25;421:4;416:3;412:14;405:21;;0:433;;4221:52:163;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4221:52:163;;;;;;;;;;;4192:81;;4284:9;4296:1;4284:13;;4279:306;4303:9;:16;4299:1;:20;4279:306;;;4334:17;4354:9;4364:1;4354:12;;;;;;;;;;;;;;4334:32;;4391:4;4378:17;;:9;:17;;;4374:205;;4408:21;4435:12;:32;;;4468:10;4480:9;4435:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4435:55:163;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4435:55:163;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4435:55:163;;;;;;;;;;;;;;;;;;;;;;;;;4407:83;;;4521:18;:49;;;;;4561:9;4543:27;;:14;:27;;;;4521:49;4500:70;;4374:205;;4279:306;4321:3;;;;;;;4279:306;;;;4754:20;:49;;;;;4778:25;4754:49;:71;;;;;4807:18;4754:71;4747:78;;;;;;;;;3433:1397;;;;:::o;845:333::-;967:12;995:47;1019:10;1031;995:23;:47::i;:::-;987:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1092:36;1117:10;1092:24;:36::i;:::-;:45;;;1144:9;1155:11;1168:4;;1092:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1092:81:163;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1092:81:163;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1092:81:163;;;;;;;39:16:-1;36:1;17:17;2:54;1092:81:163;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1092:81:163;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;1092:81:163;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1092:81:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1085:88;;845:333;;;;;;:::o;1684:137:4:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:1;1745:40;;1766:6;;;;;;;;;;;1745:40;;;;;;;;;;;;1812:1;1795:6;;:19;;;;;;;;;;;;;;;;;;1684:137::o;3352:25:41:-;;;;;;;;;;;;;:::o;899:77:4:-;937:7;963:6;;;;;;;;;;;956:13;;899:77;:::o;1250:92::-;1290:4;1329:6;;;;;;;;;;;1313:22;;:12;:10;:12::i;:::-;:22;;;1306:29;;1250:92;:::o;3956:230:41:-;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4060:1:41;4033:29;;:15;:29;;;;4025:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4126:15;4105:8;;:37;;;;;;;;;;;;;;;;;;4165:15;4153:28;;;;;;;;;;;;3956:230;:::o;1886:339:163:-;1956:13;1977:27;2007:28;2024:10;2007:16;:28::i;:::-;1977:58;;2041:16;2104:13;2092:26;2080:38;;2145:1;2133:8;:13;2129:65;;;2156:31;2176:10;2156:19;:31::i;:::-;;2129:65;2207:13;2200:20;;;;1886:339;;;:::o;1970:107:4:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;938:264:18:-;1055:7;1150:4;1143:12;;1157:8;1167:4;1173:12;1126:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1126:60:18;;;1116:71;;;;;;1108:80;;1070:127;;938:264;;;;;:::o;4329:151:41:-;4379:13;4421:8;;;;;;;;;;;:27;;;1321:32;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1321:32:41;;;1311:43;;;;;;4421:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4421:53:41;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4421:53:41;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4421:53:41;;;;;;;;;;;;;;;;4400:75;;4329:151;:::o;788:96:0:-;833:15;867:10;860:17;;788:96;:::o;4834:215:163:-;4901:13;4983:60;4998:10;5010:32;;;;;;;;:::i;:::-;41:4:-1;34:5;30:16;25:3;21:26;14:5;7:41;87:2;83:7;78:2;73:3;69:12;65:26;61:2;54:38;5010:32:163;4983:14;:60::i;:::-;4962:82;;4834:215;;;:::o;2178:225:4:-;2271:1;2251:22;;:8;:22;;;;2243:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:8;2331:38;;2352:6;;;;;;;;;;;2331:38;;;;;;;;;;;;2388:8;2379:6;;:17;;;;;;;;;;;;;;;;;;2178:225;:::o;326:318:18:-;397:7;412:23;524:4;513:8;507:15;502:2;492:8;488:17;485:1;477:52;458:71;;558:15;546:28;536:2;;596:1;593;586:12;536:2;624:15;617:22;;;326:318;;;;:::o;185:4866:163:-;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.13;\n\nimport \"../common/Create2.sol\";\nimport \"../common/interfaces/ICeloVersionedContract.sol\";\nimport \"../common/UsingRegistry.sol\";\nimport \"./IdentityProxy.sol\";\n\ncontract IdentityProxyHub is UsingRegistry, ICeloVersionedContract {\n  bytes32 public constant identityProxyCodeHash =\n    keccak256(\n      // solhint-disable-next-line indent\n      abi.encodePacked(type(IdentityProxy).creationCode)\n    );\n\n  /**\n   * @notice Performs an arbitrary call through the identifier's IdentityProxy,\n   * assuming msg.sender passes the identity heuristic.\n   * @param identifier The identifier whose IdentityProxy to call through.\n   * @param destination The address the IdentityProxy should call.\n   * @param data The calldata the IdentityProxy should send with the call.\n   * @return The return value of the external call.\n   */\n  function makeCall(\n    bytes32 identifier,\n    address destination,\n    bytes calldata data\n  ) external payable returns (bytes memory) {\n    require(passesIdentityHeuristic(msg.sender, identifier), \"does not pass identity heuristic\");\n    return getOrDeployIdentityProxy(identifier).makeCall.value(msg.value)(destination, data);\n  }\n\n  /**\n   * @notice Returns the storage, major, minor, and patch version of the contract.\n   * @return Storage version of the contract.\n   * @return Major version of the contract.\n   * @return Minor version of the contract.\n   * @return Patch version of the contract.\n   */\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256) {\n    return (1, 0, 0, 1);\n  }\n\n  /**\n   * @notice Returns the IdentityProxy address corresponding to the identifier,\n   * deploying an IdentityProxy if one hasn't already been deployed for this\n   * identifier.\n   * @param identifier The identifier whose proxy address is returned.\n   * @return The identifier's IdentityProxy address.\n   */\n  function getOrDeployIdentityProxy(bytes32 identifier) public returns (IdentityProxy) {\n    IdentityProxy identityProxy = getIdentityProxy(identifier);\n    uint256 codeSize;\n    assembly {\n      codeSize := extcodesize(identityProxy)\n    }\n    if (codeSize == 0) {\n      deployIdentityProxy(identifier);\n    }\n\n    return identityProxy;\n  }\n\n  /**\n   * @notice Returns the IdentityProxy address corresponding to the identifier.\n   * @param identifier The identifier whose proxy address is computed.\n   * @return The identifier's IdentityProxy address.\n   * @dev This function will return a correct address whether or not the\n   * corresponding IdentityProxy has been deployed. IdentityProxies are deployed\n   * using CREATE2 and this computes a CREATE2 address.\n   */\n  function getIdentityProxy(bytes32 identifier) public view returns (IdentityProxy) {\n    return IdentityProxy(Create2.computeAddress(address(this), identifier, identityProxyCodeHash));\n  }\n\n  /**\n   * @notice Returns true if the given address is the likely owner of the given\n   * identifier.\n   * @param addr The address to check.\n   * @param identifier The identifier to check.\n   * @return True if the given address is the likely owner of the given\n   * identifier, false otherwise.\n   * @dev Heuristic for ownership checks that the given account:\n   *   1. Has at least 3 completed attestations on the given identifier.\n   *   2. Completed strictly more than half of requested attestations.\n   *   3. Has at least as many completed attestations as any other account.\n   */\n  function passesIdentityHeuristic(address addr, bytes32 identifier) public view returns (bool) {\n    IAttestations attestations = getAttestations();\n    (uint32 completed, uint32 requested) = attestations.getAttestationStats(identifier, addr);\n\n    // 1. Check that the account has at least 3 completed attestations on the given identifier.\n    bool hasEnoughCompletions = completed >= 3;\n\n    // 2. Check that the account Completed strictly more than half of requested attestations.\n    bool completedOverHalfRequests = false;\n    if (completed > 0) {\n      completedOverHalfRequests = requested / completed < 2;\n    }\n\n    // 3. Check that the account has at least as many completed attestations as any other account.\n    bool hasMostCompletions = true;\n    address[] memory addresses = attestations.lookupAccountsForIdentifier(identifier);\n    for (uint256 i = 0; i < addresses.length; i++) {\n      address otherAddr = addresses[i];\n      if (otherAddr != addr) {\n        (uint32 otherCompleted, ) = attestations.getAttestationStats(identifier, otherAddr);\n        hasMostCompletions = hasMostCompletions && otherCompleted <= completed;\n      }\n    }\n\n    // Return true if the account passed all three checks above.\n    // Note: We do not return early on failures as we are optimizing for the passing case.\n    return hasEnoughCompletions && completedOverHalfRequests && hasMostCompletions;\n  }\n\n  function deployIdentityProxy(bytes32 identifier) internal returns (IdentityProxy) {\n    // solhint-disable-next-line indent\n    return IdentityProxy(Create2.deploy(identifier, type(IdentityProxy).creationCode));\n  }\n}\n",
  "sourcePath": "/Users/beaver/Development/temp/celo-monorepo/packages/protocol/contracts/identity/IdentityProxyHub.sol",
  "ast": {
    "absolutePath": "project:/contracts/identity/IdentityProxyHub.sol",
    "exportedSymbols": {
      "IdentityProxyHub": [
        50225
      ]
    },
    "id": 50226,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 49980,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:163"
      },
      {
        "absolutePath": "project:/contracts/common/Create2.sol",
        "file": "../common/Create2.sol",
        "id": 49981,
        "nodeType": "ImportDirective",
        "scope": 50226,
        "sourceUnit": 5588,
        "src": "26:31:163",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/interfaces/ICeloVersionedContract.sol",
        "file": "../common/interfaces/ICeloVersionedContract.sol",
        "id": 49982,
        "nodeType": "ImportDirective",
        "scope": 50226,
        "sourceUnit": 14595,
        "src": "58:57:163",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/UsingRegistry.sol",
        "file": "../common/UsingRegistry.sol",
        "id": 49983,
        "nodeType": "ImportDirective",
        "scope": 50226,
        "sourceUnit": 13583,
        "src": "116:37:163",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/identity/IdentityProxy.sol",
        "file": "./IdentityProxy.sol",
        "id": 49984,
        "nodeType": "ImportDirective",
        "scope": 50226,
        "sourceUnit": 49979,
        "src": "154:29:163",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 49985,
              "name": "UsingRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13582,
              "src": "214:13:163",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UsingRegistry_$13582",
                "typeString": "contract UsingRegistry"
              }
            },
            "id": 49986,
            "nodeType": "InheritanceSpecifier",
            "src": "214:13:163"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 49987,
              "name": "ICeloVersionedContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14594,
              "src": "229:22:163",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICeloVersionedContract_$14594",
                "typeString": "contract ICeloVersionedContract"
              }
            },
            "id": 49988,
            "nodeType": "InheritanceSpecifier",
            "src": "229:22:163"
          }
        ],
        "contractDependencies": [
          26,
          481,
          13582,
          14594,
          49978
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 50225,
        "linearizedBaseContracts": [
          50225,
          14594,
          13582,
          481,
          26
        ],
        "name": "IdentityProxyHub",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 49999,
            "name": "identityProxyCodeHash",
            "nodeType": "VariableDeclaration",
            "scope": 50225,
            "src": "256:167:163",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 49989,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "256:7:163",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "arguments": [
                    {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 49994,
                            "name": "IdentityProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49978,
                            "src": "389:13:163",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IdentityProxy_$49978_$",
                              "typeString": "type(contract IdentityProxy)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_IdentityProxy_$49978_$",
                              "typeString": "type(contract IdentityProxy)"
                            }
                          ],
                          "id": 49993,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59936,
                          "src": "384:4:163",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$_t_address_$returns$__$",
                            "typeString": "function (address) pure"
                          }
                        },
                        "id": 49995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "384:19:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_IdentityProxy_$49978",
                          "typeString": "type(contract IdentityProxy)"
                        }
                      },
                      "id": 49996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "creationCode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "384:32:163",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    ],
                    "expression": {
                      "argumentTypes": null,
                      "id": 49991,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59910,
                      "src": "367:3:163",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 49992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "367:16:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 49997,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "367:50:163",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 49990,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 59917,
                "src": "308:9:163",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 49998,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "308:115:163",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 50031,
              "nodeType": "Block",
              "src": "981:197:163",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 50012,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59923,
                              "src": "1019:3:163",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 50013,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1019:10:163",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 50014,
                            "name": "identifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50001,
                            "src": "1031:10:163",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 50011,
                          "name": "passesIdentityHeuristic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50205,
                          "src": "995:23:163",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (address,bytes32) view returns (bool)"
                          }
                        },
                        "id": 50015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "995:47:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "646f6573206e6f742070617373206964656e7469747920686575726973746963",
                        "id": 50016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1044:34:163",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9d6e62b8a5cea7b287afb6e4f2e4c4adfaf62a7e1734022c196e8d86b2c9addf",
                          "typeString": "literal_string \"does not pass identity heuristic\""
                        },
                        "value": "does not pass identity heuristic"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9d6e62b8a5cea7b287afb6e4f2e4c4adfaf62a7e1734022c196e8d86b2c9addf",
                          "typeString": "literal_string \"does not pass identity heuristic\""
                        }
                      ],
                      "id": 50010,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59926,
                        59927
                      ],
                      "referencedDeclaration": 59927,
                      "src": "987:7:163",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "987:92:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50018,
                  "nodeType": "ExpressionStatement",
                  "src": "987:92:163"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 50027,
                        "name": "destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50003,
                        "src": "1155:11:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 50028,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50005,
                        "src": "1168:4:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 50024,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59923,
                            "src": "1144:3:163",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 50025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1144:9:163",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 50020,
                                "name": "identifier",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50001,
                                "src": "1117:10:163",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 50019,
                              "name": "getOrDeployIdentityProxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50079,
                              "src": "1092:24:163",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$_t_contract$_IdentityProxy_$49978_$",
                                "typeString": "function (bytes32) returns (contract IdentityProxy)"
                              }
                            },
                            "id": 50021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1092:36:163",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IdentityProxy_$49978",
                              "typeString": "contract IdentityProxy"
                            }
                          },
                          "id": 50022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "makeCall",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49977,
                          "src": "1092:45:163",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,bytes memory) payable external returns (bytes memory)"
                          }
                        },
                        "id": 50023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1092:51:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$value_$",
                          "typeString": "function (uint256) pure returns (function (address,bytes memory) payable external returns (bytes memory))"
                        }
                      },
                      "id": 50026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1092:62:163",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$value",
                        "typeString": "function (address,bytes memory) payable external returns (bytes memory)"
                      }
                    },
                    "id": 50029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1092:81:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 50009,
                  "id": 50030,
                  "nodeType": "Return",
                  "src": "1085:88:163"
                }
              ]
            },
            "documentation": "@notice Performs an arbitrary call through the identifier's IdentityProxy,\nassuming msg.sender passes the identity heuristic.\n@param identifier The identifier whose IdentityProxy to call through.\n@param destination The address the IdentityProxy should call.\n@param data The calldata the IdentityProxy should send with the call.\n@return The return value of the external call.",
            "id": 50032,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "makeCall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50001,
                  "name": "identifier",
                  "nodeType": "VariableDeclaration",
                  "scope": 50032,
                  "src": "868:18:163",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 50000,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "868:7:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50003,
                  "name": "destination",
                  "nodeType": "VariableDeclaration",
                  "scope": 50032,
                  "src": "892:19:163",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50002,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "892:7:163",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50005,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 50032,
                  "src": "917:19:163",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50004,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "917:5:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "862:78:163"
            },
            "returnParameters": {
              "id": 50009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50008,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 50032,
                  "src": "967:12:163",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50007,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "967:5:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "966:14:163"
            },
            "scope": 50225,
            "src": "845:333:163",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 50049,
              "nodeType": "Block",
              "src": "1542:30:163",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 50043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1556:1:163",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 50044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1559:1:163",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 50045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1562:1:163",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 50046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1565:1:163",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "id": 50047,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1555:12:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_1_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_rational_1_by_1_$",
                      "typeString": "tuple(int_const 1,int_const 0,int_const 0,int_const 1)"
                    }
                  },
                  "functionReturnParameters": 50042,
                  "id": 50048,
                  "nodeType": "Return",
                  "src": "1548:19:163"
                }
              ]
            },
            "documentation": "@notice Returns the storage, major, minor, and patch version of the contract.\n@return Storage version of the contract.\n@return Major version of the contract.\n@return Minor version of the contract.\n@return Patch version of the contract.",
            "id": 50050,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVersionNumber",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50033,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1480:2:163"
            },
            "returnParameters": {
              "id": 50042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50035,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 50050,
                  "src": "1506:7:163",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50034,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1506:7:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50037,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 50050,
                  "src": "1515:7:163",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1515:7:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50039,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 50050,
                  "src": "1524:7:163",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50038,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1524:7:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50041,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 50050,
                  "src": "1533:7:163",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50040,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1533:7:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1505:36:163"
            },
            "scope": 50225,
            "src": "1455:117:163",
            "stateMutability": "pure",
            "superFunction": 14593,
            "visibility": "external"
          },
          {
            "body": {
              "id": 50078,
              "nodeType": "Block",
              "src": "1971:254:163",
              "statements": [
                {
                  "assignments": [
                    50058
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50058,
                      "name": "identityProxy",
                      "nodeType": "VariableDeclaration",
                      "scope": 50078,
                      "src": "1977:27:163",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IdentityProxy_$49978",
                        "typeString": "contract IdentityProxy"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 50057,
                        "name": "IdentityProxy",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 49978,
                        "src": "1977:13:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IdentityProxy_$49978",
                          "typeString": "contract IdentityProxy"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 50062,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 50060,
                        "name": "identifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50052,
                        "src": "2024:10:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 50059,
                      "name": "getIdentityProxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50098,
                      "src": "2007:16:163",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_contract$_IdentityProxy_$49978_$",
                        "typeString": "function (bytes32) view returns (contract IdentityProxy)"
                      }
                    },
                    "id": 50061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2007:28:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IdentityProxy_$49978",
                      "typeString": "contract IdentityProxy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1977:58:163"
                },
                {
                  "assignments": [
                    50064
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50064,
                      "name": "codeSize",
                      "nodeType": "VariableDeclaration",
                      "scope": 50078,
                      "src": "2041:16:163",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50063,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2041:7:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 50065,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2041:16:163"
                },
                {
                  "externalReferences": [
                    {
                      "codeSize": {
                        "declaration": 50064,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2080:8:163",
                        "valueSize": 1
                      }
                    },
                    {
                      "identityProxy": {
                        "declaration": 50058,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2104:13:163",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 50066,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    codeSize := extcodesize(identityProxy)\n}",
                  "src": "2063:61:163"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 50067,
                      "name": "codeSize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50064,
                      "src": "2133:8:163",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 50068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2145:1:163",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2133:13:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 50075,
                  "nodeType": "IfStatement",
                  "src": "2129:65:163",
                  "trueBody": {
                    "id": 50074,
                    "nodeType": "Block",
                    "src": "2148:46:163",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 50071,
                              "name": "identifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50052,
                              "src": "2176:10:163",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 50070,
                            "name": "deployIdentityProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50224,
                            "src": "2156:19:163",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$_t_contract$_IdentityProxy_$49978_$",
                              "typeString": "function (bytes32) returns (contract IdentityProxy)"
                            }
                          },
                          "id": 50072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2156:31:163",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IdentityProxy_$49978",
                            "typeString": "contract IdentityProxy"
                          }
                        },
                        "id": 50073,
                        "nodeType": "ExpressionStatement",
                        "src": "2156:31:163"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 50076,
                    "name": "identityProxy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 50058,
                    "src": "2207:13:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IdentityProxy_$49978",
                      "typeString": "contract IdentityProxy"
                    }
                  },
                  "functionReturnParameters": 50056,
                  "id": 50077,
                  "nodeType": "Return",
                  "src": "2200:20:163"
                }
              ]
            },
            "documentation": "@notice Returns the IdentityProxy address corresponding to the identifier,\ndeploying an IdentityProxy if one hasn't already been deployed for this\nidentifier.\n@param identifier The identifier whose proxy address is returned.\n@return The identifier's IdentityProxy address.",
            "id": 50079,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOrDeployIdentityProxy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50052,
                  "name": "identifier",
                  "nodeType": "VariableDeclaration",
                  "scope": 50079,
                  "src": "1920:18:163",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 50051,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1920:7:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1919:20:163"
            },
            "returnParameters": {
              "id": 50056,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50055,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 50079,
                  "src": "1956:13:163",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IdentityProxy_$49978",
                    "typeString": "contract IdentityProxy"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 50054,
                    "name": "IdentityProxy",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 49978,
                    "src": "1956:13:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IdentityProxy_$49978",
                      "typeString": "contract IdentityProxy"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1955:15:163"
            },
            "scope": 50225,
            "src": "1886:339:163",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 50097,
              "nodeType": "Block",
              "src": "2737:105:163",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 50090,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60293,
                                "src": "2795:4:163",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IdentityProxyHub_$50225",
                                  "typeString": "contract IdentityProxyHub"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IdentityProxyHub_$50225",
                                  "typeString": "contract IdentityProxyHub"
                                }
                              ],
                              "id": 50089,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2787:7:163",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 50091,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2787:13:163",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 50092,
                            "name": "identifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50081,
                            "src": "2802:10:163",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 50093,
                            "name": "identityProxyCodeHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49999,
                            "src": "2814:21:163",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 50087,
                            "name": "Create2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5587,
                            "src": "2764:7:163",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Create2_$5587_$",
                              "typeString": "type(library Create2)"
                            }
                          },
                          "id": 50088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "computeAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5586,
                          "src": "2764:22:163",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (address,bytes32,bytes32) pure returns (address)"
                          }
                        },
                        "id": 50094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2764:72:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 50086,
                      "name": "IdentityProxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49978,
                      "src": "2750:13:163",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IdentityProxy_$49978_$",
                        "typeString": "type(contract IdentityProxy)"
                      }
                    },
                    "id": 50095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2750:87:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IdentityProxy_$49978",
                      "typeString": "contract IdentityProxy"
                    }
                  },
                  "functionReturnParameters": 50085,
                  "id": 50096,
                  "nodeType": "Return",
                  "src": "2743:94:163"
                }
              ]
            },
            "documentation": "@notice Returns the IdentityProxy address corresponding to the identifier.\n@param identifier The identifier whose proxy address is computed.\n@return The identifier's IdentityProxy address.\n@dev This function will return a correct address whether or not the\ncorresponding IdentityProxy has been deployed. IdentityProxies are deployed\nusing CREATE2 and this computes a CREATE2 address.",
            "id": 50098,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIdentityProxy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50082,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50081,
                  "name": "identifier",
                  "nodeType": "VariableDeclaration",
                  "scope": 50098,
                  "src": "2681:18:163",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 50080,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2681:7:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2680:20:163"
            },
            "returnParameters": {
              "id": 50085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50084,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 50098,
                  "src": "2722:13:163",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IdentityProxy_$49978",
                    "typeString": "contract IdentityProxy"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 50083,
                    "name": "IdentityProxy",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 49978,
                    "src": "2722:13:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IdentityProxy_$49978",
                      "typeString": "contract IdentityProxy"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2721:15:163"
            },
            "scope": 50225,
            "src": "2655:187:163",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 50204,
              "nodeType": "Block",
              "src": "3527:1303:163",
              "statements": [
                {
                  "assignments": [
                    50108
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50108,
                      "name": "attestations",
                      "nodeType": "VariableDeclaration",
                      "scope": 50204,
                      "src": "3533:26:163",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAttestations_$50978",
                        "typeString": "contract IAttestations"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 50107,
                        "name": "IAttestations",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 50978,
                        "src": "3533:13:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAttestations_$50978",
                          "typeString": "contract IAttestations"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 50111,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 50109,
                      "name": "getAttestations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13360,
                      "src": "3562:15:163",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IAttestations_$50978_$",
                        "typeString": "function () view returns (contract IAttestations)"
                      }
                    },
                    "id": 50110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3562:17:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAttestations_$50978",
                      "typeString": "contract IAttestations"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3533:46:163"
                },
                {
                  "assignments": [
                    50113,
                    50115
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50113,
                      "name": "completed",
                      "nodeType": "VariableDeclaration",
                      "scope": 50204,
                      "src": "3586:16:163",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 50112,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3586:6:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 50115,
                      "name": "requested",
                      "nodeType": "VariableDeclaration",
                      "scope": 50204,
                      "src": "3604:16:163",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 50114,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3604:6:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 50121,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 50118,
                        "name": "identifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50102,
                        "src": "3657:10:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 50119,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50100,
                        "src": "3669:4:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 50116,
                        "name": "attestations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50108,
                        "src": "3624:12:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAttestations_$50978",
                          "typeString": "contract IAttestations"
                        }
                      },
                      "id": 50117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAttestationStats",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50882,
                      "src": "3624:32:163",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$returns$_t_uint32_$_t_uint32_$",
                        "typeString": "function (bytes32,address) view external returns (uint32,uint32)"
                      }
                    },
                    "id": 50120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3624:50:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint32_$_t_uint32_$",
                      "typeString": "tuple(uint32,uint32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3585:89:163"
                },
                {
                  "assignments": [
                    50123
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50123,
                      "name": "hasEnoughCompletions",
                      "nodeType": "VariableDeclaration",
                      "scope": 50204,
                      "src": "3777:25:163",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 50122,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3777:4:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 50127,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 50126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 50124,
                      "name": "completed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50113,
                      "src": "3805:9:163",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 50125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3818:1:163",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "3805:14:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3777:42:163"
                },
                {
                  "assignments": [
                    50129
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50129,
                      "name": "completedOverHalfRequests",
                      "nodeType": "VariableDeclaration",
                      "scope": 50204,
                      "src": "3920:30:163",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 50128,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3920:4:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 50131,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 50130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3953:5:163",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3920:38:163"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 50134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 50132,
                      "name": "completed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50113,
                      "src": "3968:9:163",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 50133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3980:1:163",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3968:13:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 50144,
                  "nodeType": "IfStatement",
                  "src": "3964:87:163",
                  "trueBody": {
                    "id": 50143,
                    "nodeType": "Block",
                    "src": "3983:68:163",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 50141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 50135,
                            "name": "completedOverHalfRequests",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50129,
                            "src": "3991:25:163",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 50140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 50138,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 50136,
                                "name": "requested",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50115,
                                "src": "4019:9:163",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 50137,
                                "name": "completed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50113,
                                "src": "4031:9:163",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "src": "4019:21:163",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 50139,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4043:1:163",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "4019:25:163",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3991:53:163",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 50142,
                        "nodeType": "ExpressionStatement",
                        "src": "3991:53:163"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    50146
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50146,
                      "name": "hasMostCompletions",
                      "nodeType": "VariableDeclaration",
                      "scope": 50204,
                      "src": "4156:23:163",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 50145,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4156:4:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 50148,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 50147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4182:4:163",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4156:30:163"
                },
                {
                  "assignments": [
                    50152
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50152,
                      "name": "addresses",
                      "nodeType": "VariableDeclaration",
                      "scope": 50204,
                      "src": "4192:26:163",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 50150,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4192:7:163",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 50151,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "4192:9:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 50157,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 50155,
                        "name": "identifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50102,
                        "src": "4262:10:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 50153,
                        "name": "attestations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50108,
                        "src": "4221:12:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAttestations_$50978",
                          "typeString": "contract IAttestations"
                        }
                      },
                      "id": 50154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lookupAccountsForIdentifier",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50968,
                      "src": "4221:40:163",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (address[] memory)"
                      }
                    },
                    "id": 50156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4221:52:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4192:81:163"
                },
                {
                  "body": {
                    "id": 50196,
                    "nodeType": "Block",
                    "src": "4326:259:163",
                    "statements": [
                      {
                        "assignments": [
                          50170
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 50170,
                            "name": "otherAddr",
                            "nodeType": "VariableDeclaration",
                            "scope": 50196,
                            "src": "4334:17:163",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 50169,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4334:7:163",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 50174,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 50171,
                            "name": "addresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50152,
                            "src": "4354:9:163",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 50173,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 50172,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50159,
                            "src": "4364:1:163",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4354:12:163",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4334:32:163"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 50177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 50175,
                            "name": "otherAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50170,
                            "src": "4378:9:163",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 50176,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50100,
                            "src": "4391:4:163",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4378:17:163",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 50195,
                        "nodeType": "IfStatement",
                        "src": "4374:205:163",
                        "trueBody": {
                          "id": 50194,
                          "nodeType": "Block",
                          "src": "4397:182:163",
                          "statements": [
                            {
                              "assignments": [
                                50179,
                                null
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 50179,
                                  "name": "otherCompleted",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 50194,
                                  "src": "4408:21:163",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "typeName": {
                                    "id": 50178,
                                    "name": "uint32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4408:6:163",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                },
                                null
                              ],
                              "id": 50185,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 50182,
                                    "name": "identifier",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 50102,
                                    "src": "4468:10:163",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 50183,
                                    "name": "otherAddr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 50170,
                                    "src": "4480:9:163",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 50180,
                                    "name": "attestations",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 50108,
                                    "src": "4435:12:163",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IAttestations_$50978",
                                      "typeString": "contract IAttestations"
                                    }
                                  },
                                  "id": 50181,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getAttestationStats",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 50882,
                                  "src": "4435:32:163",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$returns$_t_uint32_$_t_uint32_$",
                                    "typeString": "function (bytes32,address) view external returns (uint32,uint32)"
                                  }
                                },
                                "id": 50184,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4435:55:163",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_uint32_$_t_uint32_$",
                                  "typeString": "tuple(uint32,uint32)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4407:83:163"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 50192,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 50186,
                                  "name": "hasMostCompletions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 50146,
                                  "src": "4500:18:163",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 50191,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 50187,
                                    "name": "hasMostCompletions",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 50146,
                                    "src": "4521:18:163",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    },
                                    "id": 50190,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 50188,
                                      "name": "otherCompleted",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 50179,
                                      "src": "4543:14:163",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<=",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "id": 50189,
                                      "name": "completed",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 50113,
                                      "src": "4561:9:163",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "src": "4543:27:163",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "4521:49:163",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "4500:70:163",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 50193,
                              "nodeType": "ExpressionStatement",
                              "src": "4500:70:163"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 50162,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50159,
                      "src": "4299:1:163",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 50163,
                        "name": "addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50152,
                        "src": "4303:9:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 50164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4303:16:163",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4299:20:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50197,
                  "initializationExpression": {
                    "assignments": [
                      50159
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 50159,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 50197,
                        "src": "4284:9:163",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 50158,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4284:7:163",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 50161,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 50160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4296:1:163",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4284:13:163"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 50167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4321:3:163",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 50166,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50159,
                        "src": "4321:1:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 50168,
                    "nodeType": "ExpressionStatement",
                    "src": "4321:3:163"
                  },
                  "nodeType": "ForStatement",
                  "src": "4279:306:163"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 50202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 50200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 50198,
                        "name": "hasEnoughCompletions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50123,
                        "src": "4754:20:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 50199,
                        "name": "completedOverHalfRequests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50129,
                        "src": "4778:25:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "4754:49:163",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 50201,
                      "name": "hasMostCompletions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50146,
                      "src": "4807:18:163",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4754:71:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 50106,
                  "id": 50203,
                  "nodeType": "Return",
                  "src": "4747:78:163"
                }
              ]
            },
            "documentation": "@notice Returns true if the given address is the likely owner of the given\nidentifier.\n@param addr The address to check.\n@param identifier The identifier to check.\n@return True if the given address is the likely owner of the given\nidentifier, false otherwise.\n@dev Heuristic for ownership checks that the given account:\n  1. Has at least 3 completed attestations on the given identifier.\n  2. Completed strictly more than half of requested attestations.\n  3. Has at least as many completed attestations as any other account.",
            "id": 50205,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "passesIdentityHeuristic",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50100,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 50205,
                  "src": "3466:12:163",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50099,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3466:7:163",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50102,
                  "name": "identifier",
                  "nodeType": "VariableDeclaration",
                  "scope": 50205,
                  "src": "3480:18:163",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 50101,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3480:7:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3465:34:163"
            },
            "returnParameters": {
              "id": 50106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50105,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 50205,
                  "src": "3521:4:163",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 50104,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3521:4:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3520:6:163"
            },
            "scope": 50225,
            "src": "3433:1397:163",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 50223,
              "nodeType": "Block",
              "src": "4916:133:163",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 50215,
                            "name": "identifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50207,
                            "src": "4998:10:163",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 50217,
                                  "name": "IdentityProxy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 49978,
                                  "src": "5015:13:163",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IdentityProxy_$49978_$",
                                    "typeString": "type(contract IdentityProxy)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_IdentityProxy_$49978_$",
                                    "typeString": "type(contract IdentityProxy)"
                                  }
                                ],
                                "id": 50216,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59936,
                                "src": "5010:4:163",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$_t_address_$returns$__$",
                                  "typeString": "function (address) pure"
                                }
                              },
                              "id": 50218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5010:19:163",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_IdentityProxy_$49978",
                                "typeString": "type(contract IdentityProxy)"
                              }
                            },
                            "id": 50219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "creationCode",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5010:32:163",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 50213,
                            "name": "Create2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5587,
                            "src": "4983:7:163",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Create2_$5587_$",
                              "typeString": "type(library Create2)"
                            }
                          },
                          "id": 50214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deploy",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5556,
                          "src": "4983:14:163",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                            "typeString": "function (bytes32,bytes memory) returns (address)"
                          }
                        },
                        "id": 50220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4983:60:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 50212,
                      "name": "IdentityProxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49978,
                      "src": "4969:13:163",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IdentityProxy_$49978_$",
                        "typeString": "type(contract IdentityProxy)"
                      }
                    },
                    "id": 50221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4969:75:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IdentityProxy_$49978",
                      "typeString": "contract IdentityProxy"
                    }
                  },
                  "functionReturnParameters": 50211,
                  "id": 50222,
                  "nodeType": "Return",
                  "src": "4962:82:163"
                }
              ]
            },
            "documentation": null,
            "id": 50224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployIdentityProxy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50207,
                  "name": "identifier",
                  "nodeType": "VariableDeclaration",
                  "scope": 50224,
                  "src": "4863:18:163",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 50206,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4863:7:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4862:20:163"
            },
            "returnParameters": {
              "id": 50211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50210,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 50224,
                  "src": "4901:13:163",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IdentityProxy_$49978",
                    "typeString": "contract IdentityProxy"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 50209,
                    "name": "IdentityProxy",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 49978,
                    "src": "4901:13:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IdentityProxy_$49978",
                      "typeString": "contract IdentityProxy"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4900:15:163"
            },
            "scope": 50225,
            "src": "4834:215:163",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 50226,
        "src": "185:4866:163"
      }
    ],
    "src": "0:5052:163"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/identity/IdentityProxyHub.sol",
      "exportedSymbols": {
        "IdentityProxyHub": [
          50225
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".13"
          ]
        },
        "id": 49980,
        "name": "PragmaDirective",
        "src": "0:24:163"
      },
      {
        "attributes": {
          "SourceUnit": 5588,
          "absolutePath": "project:/contracts/common/Create2.sol",
          "file": "../common/Create2.sol",
          "scope": 50226,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 49981,
        "name": "ImportDirective",
        "src": "26:31:163"
      },
      {
        "attributes": {
          "SourceUnit": 14595,
          "absolutePath": "project:/contracts/common/interfaces/ICeloVersionedContract.sol",
          "file": "../common/interfaces/ICeloVersionedContract.sol",
          "scope": 50226,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 49982,
        "name": "ImportDirective",
        "src": "58:57:163"
      },
      {
        "attributes": {
          "SourceUnit": 13583,
          "absolutePath": "project:/contracts/common/UsingRegistry.sol",
          "file": "../common/UsingRegistry.sol",
          "scope": 50226,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 49983,
        "name": "ImportDirective",
        "src": "116:37:163"
      },
      {
        "attributes": {
          "SourceUnit": 49979,
          "absolutePath": "project:/contracts/identity/IdentityProxy.sol",
          "file": "./IdentityProxy.sol",
          "scope": 50226,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 49984,
        "name": "ImportDirective",
        "src": "154:29:163"
      },
      {
        "attributes": {
          "contractDependencies": [
            26,
            481,
            13582,
            14594,
            49978
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            50225,
            14594,
            13582,
            481,
            26
          ],
          "name": "IdentityProxyHub",
          "scope": 50226
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "UsingRegistry",
                  "referencedDeclaration": 13582,
                  "type": "contract UsingRegistry"
                },
                "id": 49985,
                "name": "UserDefinedTypeName",
                "src": "214:13:163"
              }
            ],
            "id": 49986,
            "name": "InheritanceSpecifier",
            "src": "214:13:163"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ICeloVersionedContract",
                  "referencedDeclaration": 14594,
                  "type": "contract ICeloVersionedContract"
                },
                "id": 49987,
                "name": "UserDefinedTypeName",
                "src": "229:22:163"
              }
            ],
            "id": 49988,
            "name": "InheritanceSpecifier",
            "src": "229:22:163"
          },
          {
            "attributes": {
              "constant": true,
              "name": "identityProxyCodeHash",
              "scope": 50225,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "bytes32",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "bytes32",
                  "type": "bytes32"
                },
                "id": 49989,
                "name": "ElementaryTypeName",
                "src": "256:7:163"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "isStructConstructorCall": false,
                  "lValueRequested": false,
                  "names": [
                    null
                  ],
                  "type": "bytes32",
                  "type_conversion": false
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 59917,
                      "type": "function (bytes memory) pure returns (bytes32)",
                      "value": "keccak256"
                    },
                    "id": 49990,
                    "name": "Identifier",
                    "src": "308:9:163"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "isStructConstructorCall": false,
                      "lValueRequested": false,
                      "names": [
                        null
                      ],
                      "type": "bytes memory",
                      "type_conversion": false
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "member_name": "encodePacked",
                          "referencedDeclaration": null,
                          "type": "function () pure returns (bytes memory)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 59910,
                              "type": "abi",
                              "value": "abi"
                            },
                            "id": 49991,
                            "name": "Identifier",
                            "src": "367:3:163"
                          }
                        ],
                        "id": 49992,
                        "name": "MemberAccess",
                        "src": "367:16:163"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "member_name": "creationCode",
                          "referencedDeclaration": null,
                          "type": "bytes memory"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "type(contract IdentityProxy)",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_contract$_IdentityProxy_$49978_$",
                                      "typeString": "type(contract IdentityProxy)"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 59936,
                                  "type": "function (address) pure",
                                  "value": "type"
                                },
                                "id": 49993,
                                "name": "Identifier",
                                "src": "384:4:163"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 49978,
                                  "type": "type(contract IdentityProxy)",
                                  "value": "IdentityProxy"
                                },
                                "id": 49994,
                                "name": "Identifier",
                                "src": "389:13:163"
                              }
                            ],
                            "id": 49995,
                            "name": "FunctionCall",
                            "src": "384:19:163"
                          }
                        ],
                        "id": 49996,
                        "name": "MemberAccess",
                        "src": "384:32:163"
                      }
                    ],
                    "id": 49997,
                    "name": "FunctionCall",
                    "src": "367:50:163"
                  }
                ],
                "id": 49998,
                "name": "FunctionCall",
                "src": "308:115:163"
              }
            ],
            "id": 49999,
            "name": "VariableDeclaration",
            "src": "256:167:163"
          },
          {
            "attributes": {
              "documentation": "@notice Performs an arbitrary call through the identifier's IdentityProxy,\nassuming msg.sender passes the identity heuristic.\n@param identifier The identifier whose IdentityProxy to call through.\n@param destination The address the IdentityProxy should call.\n@param data The calldata the IdentityProxy should send with the call.\n@return The return value of the external call.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "makeCall",
              "scope": 50225,
              "stateMutability": "payable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "identifier",
                      "scope": 50032,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 50000,
                        "name": "ElementaryTypeName",
                        "src": "868:7:163"
                      }
                    ],
                    "id": 50001,
                    "name": "VariableDeclaration",
                    "src": "868:18:163"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "destination",
                      "scope": 50032,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 50002,
                        "name": "ElementaryTypeName",
                        "src": "892:7:163"
                      }
                    ],
                    "id": 50003,
                    "name": "VariableDeclaration",
                    "src": "892:19:163"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "data",
                      "scope": 50032,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 50004,
                        "name": "ElementaryTypeName",
                        "src": "917:5:163"
                      }
                    ],
                    "id": 50005,
                    "name": "VariableDeclaration",
                    "src": "917:19:163"
                  }
                ],
                "id": 50006,
                "name": "ParameterList",
                "src": "862:78:163"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 50032,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 50007,
                        "name": "ElementaryTypeName",
                        "src": "967:5:163"
                      }
                    ],
                    "id": 50008,
                    "name": "VariableDeclaration",
                    "src": "967:12:163"
                  }
                ],
                "id": 50009,
                "name": "ParameterList",
                "src": "966:14:163"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_9d6e62b8a5cea7b287afb6e4f2e4c4adfaf62a7e1734022c196e8d86b2c9addf",
                                  "typeString": "literal_string \"does not pass identity heuristic\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59926,
                                59927
                              ],
                              "referencedDeclaration": 59927,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 50010,
                            "name": "Identifier",
                            "src": "987:7:163"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 50205,
                                  "type": "function (address,bytes32) view returns (bool)",
                                  "value": "passesIdentityHeuristic"
                                },
                                "id": 50011,
                                "name": "Identifier",
                                "src": "995:23:163"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 59923,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 50012,
                                    "name": "Identifier",
                                    "src": "1019:3:163"
                                  }
                                ],
                                "id": 50013,
                                "name": "MemberAccess",
                                "src": "1019:10:163"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 50001,
                                  "type": "bytes32",
                                  "value": "identifier"
                                },
                                "id": 50014,
                                "name": "Identifier",
                                "src": "1031:10:163"
                              }
                            ],
                            "id": 50015,
                            "name": "FunctionCall",
                            "src": "995:47:163"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "646f6573206e6f742070617373206964656e7469747920686575726973746963",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"does not pass identity heuristic\"",
                              "value": "does not pass identity heuristic"
                            },
                            "id": 50016,
                            "name": "Literal",
                            "src": "1044:34:163"
                          }
                        ],
                        "id": 50017,
                        "name": "FunctionCall",
                        "src": "987:92:163"
                      }
                    ],
                    "id": 50018,
                    "name": "ExpressionStatement",
                    "src": "987:92:163"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 50009
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "function (address,bytes memory) payable external returns (bytes memory)",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "value",
                                  "referencedDeclaration": null,
                                  "type": "function (uint256) pure returns (function (address,bytes memory) payable external returns (bytes memory))"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "makeCall",
                                      "referencedDeclaration": 49977,
                                      "type": "function (address,bytes memory) payable external returns (bytes memory)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "type": "contract IdentityProxy",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              ],
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 50079,
                                              "type": "function (bytes32) returns (contract IdentityProxy)",
                                              "value": "getOrDeployIdentityProxy"
                                            },
                                            "id": 50019,
                                            "name": "Identifier",
                                            "src": "1092:24:163"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 50001,
                                              "type": "bytes32",
                                              "value": "identifier"
                                            },
                                            "id": 50020,
                                            "name": "Identifier",
                                            "src": "1117:10:163"
                                          }
                                        ],
                                        "id": 50021,
                                        "name": "FunctionCall",
                                        "src": "1092:36:163"
                                      }
                                    ],
                                    "id": 50022,
                                    "name": "MemberAccess",
                                    "src": "1092:45:163"
                                  }
                                ],
                                "id": 50023,
                                "name": "MemberAccess",
                                "src": "1092:51:163"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "value",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 59923,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 50024,
                                    "name": "Identifier",
                                    "src": "1144:3:163"
                                  }
                                ],
                                "id": 50025,
                                "name": "MemberAccess",
                                "src": "1144:9:163"
                              }
                            ],
                            "id": 50026,
                            "name": "FunctionCall",
                            "src": "1092:62:163"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 50003,
                              "type": "address",
                              "value": "destination"
                            },
                            "id": 50027,
                            "name": "Identifier",
                            "src": "1155:11:163"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 50005,
                              "type": "bytes calldata",
                              "value": "data"
                            },
                            "id": 50028,
                            "name": "Identifier",
                            "src": "1168:4:163"
                          }
                        ],
                        "id": 50029,
                        "name": "FunctionCall",
                        "src": "1092:81:163"
                      }
                    ],
                    "id": 50030,
                    "name": "Return",
                    "src": "1085:88:163"
                  }
                ],
                "id": 50031,
                "name": "Block",
                "src": "981:197:163"
              }
            ],
            "id": 50032,
            "name": "FunctionDefinition",
            "src": "845:333:163"
          },
          {
            "attributes": {
              "documentation": "@notice Returns the storage, major, minor, and patch version of the contract.\n@return Storage version of the contract.\n@return Major version of the contract.\n@return Minor version of the contract.\n@return Patch version of the contract.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getVersionNumber",
              "scope": 50225,
              "stateMutability": "pure",
              "superFunction": 14593,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 50033,
                "name": "ParameterList",
                "src": "1480:2:163"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 50050,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 50034,
                        "name": "ElementaryTypeName",
                        "src": "1506:7:163"
                      }
                    ],
                    "id": 50035,
                    "name": "VariableDeclaration",
                    "src": "1506:7:163"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 50050,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 50036,
                        "name": "ElementaryTypeName",
                        "src": "1515:7:163"
                      }
                    ],
                    "id": 50037,
                    "name": "VariableDeclaration",
                    "src": "1515:7:163"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 50050,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 50038,
                        "name": "ElementaryTypeName",
                        "src": "1524:7:163"
                      }
                    ],
                    "id": 50039,
                    "name": "VariableDeclaration",
                    "src": "1524:7:163"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 50050,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 50040,
                        "name": "ElementaryTypeName",
                        "src": "1533:7:163"
                      }
                    ],
                    "id": 50041,
                    "name": "VariableDeclaration",
                    "src": "1533:7:163"
                  }
                ],
                "id": 50042,
                "name": "ParameterList",
                "src": "1505:36:163"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 50042
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "type": "tuple(int_const 1,int_const 0,int_const 0,int_const 1)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 50043,
                            "name": "Literal",
                            "src": "1556:1:163"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 50044,
                            "name": "Literal",
                            "src": "1559:1:163"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 50045,
                            "name": "Literal",
                            "src": "1562:1:163"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 50046,
                            "name": "Literal",
                            "src": "1565:1:163"
                          }
                        ],
                        "id": 50047,
                        "name": "TupleExpression",
                        "src": "1555:12:163"
                      }
                    ],
                    "id": 50048,
                    "name": "Return",
                    "src": "1548:19:163"
                  }
                ],
                "id": 50049,
                "name": "Block",
                "src": "1542:30:163"
              }
            ],
            "id": 50050,
            "name": "FunctionDefinition",
            "src": "1455:117:163"
          },
          {
            "attributes": {
              "documentation": "@notice Returns the IdentityProxy address corresponding to the identifier,\ndeploying an IdentityProxy if one hasn't already been deployed for this\nidentifier.\n@param identifier The identifier whose proxy address is returned.\n@return The identifier's IdentityProxy address.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getOrDeployIdentityProxy",
              "scope": 50225,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "identifier",
                      "scope": 50079,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 50051,
                        "name": "ElementaryTypeName",
                        "src": "1920:7:163"
                      }
                    ],
                    "id": 50052,
                    "name": "VariableDeclaration",
                    "src": "1920:18:163"
                  }
                ],
                "id": 50053,
                "name": "ParameterList",
                "src": "1919:20:163"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 50079,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract IdentityProxy",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "IdentityProxy",
                          "referencedDeclaration": 49978,
                          "type": "contract IdentityProxy"
                        },
                        "id": 50054,
                        "name": "UserDefinedTypeName",
                        "src": "1956:13:163"
                      }
                    ],
                    "id": 50055,
                    "name": "VariableDeclaration",
                    "src": "1956:13:163"
                  }
                ],
                "id": 50056,
                "name": "ParameterList",
                "src": "1955:15:163"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        50058
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "identityProxy",
                          "scope": 50078,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract IdentityProxy",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "IdentityProxy",
                              "referencedDeclaration": 49978,
                              "type": "contract IdentityProxy"
                            },
                            "id": 50057,
                            "name": "UserDefinedTypeName",
                            "src": "1977:13:163"
                          }
                        ],
                        "id": 50058,
                        "name": "VariableDeclaration",
                        "src": "1977:27:163"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "contract IdentityProxy",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 50098,
                              "type": "function (bytes32) view returns (contract IdentityProxy)",
                              "value": "getIdentityProxy"
                            },
                            "id": 50059,
                            "name": "Identifier",
                            "src": "2007:16:163"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 50052,
                              "type": "bytes32",
                              "value": "identifier"
                            },
                            "id": 50060,
                            "name": "Identifier",
                            "src": "2024:10:163"
                          }
                        ],
                        "id": 50061,
                        "name": "FunctionCall",
                        "src": "2007:28:163"
                      }
                    ],
                    "id": 50062,
                    "name": "VariableDeclarationStatement",
                    "src": "1977:58:163"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        50064
                      ],
                      "initialValue": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "codeSize",
                          "scope": 50078,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 50063,
                            "name": "ElementaryTypeName",
                            "src": "2041:7:163"
                          }
                        ],
                        "id": 50064,
                        "name": "VariableDeclaration",
                        "src": "2041:16:163"
                      }
                    ],
                    "id": 50065,
                    "name": "VariableDeclarationStatement",
                    "src": "2041:16:163"
                  },
                  {
                    "attributes": {
                      "externalReferences": [
                        {
                          "codeSize": {
                            "declaration": 50064,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2080:8:163",
                            "valueSize": 1
                          }
                        },
                        {
                          "identityProxy": {
                            "declaration": 50058,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2104:13:163",
                            "valueSize": 1
                          }
                        }
                      ],
                      "operations": "{\n    codeSize := extcodesize(identityProxy)\n}"
                    },
                    "children": [],
                    "id": 50066,
                    "name": "InlineAssembly",
                    "src": "2063:61:163"
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 50064,
                              "type": "uint256",
                              "value": "codeSize"
                            },
                            "id": 50067,
                            "name": "Identifier",
                            "src": "2133:8:163"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 50068,
                            "name": "Literal",
                            "src": "2145:1:163"
                          }
                        ],
                        "id": 50069,
                        "name": "BinaryOperation",
                        "src": "2133:13:163"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "contract IdentityProxy",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 50224,
                                      "type": "function (bytes32) returns (contract IdentityProxy)",
                                      "value": "deployIdentityProxy"
                                    },
                                    "id": 50070,
                                    "name": "Identifier",
                                    "src": "2156:19:163"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 50052,
                                      "type": "bytes32",
                                      "value": "identifier"
                                    },
                                    "id": 50071,
                                    "name": "Identifier",
                                    "src": "2176:10:163"
                                  }
                                ],
                                "id": 50072,
                                "name": "FunctionCall",
                                "src": "2156:31:163"
                              }
                            ],
                            "id": 50073,
                            "name": "ExpressionStatement",
                            "src": "2156:31:163"
                          }
                        ],
                        "id": 50074,
                        "name": "Block",
                        "src": "2148:46:163"
                      }
                    ],
                    "id": 50075,
                    "name": "IfStatement",
                    "src": "2129:65:163"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 50056
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 50058,
                          "type": "contract IdentityProxy",
                          "value": "identityProxy"
                        },
                        "id": 50076,
                        "name": "Identifier",
                        "src": "2207:13:163"
                      }
                    ],
                    "id": 50077,
                    "name": "Return",
                    "src": "2200:20:163"
                  }
                ],
                "id": 50078,
                "name": "Block",
                "src": "1971:254:163"
              }
            ],
            "id": 50079,
            "name": "FunctionDefinition",
            "src": "1886:339:163"
          },
          {
            "attributes": {
              "documentation": "@notice Returns the IdentityProxy address corresponding to the identifier.\n@param identifier The identifier whose proxy address is computed.\n@return The identifier's IdentityProxy address.\n@dev This function will return a correct address whether or not the\ncorresponding IdentityProxy has been deployed. IdentityProxies are deployed\nusing CREATE2 and this computes a CREATE2 address.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getIdentityProxy",
              "scope": 50225,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "identifier",
                      "scope": 50098,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 50080,
                        "name": "ElementaryTypeName",
                        "src": "2681:7:163"
                      }
                    ],
                    "id": 50081,
                    "name": "VariableDeclaration",
                    "src": "2681:18:163"
                  }
                ],
                "id": 50082,
                "name": "ParameterList",
                "src": "2680:20:163"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 50098,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract IdentityProxy",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "IdentityProxy",
                          "referencedDeclaration": 49978,
                          "type": "contract IdentityProxy"
                        },
                        "id": 50083,
                        "name": "UserDefinedTypeName",
                        "src": "2722:13:163"
                      }
                    ],
                    "id": 50084,
                    "name": "VariableDeclaration",
                    "src": "2722:13:163"
                  }
                ],
                "id": 50085,
                "name": "ParameterList",
                "src": "2721:15:163"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 50085
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "contract IdentityProxy",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 49978,
                              "type": "type(contract IdentityProxy)",
                              "value": "IdentityProxy"
                            },
                            "id": 50086,
                            "name": "Identifier",
                            "src": "2750:13:163"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "computeAddress",
                                  "referencedDeclaration": 5586,
                                  "type": "function (address,bytes32,bytes32) pure returns (address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 5587,
                                      "type": "type(library Create2)",
                                      "value": "Create2"
                                    },
                                    "id": 50087,
                                    "name": "Identifier",
                                    "src": "2764:7:163"
                                  }
                                ],
                                "id": 50088,
                                "name": "MemberAccess",
                                "src": "2764:22:163"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IdentityProxyHub_$50225",
                                          "typeString": "contract IdentityProxyHub"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)",
                                      "value": "address"
                                    },
                                    "id": 50089,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "2787:7:163"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 60293,
                                      "type": "contract IdentityProxyHub",
                                      "value": "this"
                                    },
                                    "id": 50090,
                                    "name": "Identifier",
                                    "src": "2795:4:163"
                                  }
                                ],
                                "id": 50091,
                                "name": "FunctionCall",
                                "src": "2787:13:163"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 50081,
                                  "type": "bytes32",
                                  "value": "identifier"
                                },
                                "id": 50092,
                                "name": "Identifier",
                                "src": "2802:10:163"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 49999,
                                  "type": "bytes32",
                                  "value": "identityProxyCodeHash"
                                },
                                "id": 50093,
                                "name": "Identifier",
                                "src": "2814:21:163"
                              }
                            ],
                            "id": 50094,
                            "name": "FunctionCall",
                            "src": "2764:72:163"
                          }
                        ],
                        "id": 50095,
                        "name": "FunctionCall",
                        "src": "2750:87:163"
                      }
                    ],
                    "id": 50096,
                    "name": "Return",
                    "src": "2743:94:163"
                  }
                ],
                "id": 50097,
                "name": "Block",
                "src": "2737:105:163"
              }
            ],
            "id": 50098,
            "name": "FunctionDefinition",
            "src": "2655:187:163"
          },
          {
            "attributes": {
              "documentation": "@notice Returns true if the given address is the likely owner of the given\nidentifier.\n@param addr The address to check.\n@param identifier The identifier to check.\n@return True if the given address is the likely owner of the given\nidentifier, false otherwise.\n@dev Heuristic for ownership checks that the given account:\n  1. Has at least 3 completed attestations on the given identifier.\n  2. Completed strictly more than half of requested attestations.\n  3. Has at least as many completed attestations as any other account.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "passesIdentityHeuristic",
              "scope": 50225,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "addr",
                      "scope": 50205,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 50099,
                        "name": "ElementaryTypeName",
                        "src": "3466:7:163"
                      }
                    ],
                    "id": 50100,
                    "name": "VariableDeclaration",
                    "src": "3466:12:163"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "identifier",
                      "scope": 50205,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 50101,
                        "name": "ElementaryTypeName",
                        "src": "3480:7:163"
                      }
                    ],
                    "id": 50102,
                    "name": "VariableDeclaration",
                    "src": "3480:18:163"
                  }
                ],
                "id": 50103,
                "name": "ParameterList",
                "src": "3465:34:163"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 50205,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 50104,
                        "name": "ElementaryTypeName",
                        "src": "3521:4:163"
                      }
                    ],
                    "id": 50105,
                    "name": "VariableDeclaration",
                    "src": "3521:4:163"
                  }
                ],
                "id": 50106,
                "name": "ParameterList",
                "src": "3520:6:163"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        50108
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "attestations",
                          "scope": 50204,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract IAttestations",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "IAttestations",
                              "referencedDeclaration": 50978,
                              "type": "contract IAttestations"
                            },
                            "id": 50107,
                            "name": "UserDefinedTypeName",
                            "src": "3533:13:163"
                          }
                        ],
                        "id": 50108,
                        "name": "VariableDeclaration",
                        "src": "3533:26:163"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "contract IAttestations",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 13360,
                              "type": "function () view returns (contract IAttestations)",
                              "value": "getAttestations"
                            },
                            "id": 50109,
                            "name": "Identifier",
                            "src": "3562:15:163"
                          }
                        ],
                        "id": 50110,
                        "name": "FunctionCall",
                        "src": "3562:17:163"
                      }
                    ],
                    "id": 50111,
                    "name": "VariableDeclarationStatement",
                    "src": "3533:46:163"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        50113,
                        50115
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "completed",
                          "scope": 50204,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint32",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint32",
                              "type": "uint32"
                            },
                            "id": 50112,
                            "name": "ElementaryTypeName",
                            "src": "3586:6:163"
                          }
                        ],
                        "id": 50113,
                        "name": "VariableDeclaration",
                        "src": "3586:16:163"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "requested",
                          "scope": 50204,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint32",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint32",
                              "type": "uint32"
                            },
                            "id": 50114,
                            "name": "ElementaryTypeName",
                            "src": "3604:6:163"
                          }
                        ],
                        "id": 50115,
                        "name": "VariableDeclaration",
                        "src": "3604:16:163"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple(uint32,uint32)",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "getAttestationStats",
                              "referencedDeclaration": 50882,
                              "type": "function (bytes32,address) view external returns (uint32,uint32)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 50108,
                                  "type": "contract IAttestations",
                                  "value": "attestations"
                                },
                                "id": 50116,
                                "name": "Identifier",
                                "src": "3624:12:163"
                              }
                            ],
                            "id": 50117,
                            "name": "MemberAccess",
                            "src": "3624:32:163"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 50102,
                              "type": "bytes32",
                              "value": "identifier"
                            },
                            "id": 50118,
                            "name": "Identifier",
                            "src": "3657:10:163"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 50100,
                              "type": "address",
                              "value": "addr"
                            },
                            "id": 50119,
                            "name": "Identifier",
                            "src": "3669:4:163"
                          }
                        ],
                        "id": 50120,
                        "name": "FunctionCall",
                        "src": "3624:50:163"
                      }
                    ],
                    "id": 50121,
                    "name": "VariableDeclarationStatement",
                    "src": "3585:89:163"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        50123
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "hasEnoughCompletions",
                          "scope": 50204,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 50122,
                            "name": "ElementaryTypeName",
                            "src": "3777:4:163"
                          }
                        ],
                        "id": 50123,
                        "name": "VariableDeclaration",
                        "src": "3777:25:163"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": ">=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 50113,
                              "type": "uint32",
                              "value": "completed"
                            },
                            "id": 50124,
                            "name": "Identifier",
                            "src": "3805:9:163"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "33",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 3",
                              "value": "3"
                            },
                            "id": 50125,
                            "name": "Literal",
                            "src": "3818:1:163"
                          }
                        ],
                        "id": 50126,
                        "name": "BinaryOperation",
                        "src": "3805:14:163"
                      }
                    ],
                    "id": 50127,
                    "name": "VariableDeclarationStatement",
                    "src": "3777:42:163"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        50129
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "completedOverHalfRequests",
                          "scope": 50204,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 50128,
                            "name": "ElementaryTypeName",
                            "src": "3920:4:163"
                          }
                        ],
                        "id": 50129,
                        "name": "VariableDeclaration",
                        "src": "3920:30:163"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "66616c7365",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "bool",
                          "type": "bool",
                          "value": "false"
                        },
                        "id": 50130,
                        "name": "Literal",
                        "src": "3953:5:163"
                      }
                    ],
                    "id": 50131,
                    "name": "VariableDeclarationStatement",
                    "src": "3920:38:163"
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": ">",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 50113,
                              "type": "uint32",
                              "value": "completed"
                            },
                            "id": 50132,
                            "name": "Identifier",
                            "src": "3968:9:163"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 50133,
                            "name": "Literal",
                            "src": "3980:1:163"
                          }
                        ],
                        "id": 50134,
                        "name": "BinaryOperation",
                        "src": "3968:13:163"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 50129,
                                      "type": "bool",
                                      "value": "completedOverHalfRequests"
                                    },
                                    "id": 50135,
                                    "name": "Identifier",
                                    "src": "3991:25:163"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "<",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "/",
                                          "type": "uint32"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 50115,
                                              "type": "uint32",
                                              "value": "requested"
                                            },
                                            "id": 50136,
                                            "name": "Identifier",
                                            "src": "4019:9:163"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 50113,
                                              "type": "uint32",
                                              "value": "completed"
                                            },
                                            "id": 50137,
                                            "name": "Identifier",
                                            "src": "4031:9:163"
                                          }
                                        ],
                                        "id": 50138,
                                        "name": "BinaryOperation",
                                        "src": "4019:21:163"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "32",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 2",
                                          "value": "2"
                                        },
                                        "id": 50139,
                                        "name": "Literal",
                                        "src": "4043:1:163"
                                      }
                                    ],
                                    "id": 50140,
                                    "name": "BinaryOperation",
                                    "src": "4019:25:163"
                                  }
                                ],
                                "id": 50141,
                                "name": "Assignment",
                                "src": "3991:53:163"
                              }
                            ],
                            "id": 50142,
                            "name": "ExpressionStatement",
                            "src": "3991:53:163"
                          }
                        ],
                        "id": 50143,
                        "name": "Block",
                        "src": "3983:68:163"
                      }
                    ],
                    "id": 50144,
                    "name": "IfStatement",
                    "src": "3964:87:163"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        50146
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "hasMostCompletions",
                          "scope": 50204,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 50145,
                            "name": "ElementaryTypeName",
                            "src": "4156:4:163"
                          }
                        ],
                        "id": 50146,
                        "name": "VariableDeclaration",
                        "src": "4156:23:163"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 50147,
                        "name": "Literal",
                        "src": "4182:4:163"
                      }
                    ],
                    "id": 50148,
                    "name": "VariableDeclarationStatement",
                    "src": "4156:30:163"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        50152
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "addresses",
                          "scope": 50204,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "address[]",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "length": null,
                              "type": "address[]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "address",
                                  "type": "address"
                                },
                                "id": 50150,
                                "name": "ElementaryTypeName",
                                "src": "4192:7:163"
                              }
                            ],
                            "id": 50151,
                            "name": "ArrayTypeName",
                            "src": "4192:9:163"
                          }
                        ],
                        "id": 50152,
                        "name": "VariableDeclaration",
                        "src": "4192:26:163"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "address[] memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "lookupAccountsForIdentifier",
                              "referencedDeclaration": 50968,
                              "type": "function (bytes32) view external returns (address[] memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 50108,
                                  "type": "contract IAttestations",
                                  "value": "attestations"
                                },
                                "id": 50153,
                                "name": "Identifier",
                                "src": "4221:12:163"
                              }
                            ],
                            "id": 50154,
                            "name": "MemberAccess",
                            "src": "4221:40:163"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 50102,
                              "type": "bytes32",
                              "value": "identifier"
                            },
                            "id": 50155,
                            "name": "Identifier",
                            "src": "4262:10:163"
                          }
                        ],
                        "id": 50156,
                        "name": "FunctionCall",
                        "src": "4221:52:163"
                      }
                    ],
                    "id": 50157,
                    "name": "VariableDeclarationStatement",
                    "src": "4192:81:163"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            50159
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "name": "i",
                              "scope": 50197,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 50158,
                                "name": "ElementaryTypeName",
                                "src": "4284:7:163"
                              }
                            ],
                            "id": 50159,
                            "name": "VariableDeclaration",
                            "src": "4284:9:163"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 50160,
                            "name": "Literal",
                            "src": "4296:1:163"
                          }
                        ],
                        "id": 50161,
                        "name": "VariableDeclarationStatement",
                        "src": "4284:13:163"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 50159,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 50162,
                            "name": "Identifier",
                            "src": "4299:1:163"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 50152,
                                  "type": "address[] memory",
                                  "value": "addresses"
                                },
                                "id": 50163,
                                "name": "Identifier",
                                "src": "4303:9:163"
                              }
                            ],
                            "id": 50164,
                            "name": "MemberAccess",
                            "src": "4303:16:163"
                          }
                        ],
                        "id": 50165,
                        "name": "BinaryOperation",
                        "src": "4299:20:163"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 50159,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 50166,
                                "name": "Identifier",
                                "src": "4321:1:163"
                              }
                            ],
                            "id": 50167,
                            "name": "UnaryOperation",
                            "src": "4321:3:163"
                          }
                        ],
                        "id": 50168,
                        "name": "ExpressionStatement",
                        "src": "4321:3:163"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "assignments": [
                                50170
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "otherAddr",
                                  "scope": 50196,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "address",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address",
                                      "stateMutability": "nonpayable",
                                      "type": "address"
                                    },
                                    "id": 50169,
                                    "name": "ElementaryTypeName",
                                    "src": "4334:7:163"
                                  }
                                ],
                                "id": 50170,
                                "name": "VariableDeclaration",
                                "src": "4334:17:163"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 50152,
                                      "type": "address[] memory",
                                      "value": "addresses"
                                    },
                                    "id": 50171,
                                    "name": "Identifier",
                                    "src": "4354:9:163"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 50159,
                                      "type": "uint256",
                                      "value": "i"
                                    },
                                    "id": 50172,
                                    "name": "Identifier",
                                    "src": "4364:1:163"
                                  }
                                ],
                                "id": 50173,
                                "name": "IndexAccess",
                                "src": "4354:12:163"
                              }
                            ],
                            "id": 50174,
                            "name": "VariableDeclarationStatement",
                            "src": "4334:32:163"
                          },
                          {
                            "attributes": {
                              "falseBody": null
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "!=",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 50170,
                                      "type": "address",
                                      "value": "otherAddr"
                                    },
                                    "id": 50175,
                                    "name": "Identifier",
                                    "src": "4378:9:163"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 50100,
                                      "type": "address",
                                      "value": "addr"
                                    },
                                    "id": 50176,
                                    "name": "Identifier",
                                    "src": "4391:4:163"
                                  }
                                ],
                                "id": 50177,
                                "name": "BinaryOperation",
                                "src": "4378:17:163"
                              },
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "assignments": [
                                        50179,
                                        null
                                      ]
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "constant": false,
                                          "name": "otherCompleted",
                                          "scope": 50194,
                                          "stateVariable": false,
                                          "storageLocation": "default",
                                          "type": "uint32",
                                          "value": null,
                                          "visibility": "internal"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "name": "uint32",
                                              "type": "uint32"
                                            },
                                            "id": 50178,
                                            "name": "ElementaryTypeName",
                                            "src": "4408:6:163"
                                          }
                                        ],
                                        "id": 50179,
                                        "name": "VariableDeclaration",
                                        "src": "4408:21:163"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "type": "tuple(uint32,uint32)",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                },
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "getAttestationStats",
                                              "referencedDeclaration": 50882,
                                              "type": "function (bytes32,address) view external returns (uint32,uint32)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 50108,
                                                  "type": "contract IAttestations",
                                                  "value": "attestations"
                                                },
                                                "id": 50180,
                                                "name": "Identifier",
                                                "src": "4435:12:163"
                                              }
                                            ],
                                            "id": 50181,
                                            "name": "MemberAccess",
                                            "src": "4435:32:163"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 50102,
                                              "type": "bytes32",
                                              "value": "identifier"
                                            },
                                            "id": 50182,
                                            "name": "Identifier",
                                            "src": "4468:10:163"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 50170,
                                              "type": "address",
                                              "value": "otherAddr"
                                            },
                                            "id": 50183,
                                            "name": "Identifier",
                                            "src": "4480:9:163"
                                          }
                                        ],
                                        "id": 50184,
                                        "name": "FunctionCall",
                                        "src": "4435:55:163"
                                      }
                                    ],
                                    "id": 50185,
                                    "name": "VariableDeclarationStatement",
                                    "src": "4407:83:163"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 50146,
                                              "type": "bool",
                                              "value": "hasMostCompletions"
                                            },
                                            "id": 50186,
                                            "name": "Identifier",
                                            "src": "4500:18:163"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "commonType": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              },
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "operator": "&&",
                                              "type": "bool"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 50146,
                                                  "type": "bool",
                                                  "value": "hasMostCompletions"
                                                },
                                                "id": 50187,
                                                "name": "Identifier",
                                                "src": "4521:18:163"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint32",
                                                    "typeString": "uint32"
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "operator": "<=",
                                                  "type": "bool"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 50179,
                                                      "type": "uint32",
                                                      "value": "otherCompleted"
                                                    },
                                                    "id": 50188,
                                                    "name": "Identifier",
                                                    "src": "4543:14:163"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 50113,
                                                      "type": "uint32",
                                                      "value": "completed"
                                                    },
                                                    "id": 50189,
                                                    "name": "Identifier",
                                                    "src": "4561:9:163"
                                                  }
                                                ],
                                                "id": 50190,
                                                "name": "BinaryOperation",
                                                "src": "4543:27:163"
                                              }
                                            ],
                                            "id": 50191,
                                            "name": "BinaryOperation",
                                            "src": "4521:49:163"
                                          }
                                        ],
                                        "id": 50192,
                                        "name": "Assignment",
                                        "src": "4500:70:163"
                                      }
                                    ],
                                    "id": 50193,
                                    "name": "ExpressionStatement",
                                    "src": "4500:70:163"
                                  }
                                ],
                                "id": 50194,
                                "name": "Block",
                                "src": "4397:182:163"
                              }
                            ],
                            "id": 50195,
                            "name": "IfStatement",
                            "src": "4374:205:163"
                          }
                        ],
                        "id": 50196,
                        "name": "Block",
                        "src": "4326:259:163"
                      }
                    ],
                    "id": 50197,
                    "name": "ForStatement",
                    "src": "4279:306:163"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 50106
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "&&",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "&&",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 50123,
                                  "type": "bool",
                                  "value": "hasEnoughCompletions"
                                },
                                "id": 50198,
                                "name": "Identifier",
                                "src": "4754:20:163"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 50129,
                                  "type": "bool",
                                  "value": "completedOverHalfRequests"
                                },
                                "id": 50199,
                                "name": "Identifier",
                                "src": "4778:25:163"
                              }
                            ],
                            "id": 50200,
                            "name": "BinaryOperation",
                            "src": "4754:49:163"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 50146,
                              "type": "bool",
                              "value": "hasMostCompletions"
                            },
                            "id": 50201,
                            "name": "Identifier",
                            "src": "4807:18:163"
                          }
                        ],
                        "id": 50202,
                        "name": "BinaryOperation",
                        "src": "4754:71:163"
                      }
                    ],
                    "id": 50203,
                    "name": "Return",
                    "src": "4747:78:163"
                  }
                ],
                "id": 50204,
                "name": "Block",
                "src": "3527:1303:163"
              }
            ],
            "id": 50205,
            "name": "FunctionDefinition",
            "src": "3433:1397:163"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "deployIdentityProxy",
              "scope": 50225,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "identifier",
                      "scope": 50224,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 50206,
                        "name": "ElementaryTypeName",
                        "src": "4863:7:163"
                      }
                    ],
                    "id": 50207,
                    "name": "VariableDeclaration",
                    "src": "4863:18:163"
                  }
                ],
                "id": 50208,
                "name": "ParameterList",
                "src": "4862:20:163"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 50224,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract IdentityProxy",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "IdentityProxy",
                          "referencedDeclaration": 49978,
                          "type": "contract IdentityProxy"
                        },
                        "id": 50209,
                        "name": "UserDefinedTypeName",
                        "src": "4901:13:163"
                      }
                    ],
                    "id": 50210,
                    "name": "VariableDeclaration",
                    "src": "4901:13:163"
                  }
                ],
                "id": 50211,
                "name": "ParameterList",
                "src": "4900:15:163"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 50211
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "contract IdentityProxy",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 49978,
                              "type": "type(contract IdentityProxy)",
                              "value": "IdentityProxy"
                            },
                            "id": 50212,
                            "name": "Identifier",
                            "src": "4969:13:163"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "deploy",
                                  "referencedDeclaration": 5556,
                                  "type": "function (bytes32,bytes memory) returns (address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 5587,
                                      "type": "type(library Create2)",
                                      "value": "Create2"
                                    },
                                    "id": 50213,
                                    "name": "Identifier",
                                    "src": "4983:7:163"
                                  }
                                ],
                                "id": 50214,
                                "name": "MemberAccess",
                                "src": "4983:14:163"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 50207,
                                  "type": "bytes32",
                                  "value": "identifier"
                                },
                                "id": 50215,
                                "name": "Identifier",
                                "src": "4998:10:163"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "creationCode",
                                  "referencedDeclaration": null,
                                  "type": "bytes memory"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "type(contract IdentityProxy)",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_type$_t_contract$_IdentityProxy_$49978_$",
                                              "typeString": "type(contract IdentityProxy)"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 59936,
                                          "type": "function (address) pure",
                                          "value": "type"
                                        },
                                        "id": 50216,
                                        "name": "Identifier",
                                        "src": "5010:4:163"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 49978,
                                          "type": "type(contract IdentityProxy)",
                                          "value": "IdentityProxy"
                                        },
                                        "id": 50217,
                                        "name": "Identifier",
                                        "src": "5015:13:163"
                                      }
                                    ],
                                    "id": 50218,
                                    "name": "FunctionCall",
                                    "src": "5010:19:163"
                                  }
                                ],
                                "id": 50219,
                                "name": "MemberAccess",
                                "src": "5010:32:163"
                              }
                            ],
                            "id": 50220,
                            "name": "FunctionCall",
                            "src": "4983:60:163"
                          }
                        ],
                        "id": 50221,
                        "name": "FunctionCall",
                        "src": "4969:75:163"
                      }
                    ],
                    "id": 50222,
                    "name": "Return",
                    "src": "4962:82:163"
                  }
                ],
                "id": 50223,
                "name": "Block",
                "src": "4916:133:163"
              }
            ],
            "id": 50224,
            "name": "FunctionDefinition",
            "src": "4834:215:163"
          }
        ],
        "id": 50225,
        "name": "ContractDefinition",
        "src": "185:4866:163"
      }
    ],
    "id": 50226,
    "name": "SourceUnit",
    "src": "0:5052:163"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.13+commit.5b0b510c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2025-05-05T17:49:51.507Z",
  "devdoc": {
    "methods": {
      "getIdentityProxy(bytes32)": {
        "details": "This function will return a correct address whether or not the corresponding IdentityProxy has been deployed. IdentityProxies are deployed using CREATE2 and this computes a CREATE2 address.",
        "params": {
          "identifier": "The identifier whose proxy address is computed."
        },
        "return": "The identifier's IdentityProxy address."
      },
      "getOrDeployIdentityProxy(bytes32)": {
        "params": {
          "identifier": "The identifier whose proxy address is returned."
        },
        "return": "The identifier's IdentityProxy address."
      },
      "getVersionNumber()": {
        "return": "Storage version of the contract.Major version of the contract.Minor version of the contract.Patch version of the contract."
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "makeCall(bytes32,address,bytes)": {
        "params": {
          "data": "The calldata the IdentityProxy should send with the call.",
          "destination": "The address the IdentityProxy should call.",
          "identifier": "The identifier whose IdentityProxy to call through."
        },
        "return": "The return value of the external call."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "passesIdentityHeuristic(address,bytes32)": {
        "details": "Heuristic for ownership checks that the given account:  1. Has at least 3 completed attestations on the given identifier.  2. Completed strictly more than half of requested attestations.  3. Has at least as many completed attestations as any other account.",
        "params": {
          "addr": "The address to check.",
          "identifier": "The identifier to check."
        },
        "return": "True if the given address is the likely owner of the given identifier, false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setRegistry(address)": {
        "params": {
          "registryAddress": "The address of a registry contract for routing to other contracts."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "getIdentityProxy(bytes32)": {
        "notice": "Returns the IdentityProxy address corresponding to the identifier."
      },
      "getOrDeployIdentityProxy(bytes32)": {
        "notice": "Returns the IdentityProxy address corresponding to the identifier, deploying an IdentityProxy if one hasn't already been deployed for this identifier."
      },
      "getVersionNumber()": {
        "notice": "Returns the storage, major, minor, and patch version of the contract."
      },
      "makeCall(bytes32,address,bytes)": {
        "notice": "Performs an arbitrary call through the identifier's IdentityProxy, assuming msg.sender passes the identity heuristic."
      },
      "passesIdentityHeuristic(address,bytes32)": {
        "notice": "Returns true if the given address is the likely owner of the given identifier."
      },
      "setRegistry(address)": {
        "notice": "Updates the address pointing to a Registry contract."
      }
    }
  }
}