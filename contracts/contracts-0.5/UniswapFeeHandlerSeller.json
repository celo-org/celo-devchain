{
  "contractName": "UniswapFeeHandlerSeller",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "test",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minimumReports",
          "type": "uint256"
        }
      ],
      "name": "MinimumReportsSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokneAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "router",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quote",
          "type": "uint256"
        }
      ],
      "name": "ReceivedQuote",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "RegistrySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "RouterAddressRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "RouterAddressSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "RouterUsed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "soldTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "boughtTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenSold",
      "type": "event"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "midPriceNumerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "midPriceDenominator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxSlippage",
          "type": "uint256"
        }
      ],
      "name": "calculateMinAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_registryAddress",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "tokenAddresses",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "newMininumReports",
          "type": "uint256[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "minimumReports",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract IRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "newMininumReports",
          "type": "uint256"
        }
      ],
      "name": "setMinimumReports",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVersionNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "setRouter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "removeRouter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getRoutersForToken",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sellTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "buyTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxSlippage",
          "type": "uint256"
        }
      ],
      "name": "sell",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.13+commit.5b0b510c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"test\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minimumReports\",\"type\":\"uint256\"}],\"name\":\"MinimumReportsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokneAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quote\",\"type\":\"uint256\"}],\"name\":\"ReceivedQuote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"RegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"RouterAddressRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"RouterAddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"RouterUsed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"soldTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"boughtTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenSold\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"midPriceNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"midPriceDenominator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSlippage\",\"type\":\"uint256\"}],\"name\":\"calculateMinAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getRoutersForToken\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVersionNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registryAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"newMininumReports\",\"type\":\"uint256[]\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minimumReports\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract IRegistry\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"removeRouter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSlippage\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newMininumReports\",\"type\":\"uint256\"}],\"name\":\"setMinimumReports\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"setRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"setRouter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"calculateMinAmount(uint256,uint256,uint256,uint256)\":{\"details\":\"Calculates the minimum amount of tokens that should be received for the specified  amount with the given mid-price and maximum slippage.\",\"params\":{\"amount\":\"The amount of tokens to be exchanged.\",\"maxSlippage\":\"The maximum slippage percentage as a fraction of the mid-price.\",\"midPriceDenominator\":\"The denominator of the mid-price for the token pair.\",\"midPriceNumerator\":\"The numerator of the mid-price for the token pair.\"},\"return\":\"The minimum amount of tokens that should be received as a uint256 value.\"},\"constructor\":{\"params\":{\"test\":\"Set to true to skip implementation initialisation.\"}},\"getRoutersForToken(address)\":{\"params\":{\"token\":\"The address of the token to query.\"},\"return\":\"An array of all the allowed router.\"},\"getVersionNumber()\":{\"return\":\"Storage version of the contract.Major version of the contract.Minor version of the contract.Patch version of the contract.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeRouter(address,address)\":{\"params\":{\"router\":\"Address of the router to remove.\",\"token\":\"Address of the token.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setMinimumReports(address,uint256)\":{\"params\":{\"newMininumReports\":\"The new update minimum number of reports required.\"}},\"setRegistry(address)\":{\"params\":{\"registryAddress\":\"The address of a registry contract for routing to other contracts.\"}},\"setRouter(address,address)\":{\"params\":{\"router\":\"The new router.\",\"token\":\"Address of the token to set.\"}},\"transfer(address,uint256,address)\":{\"params\":{\"amount\":\"The amount of tokens to transfer.\",\"to\":\"The address of the recipient to transfer the tokens to.\",\"token\":\"The address of the token to transfer.\"},\"return\":\"A boolean indicating whether the transfer was successful or not.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"constructor\":\"Sets initialized == true on implementation contracts.\",\"getRoutersForToken(address)\":{\"notice\":\"Get the list of routers for a token.\"},\"getVersionNumber()\":{\"notice\":\"Returns the storage, major, minor, and patch version of the contract.\"},\"removeRouter(address,address)\":{\"notice\":\"Allows owner to remove a router for a token.\"},\"setMinimumReports(address,uint256)\":{\"notice\":\"Allows owner to set the minimum number of reports required.\"},\"setRegistry(address)\":{\"notice\":\"Updates the address pointing to a Registry contract.\"},\"setRouter(address,address)\":{\"notice\":\"Allows owner to set the router for a token.\"},\"transfer(address,uint256,address)\":{\"notice\":\"Allows owner to transfer tokens of this contract. It's meant for governance to  trigger use cases not contemplated in this contract.\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/common/UniswapFeeHandlerSeller.sol\":\"UniswapFeeHandlerSeller\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\ncontract Context {\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\n    // an instance of this contract, which should be used via inheritance.\\n    constructor () internal { }\\n    // solhint-disable-previous-line no-empty-blocks\\n\\n    function _msgSender() internal view returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\"},\"openzeppelin-solidity/contracts/math/Math.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a >= b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow, so we distribute\\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\\n    }\\n}\\n\",\"keccak256\":\"0x4b5aa451e4e8801478708f94b118a7821c0500d676255eaf89fc78c14856ce4e\"},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\"},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\nimport \\\"../GSN/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(isOwner(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the caller is the current owner.\\n     */\\n    function isOwner() public view returns (bool) {\\n        return _msgSender() == _owner;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     */\\n    function _transferOwnership(address newOwner) internal {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\"},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\\n * the optional functions; to access them see {ERC20Detailed}.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\"},\"openzeppelin-solidity/contracts/utils/EnumerableSet.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * As of v2.5.0, only `address` sets are supported.\\n *\\n * Include with `using EnumerableSet for EnumerableSet.AddressSet;`.\\n *\\n * _Available since v2.5.0._\\n *\\n * @author Alberto Cuesta Ca\\u00f1ada\\n */\\nlibrary EnumerableSet {\\n\\n    struct AddressSet {\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping (address => uint256) index;\\n        address[] values;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     * Returns false if the value was already in the set.\\n     */\\n    function add(AddressSet storage set, address value)\\n        internal\\n        returns (bool)\\n    {\\n        if (!contains(set, value)){\\n            set.index[value] = set.values.push(value);\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     * Returns false if the value was not present in the set.\\n     */\\n    function remove(AddressSet storage set, address value)\\n        internal\\n        returns (bool)\\n    {\\n        if (contains(set, value)){\\n            uint256 toDeleteIndex = set.index[value] - 1;\\n            uint256 lastIndex = set.values.length - 1;\\n\\n            // If the element we're deleting is the last one, we can just remove it without doing a swap\\n            if (lastIndex != toDeleteIndex) {\\n                address lastValue = set.values[lastIndex];\\n\\n                // Move the last value to the index where the deleted value is\\n                set.values[toDeleteIndex] = lastValue;\\n                // Update the index for the moved value\\n                set.index[lastValue] = toDeleteIndex + 1; // All indexes are 1-based\\n            }\\n\\n            // Delete the index entry for the deleted value\\n            delete set.index[value];\\n\\n            // Delete the old entry for the moved value\\n            set.values.pop();\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value)\\n        internal\\n        view\\n        returns (bool)\\n    {\\n        return set.index[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns an array with all values in the set. O(N).\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n\\n     * WARNING: This function may run out of gas on large sets: use {length} and\\n     * {get} instead in these cases.\\n     */\\n    function enumerate(AddressSet storage set)\\n        internal\\n        view\\n        returns (address[] memory)\\n    {\\n        address[] memory output = new address[](set.values.length);\\n        for (uint256 i; i < set.values.length; i++){\\n            output[i] = set.values[i];\\n        }\\n        return output;\\n    }\\n\\n    /**\\n     * @dev Returns the number of elements on the set. O(1).\\n     */\\n    function length(AddressSet storage set)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        return set.values.length;\\n    }\\n\\n   /** @dev Returns the element stored at position `index` in the set. O(1).\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function get(AddressSet storage set, uint256 index)\\n        internal\\n        view\\n        returns (address)\\n    {\\n        return set.values[index];\\n    }\\n}\\n\",\"keccak256\":\"0xcce1d35afae7905e2fd76ff67c3fe866091e223c50133527c302a31ffce9a5d7\"},\"project:/contracts/common/FeeHandlerSeller.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\nimport \\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\\";\\nimport \\\"../common/FixidityLib.sol\\\";\\nimport \\\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\\";\\nimport \\\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./UsingRegistry.sol\\\";\\nimport \\\"../common/Initializable.sol\\\";\\n\\n// Abstract class for a FeeHandlerSeller, as defined in CIP-52\\n// https://github.com/celo-org/celo-proposals/blob/master/CIPs/cip-0052.md\\ncontract FeeHandlerSeller is Ownable, Initializable, UsingRegistry {\\n  using SafeMath for uint256;\\n  using FixidityLib for FixidityLib.Fraction;\\n\\n  // Address of the token\\n  // Minimal number of reports in SortedOracles contract\\n  mapping(address => uint256) public minimumReports;\\n\\n  event MinimumReportsSet(address tokenAddress, uint256 minimumReports);\\n  event TokenSold(address soldTokenAddress, address boughtTokenAddress, uint256 amount);\\n\\n  function initialize(\\n    address _registryAddress,\\n    address[] calldata tokenAddresses,\\n    uint256[] calldata newMininumReports\\n  ) external initializer {\\n    _transferOwnership(msg.sender);\\n    setRegistry(_registryAddress);\\n\\n    for (uint256 i = 0; i < tokenAddresses.length; i++) {\\n      _setMinimumReports(tokenAddresses[i], newMininumReports[i]);\\n    }\\n  }\\n\\n  /**\\n    * @notice Allows owner to set the minimum number of reports required.\\n    * @param newMininumReports The new update minimum number of reports required.\\n    */\\n  function setMinimumReports(address tokenAddress, uint256 newMininumReports) public onlyOwner {\\n    _setMinimumReports(tokenAddress, newMininumReports);\\n  }\\n\\n  function _setMinimumReports(address tokenAddress, uint256 newMininumReports) internal {\\n    minimumReports[tokenAddress] = newMininumReports;\\n    emit MinimumReportsSet(tokenAddress, newMininumReports);\\n  }\\n\\n  /**\\n    @dev Calculates the minimum amount of tokens that should be received for the specified \\n    amount with the given mid-price and maximum slippage.\\n    @param midPriceNumerator The numerator of the mid-price for the token pair.\\n    @param midPriceDenominator The denominator of the mid-price for the token pair.\\n    @param amount The amount of tokens to be exchanged.\\n    @param maxSlippage The maximum slippage percentage as a fraction of the mid-price.\\n    @return The minimum amount of tokens that should be received as a uint256 value.\\n  */\\n  function calculateMinAmount(\\n    uint256 midPriceNumerator,\\n    uint256 midPriceDenominator,\\n    uint256 amount,\\n    uint256 maxSlippage // as fraction\\n  ) public pure returns (uint256) {\\n    FixidityLib.Fraction memory maxSlippageFraction = FixidityLib.wrap(maxSlippage);\\n\\n    FixidityLib.Fraction memory price = FixidityLib.newFixedFraction(\\n      midPriceNumerator,\\n      midPriceDenominator\\n    );\\n    FixidityLib.Fraction memory amountFraction = FixidityLib.newFixed(amount);\\n    FixidityLib.Fraction memory totalAmount = price.multiply(amountFraction);\\n\\n    return\\n      totalAmount\\n        .subtract(price.multiply(maxSlippageFraction).multiply(amountFraction))\\n        .fromFixed();\\n  }\\n\\n  /**\\n  * @notice Allows owner to transfer tokens of this contract. It's meant for governance to \\n    trigger use cases not contemplated in this contract.\\n    @param token The address of the token to transfer.\\n    @param amount The amount of tokens to transfer.\\n    @param to The address of the recipient to transfer the tokens to.\\n    @return A boolean indicating whether the transfer was successful or not.\\n  */\\n  function transfer(address token, uint256 amount, address to) external onlyOwner returns (bool) {\\n    return IERC20(token).transfer(to, amount);\\n  }\\n}\\n\",\"keccak256\":\"0x566b158033df73c864c267aabdbd163ebfc45b16b70e0e3898f153c52874956b\"},\"project:/contracts/common/FixidityLib.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\n/**\\n * @title FixidityLib\\n * @author Gadi Guy, Alberto Cuesta Canada\\n * @notice This library provides fixed point arithmetic with protection against\\n * overflow.\\n * All operations are done with uint256 and the operands must have been created\\n * with any of the newFrom* functions, which shift the comma digits() to the\\n * right and check for limits, or with wrap() which expects a number already\\n * in the internal representation of a fraction.\\n * When using this library be sure to use maxNewFixed() as the upper limit for\\n * creation of fixed point numbers.\\n * @dev All contained functions are pure and thus marked internal to be inlined\\n * on consuming contracts at compile time for gas efficiency.\\n */\\nlibrary FixidityLib {\\n  struct Fraction {\\n    uint256 value;\\n  }\\n\\n  /**\\n   * @notice Number of positions that the comma is shifted to the right.\\n   */\\n  function digits() internal pure returns (uint8) {\\n    return 24;\\n  }\\n\\n  uint256 private constant FIXED1_UINT = 1000000000000000000000000;\\n\\n  /**\\n   * @notice This is 1 in the fixed point units used in this library.\\n   * @dev Test fixed1() equals 10^digits()\\n   * Hardcoded to 24 digits.\\n   */\\n  function fixed1() internal pure returns (Fraction memory) {\\n    return Fraction(FIXED1_UINT);\\n  }\\n\\n  /**\\n   * @notice Wrap a uint256 that represents a 24-decimal fraction in a Fraction\\n   * struct.\\n   * @param x Number that already represents a 24-decimal fraction.\\n   * @return A Fraction struct with contents x.\\n   */\\n  function wrap(uint256 x) internal pure returns (Fraction memory) {\\n    return Fraction(x);\\n  }\\n\\n  /**\\n   * @notice Unwraps the uint256 inside of a Fraction struct.\\n   */\\n  function unwrap(Fraction memory x) internal pure returns (uint256) {\\n    return x.value;\\n  }\\n\\n  /**\\n   * @notice The amount of decimals lost on each multiplication operand.\\n   * @dev Test mulPrecision() equals sqrt(fixed1)\\n   */\\n  function mulPrecision() internal pure returns (uint256) {\\n    return 1000000000000;\\n  }\\n\\n  /**\\n   * @notice Maximum value that can be converted to fixed point. Optimize for deployment.\\n   * @dev\\n   * Test maxNewFixed() equals maxUint256() / fixed1()\\n   */\\n  function maxNewFixed() internal pure returns (uint256) {\\n    return 115792089237316195423570985008687907853269984665640564;\\n  }\\n\\n  /**\\n   * @notice Converts a uint256 to fixed point Fraction\\n   * @dev Test newFixed(0) returns 0\\n   * Test newFixed(1) returns fixed1()\\n   * Test newFixed(maxNewFixed()) returns maxNewFixed() * fixed1()\\n   * Test newFixed(maxNewFixed()+1) fails\\n   */\\n  function newFixed(uint256 x) internal pure returns (Fraction memory) {\\n    require(x <= maxNewFixed(), \\\"can't create fixidity number larger than maxNewFixed()\\\");\\n    return Fraction(x * FIXED1_UINT);\\n  }\\n\\n  /**\\n   * @notice Converts a uint256 in the fixed point representation of this\\n   * library to a non decimal. All decimal digits will be truncated.\\n   */\\n  function fromFixed(Fraction memory x) internal pure returns (uint256) {\\n    return x.value / FIXED1_UINT;\\n  }\\n\\n  /**\\n   * @notice Converts two uint256 representing a fraction to fixed point units,\\n   * equivalent to multiplying dividend and divisor by 10^digits().\\n   * @param numerator numerator must be <= maxNewFixed()\\n   * @param denominator denominator must be <= maxNewFixed() and denominator can't be 0\\n   * @dev\\n   * Test newFixedFraction(1,0) fails\\n   * Test newFixedFraction(0,1) returns 0\\n   * Test newFixedFraction(1,1) returns fixed1()\\n   * Test newFixedFraction(1,fixed1()) returns 1\\n   */\\n  function newFixedFraction(uint256 numerator, uint256 denominator)\\n    internal\\n    pure\\n    returns (Fraction memory)\\n  {\\n    Fraction memory convertedNumerator = newFixed(numerator);\\n    Fraction memory convertedDenominator = newFixed(denominator);\\n    return divide(convertedNumerator, convertedDenominator);\\n  }\\n\\n  /**\\n   * @notice Returns the integer part of a fixed point number.\\n   * @dev\\n   * Test integer(0) returns 0\\n   * Test integer(fixed1()) returns fixed1()\\n   * Test integer(newFixed(maxNewFixed())) returns maxNewFixed()*fixed1()\\n   */\\n  function integer(Fraction memory x) internal pure returns (Fraction memory) {\\n    return Fraction((x.value / FIXED1_UINT) * FIXED1_UINT); // Can't overflow\\n  }\\n\\n  /**\\n   * @notice Returns the fractional part of a fixed point number.\\n   * In the case of a negative number the fractional is also negative.\\n   * @dev\\n   * Test fractional(0) returns 0\\n   * Test fractional(fixed1()) returns 0\\n   * Test fractional(fixed1()-1) returns 10^24-1\\n   */\\n  function fractional(Fraction memory x) internal pure returns (Fraction memory) {\\n    return Fraction(x.value - (x.value / FIXED1_UINT) * FIXED1_UINT); // Can't overflow\\n  }\\n\\n  /**\\n   * @notice x+y.\\n   * @dev The maximum value that can be safely used as an addition operator is defined as\\n   * maxFixedAdd = maxUint256()-1 / 2, or\\n   * 57896044618658097711785492504343953926634992332820282019728792003956564819967.\\n   * Test add(maxFixedAdd,maxFixedAdd) equals maxFixedAdd + maxFixedAdd\\n   * Test add(maxFixedAdd+1,maxFixedAdd+1) throws\\n   */\\n  function add(Fraction memory x, Fraction memory y) internal pure returns (Fraction memory) {\\n    uint256 z = x.value + y.value;\\n    require(z >= x.value, \\\"add overflow detected\\\");\\n    return Fraction(z);\\n  }\\n\\n  /**\\n   * @notice x-y.\\n   * @dev\\n   * Test subtract(6, 10) fails\\n   */\\n  function subtract(Fraction memory x, Fraction memory y) internal pure returns (Fraction memory) {\\n    require(x.value >= y.value, \\\"substraction underflow detected\\\");\\n    return Fraction(x.value - y.value);\\n  }\\n\\n  /**\\n   * @notice x*y. If any of the operators is higher than the max multiplier value it\\n   * might overflow.\\n   * @dev The maximum value that can be safely used as a multiplication operator\\n   * (maxFixedMul) is calculated as sqrt(maxUint256()*fixed1()),\\n   * or 340282366920938463463374607431768211455999999999999\\n   * Test multiply(0,0) returns 0\\n   * Test multiply(maxFixedMul,0) returns 0\\n   * Test multiply(0,maxFixedMul) returns 0\\n   * Test multiply(fixed1()/mulPrecision(),fixed1()*mulPrecision()) returns fixed1()\\n   * Test multiply(maxFixedMul,maxFixedMul) is around maxUint256()\\n   * Test multiply(maxFixedMul+1,maxFixedMul+1) fails\\n   */\\n  function multiply(Fraction memory x, Fraction memory y) internal pure returns (Fraction memory) {\\n    if (x.value == 0 || y.value == 0) return Fraction(0);\\n    if (y.value == FIXED1_UINT) return x;\\n    if (x.value == FIXED1_UINT) return y;\\n\\n    // Separate into integer and fractional parts\\n    // x = x1 + x2, y = y1 + y2\\n    uint256 x1 = integer(x).value / FIXED1_UINT;\\n    uint256 x2 = fractional(x).value;\\n    uint256 y1 = integer(y).value / FIXED1_UINT;\\n    uint256 y2 = fractional(y).value;\\n\\n    // (x1 + x2) * (y1 + y2) = (x1 * y1) + (x1 * y2) + (x2 * y1) + (x2 * y2)\\n    uint256 x1y1 = x1 * y1;\\n    if (x1 != 0) require(x1y1 / x1 == y1, \\\"overflow x1y1 detected\\\");\\n\\n    // x1y1 needs to be multiplied back by fixed1\\n    // solium-disable-next-line mixedcase\\n    uint256 fixed_x1y1 = x1y1 * FIXED1_UINT;\\n    if (x1y1 != 0) require(fixed_x1y1 / x1y1 == FIXED1_UINT, \\\"overflow x1y1 * fixed1 detected\\\");\\n    x1y1 = fixed_x1y1;\\n\\n    uint256 x2y1 = x2 * y1;\\n    if (x2 != 0) require(x2y1 / x2 == y1, \\\"overflow x2y1 detected\\\");\\n\\n    uint256 x1y2 = x1 * y2;\\n    if (x1 != 0) require(x1y2 / x1 == y2, \\\"overflow x1y2 detected\\\");\\n\\n    x2 = x2 / mulPrecision();\\n    y2 = y2 / mulPrecision();\\n    uint256 x2y2 = x2 * y2;\\n    if (x2 != 0) require(x2y2 / x2 == y2, \\\"overflow x2y2 detected\\\");\\n\\n    // result = fixed1() * x1 * y1 + x1 * y2 + x2 * y1 + x2 * y2 / fixed1();\\n    Fraction memory result = Fraction(x1y1);\\n    result = add(result, Fraction(x2y1)); // Add checks for overflow\\n    result = add(result, Fraction(x1y2)); // Add checks for overflow\\n    result = add(result, Fraction(x2y2)); // Add checks for overflow\\n    return result;\\n  }\\n\\n  /**\\n   * @notice 1/x\\n   * @dev\\n   * Test reciprocal(0) fails\\n   * Test reciprocal(fixed1()) returns fixed1()\\n   * Test reciprocal(fixed1()*fixed1()) returns 1 // Testing how the fractional is truncated\\n   * Test reciprocal(1+fixed1()*fixed1()) returns 0 // Testing how the fractional is truncated\\n   * Test reciprocal(newFixedFraction(1, 1e24)) returns newFixed(1e24)\\n   */\\n  function reciprocal(Fraction memory x) internal pure returns (Fraction memory) {\\n    require(x.value != 0, \\\"can't call reciprocal(0)\\\");\\n    return Fraction((FIXED1_UINT * FIXED1_UINT) / x.value); // Can't overflow\\n  }\\n\\n  /**\\n   * @notice x/y. If the dividend is higher than the max dividend value, it\\n   * might overflow. You can use multiply(x,reciprocal(y)) instead.\\n   * @dev The maximum value that can be safely used as a dividend (maxNewFixed) is defined as\\n   * divide(maxNewFixed,newFixedFraction(1,fixed1())) is around maxUint256().\\n   * This yields the value 115792089237316195423570985008687907853269984665640564.\\n   * Test maxNewFixed equals maxUint256()/fixed1()\\n   * Test divide(maxNewFixed,1) equals maxNewFixed*(fixed1)\\n   * Test divide(maxNewFixed+1,multiply(mulPrecision(),mulPrecision())) throws\\n   * Test divide(fixed1(),0) fails\\n   * Test divide(maxNewFixed,1) = maxNewFixed*(10^digits())\\n   * Test divide(maxNewFixed+1,1) throws\\n   */\\n  function divide(Fraction memory x, Fraction memory y) internal pure returns (Fraction memory) {\\n    require(y.value != 0, \\\"can't divide by 0\\\");\\n    uint256 X = x.value * FIXED1_UINT;\\n    require(X / FIXED1_UINT == x.value, \\\"overflow at divide\\\");\\n    return Fraction(X / y.value);\\n  }\\n\\n  /**\\n   * @notice x > y\\n   */\\n  function gt(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value > y.value;\\n  }\\n\\n  /**\\n   * @notice x >= y\\n   */\\n  function gte(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value >= y.value;\\n  }\\n\\n  /**\\n   * @notice x < y\\n   */\\n  function lt(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value < y.value;\\n  }\\n\\n  /**\\n   * @notice x <= y\\n   */\\n  function lte(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value <= y.value;\\n  }\\n\\n  /**\\n   * @notice x == y\\n   */\\n  function equals(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value == y.value;\\n  }\\n\\n  /**\\n   * @notice x <= 1\\n   */\\n  function isProperFraction(Fraction memory x) internal pure returns (bool) {\\n    return lte(x, fixed1());\\n  }\\n}\\n\",\"keccak256\":\"0xf1cebbfcf298ef05f24e940ab4351049e2da6e5ee77b272257d2c86b4cd1cc1c\"},\"project:/contracts/common/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ncontract Initializable {\\n  bool public initialized;\\n\\n  constructor(bool testingDeployment) public {\\n    if (!testingDeployment) {\\n      initialized = true;\\n    }\\n  }\\n\\n  modifier initializer() {\\n    require(!initialized, \\\"contract already initialized\\\");\\n    initialized = true;\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x27277d9f2c894659833be45eeca368a6d5ff060d944f0ad335e31003bf6477ed\"},\"project:/contracts/common/UniswapFeeHandlerSeller.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\nimport \\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\\";\\nimport \\\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"openzeppelin-solidity/contracts/utils/EnumerableSet.sol\\\";\\nimport \\\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\\";\\nimport \\\"openzeppelin-solidity/contracts/math/Math.sol\\\";\\n\\nimport \\\"./UsingRegistry.sol\\\";\\n\\nimport \\\"../common/interfaces/IFeeHandlerSeller.sol\\\";\\nimport \\\"../stability/interfaces/ISortedOracles.sol\\\";\\nimport \\\"../common/FixidityLib.sol\\\";\\nimport \\\"../common/Initializable.sol\\\";\\nimport \\\"./FeeHandlerSeller.sol\\\";\\n\\nimport \\\"../uniswap/interfaces/IUniswapV2RouterMin.sol\\\";\\nimport \\\"../uniswap/interfaces/IUniswapV2FactoryMin.sol\\\";\\n\\n// An implementation of FeeHandlerSeller supporting interfaces compatible with\\n// Uniswap V2 API\\n// See https://github.com/celo-org/celo-proposals/blob/master/CIPs/cip-0052.md\\ncontract UniswapFeeHandlerSeller is IFeeHandlerSeller, FeeHandlerSeller {\\n  using SafeMath for uint256;\\n  using FixidityLib for FixidityLib.Fraction;\\n  using EnumerableSet for EnumerableSet.AddressSet;\\n\\n  uint256 constant MAX_TIMESTAMP_BLOCK_EXCHANGE = 20;\\n  uint256 constant MAX_NUMBER_ROUTERS_PER_TOKEN = 3;\\n  mapping(address => EnumerableSet.AddressSet) private routerAddresses;\\n\\n  event ReceivedQuote(address indexed tokneAddress, address indexed router, uint256 quote);\\n  event RouterUsed(address router);\\n  event RouterAddressSet(address token, address router);\\n  event RouterAddressRemoved(address token, address router);\\n\\n  /**\\n   * @notice Sets initialized == true on implementation contracts.\\n   * @param test Set to true to skip implementation initialisation.\\n   */\\n  constructor(bool test) public Initializable(test) {}\\n\\n  // without this line the contract can't receive native Celo transfers\\n  function() external payable {}\\n\\n  /**\\n   * @notice Returns the storage, major, minor, and patch version of the contract.\\n   * @return Storage version of the contract.\\n   * @return Major version of the contract.\\n   * @return Minor version of the contract.\\n   * @return Patch version of the contract.\\n   */\\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256) {\\n    return (1, 1, 0, 0);\\n  }\\n\\n  /**\\n    * @notice Allows owner to set the router for a token.\\n    * @param token Address of the token to set.\\n    * @param router The new router.\\n    */\\n  function setRouter(address token, address router) external onlyOwner {\\n    _setRouter(token, router);\\n  }\\n\\n  function _setRouter(address token, address router) private {\\n    require(router != address(0), \\\"Router can't be address zero\\\");\\n    routerAddresses[token].add(router);\\n    require(\\n      routerAddresses[token].values.length <= MAX_NUMBER_ROUTERS_PER_TOKEN,\\n      \\\"Max number of routers reached\\\"\\n    );\\n    emit RouterAddressSet(token, router);\\n  }\\n\\n  /**\\n    * @notice Allows owner to remove a router for a token.\\n    * @param token Address of the token.\\n    * @param router Address of the router to remove.\\n    */\\n  function removeRouter(address token, address router) external onlyOwner {\\n    routerAddresses[token].remove(router);\\n    emit RouterAddressRemoved(token, router);\\n  }\\n\\n  /**\\n    * @notice Get the list of routers for a token.\\n    * @param token The address of the token to query.\\n    * @return An array of all the allowed router.\\n    */\\n  function getRoutersForToken(address token) external view returns (address[] memory) {\\n    return routerAddresses[token].values;\\n  }\\n\\n  /**\\n  * @dev Calculates the minimum amount of tokens that can be received for a given amount of sell tokens, \\n          taking into account the slippage and the rates of the sell token and CELO token on the Uniswap V2 pair.\\n  * @param sellTokenAddress The address of the sell token.\\n  * @param maxSlippage The maximum slippage allowed.\\n  * @param amount The amount of sell tokens to be traded.\\n  * @param bestRouter The Uniswap V2 router with the best price.\\n  * @return The minimum amount of tokens that can be received.\\n  */\\n  function calculateAllMinAmount(\\n    address sellTokenAddress,\\n    uint256 maxSlippage,\\n    uint256 amount,\\n    IUniswapV2RouterMin bestRouter\\n  ) private view returns (uint256) {\\n    ISortedOracles sortedOracles = getSortedOracles();\\n    uint256 minReports = minimumReports[sellTokenAddress];\\n\\n    require(\\n      sortedOracles.numRates(sellTokenAddress) >= minReports,\\n      \\\"Number of reports for token not enough\\\"\\n    );\\n\\n    uint256 minimalSortedOracles = 0;\\n    // if minimumReports for this token is zero, assume the check is not needed\\n    if (minReports > 0) {\\n      (uint256 rateNumerator, uint256 rateDenominator) = sortedOracles.medianRate(sellTokenAddress);\\n\\n      minimalSortedOracles = calculateMinAmount(\\n        rateNumerator,\\n        rateDenominator,\\n        amount,\\n        maxSlippage\\n      );\\n    }\\n\\n    IERC20 celoToken = getGoldToken();\\n    address pair = IUniswapV2FactoryMin(bestRouter.factory()).getPair(\\n      sellTokenAddress,\\n      address(celoToken)\\n    );\\n    uint256 minAmountPair = calculateMinAmount(\\n      IERC20(sellTokenAddress).balanceOf(pair),\\n      celoToken.balanceOf(pair),\\n      amount,\\n      maxSlippage\\n    );\\n\\n    return Math.max(minAmountPair, minimalSortedOracles);\\n  }\\n\\n  // This function explicitly defines few variables because it was getting error \\\"stack too deep\\\"\\n  function sell(\\n    address sellTokenAddress,\\n    address buyTokenAddress,\\n    uint256 amount,\\n    uint256 maxSlippage // as fraction,\\n  ) external returns (uint256) {\\n    require(\\n      buyTokenAddress == registry.getAddressForOrDie(GOLD_TOKEN_REGISTRY_ID),\\n      \\\"Buy token can only be gold token\\\"\\n    );\\n\\n    require(\\n      routerAddresses[sellTokenAddress].values.length > 0,\\n      \\\"routerAddresses should be non empty\\\"\\n    );\\n\\n    // An improvement to this function would be to allow the user to pass a path as argument\\n    // and if it generates a better outcome that the ones enabled that gets used\\n    // and the user gets a reward\\n\\n    IERC20 celoToken = getGoldToken();\\n\\n    IUniswapV2RouterMin bestRouter;\\n    uint256 bestRouterQuote = 0;\\n\\n    address[] memory path = new address[](2);\\n\\n    path[0] = sellTokenAddress;\\n    path[1] = address(celoToken);\\n\\n    for (uint256 i = 0; i < routerAddresses[sellTokenAddress].values.length; i++) {\\n      address poolAddress = routerAddresses[sellTokenAddress].get(i);\\n      IUniswapV2RouterMin router = IUniswapV2RouterMin(poolAddress);\\n\\n      // Using the second return value becuase it's the last argument,\\n      // the previous values show how many tokens are exchanged in each path\\n      // so the first value would be equivalent to balanceToBurn\\n      uint256 wouldGet = router.getAmountsOut(amount, path)[1];\\n\\n      emit ReceivedQuote(sellTokenAddress, poolAddress, wouldGet);\\n      if (wouldGet > bestRouterQuote) {\\n        bestRouterQuote = wouldGet;\\n        bestRouter = router;\\n      }\\n    }\\n\\n    require(bestRouterQuote != 0, \\\"Can't exchange with zero quote\\\");\\n\\n    uint256 minAmount = 0;\\n    minAmount = calculateAllMinAmount(sellTokenAddress, maxSlippage, amount, bestRouter);\\n\\n    IERC20(sellTokenAddress).approve(address(bestRouter), amount);\\n    bestRouter.swapExactTokensForTokens(\\n      amount,\\n      minAmount,\\n      path,\\n      address(this),\\n      block.timestamp + MAX_TIMESTAMP_BLOCK_EXCHANGE\\n    );\\n\\n    uint256 celoAmount = celoToken.balanceOf(address(this));\\n    celoToken.transfer(msg.sender, celoAmount);\\n    emit RouterUsed(address(bestRouter));\\n    emit TokenSold(sellTokenAddress, buyTokenAddress, amount);\\n    return celoAmount;\\n  }\\n}\\n\",\"keccak256\":\"0xdc71f117990f98a26ee47036ad0d126bf14cc366ddd230180dd0cbe05a3a31b7\"},\"project:/contracts/common/UsingRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity ^0.5.13;\\n\\nimport \\\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\\";\\nimport \\\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\\\";\\n\\nimport \\\"./interfaces/IAccounts.sol\\\";\\nimport \\\"./interfaces/IFeeCurrencyWhitelist.sol\\\";\\nimport \\\"./interfaces/IFreezer.sol\\\";\\nimport \\\"./interfaces/IRegistry.sol\\\";\\n\\nimport \\\"../governance/interfaces/IElection.sol\\\";\\nimport \\\"../governance/interfaces/IGovernance.sol\\\";\\nimport \\\"../governance/interfaces/ILockedGold.sol\\\";\\nimport \\\"../governance/interfaces/IValidators.sol\\\";\\n\\nimport \\\"../identity/interfaces/IRandom.sol\\\";\\nimport \\\"../identity/interfaces/IAttestations.sol\\\";\\n\\nimport \\\"../../lib/mento-core/contracts/interfaces/IExchange.sol\\\";\\nimport \\\"../../lib/mento-core/contracts/interfaces/IReserve.sol\\\";\\nimport \\\"../../lib/mento-core/contracts/interfaces/IStableToken.sol\\\";\\nimport \\\"../stability/interfaces/ISortedOracles.sol\\\";\\n\\ncontract UsingRegistry is Ownable {\\n  event RegistrySet(address indexed registryAddress);\\n\\n  // solhint-disable state-visibility\\n  bytes32 constant ACCOUNTS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Accounts\\\"));\\n  bytes32 constant ATTESTATIONS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Attestations\\\"));\\n  bytes32 constant DOWNTIME_SLASHER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"DowntimeSlasher\\\"));\\n  bytes32 constant DOUBLE_SIGNING_SLASHER_REGISTRY_ID = keccak256(\\n    abi.encodePacked(\\\"DoubleSigningSlasher\\\")\\n  );\\n  bytes32 constant ELECTION_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Election\\\"));\\n  bytes32 constant EXCHANGE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Exchange\\\"));\\n  bytes32 constant FEE_CURRENCY_WHITELIST_REGISTRY_ID = keccak256(\\n    abi.encodePacked(\\\"FeeCurrencyWhitelist\\\")\\n  );\\n  bytes32 constant FREEZER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Freezer\\\"));\\n  bytes32 constant GOLD_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"GoldToken\\\"));\\n  bytes32 constant GOVERNANCE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Governance\\\"));\\n  bytes32 constant GOVERNANCE_SLASHER_REGISTRY_ID = keccak256(\\n    abi.encodePacked(\\\"GovernanceSlasher\\\")\\n  );\\n  bytes32 constant LOCKED_GOLD_REGISTRY_ID = keccak256(abi.encodePacked(\\\"LockedGold\\\"));\\n  bytes32 constant RESERVE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Reserve\\\"));\\n  bytes32 constant RANDOM_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Random\\\"));\\n  bytes32 constant SORTED_ORACLES_REGISTRY_ID = keccak256(abi.encodePacked(\\\"SortedOracles\\\"));\\n  bytes32 constant STABLE_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"StableToken\\\"));\\n  bytes32 constant VALIDATORS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Validators\\\"));\\n  // solhint-enable state-visibility\\n\\n  IRegistry public registry;\\n\\n  modifier onlyRegisteredContract(bytes32 identifierHash) {\\n    require(registry.getAddressForOrDie(identifierHash) == msg.sender, \\\"only registered contract\\\");\\n    _;\\n  }\\n\\n  modifier onlyRegisteredContracts(bytes32[] memory identifierHashes) {\\n    require(registry.isOneOf(identifierHashes, msg.sender), \\\"only registered contracts\\\");\\n    _;\\n  }\\n\\n  /**\\n   * @notice Updates the address pointing to a Registry contract.\\n   * @param registryAddress The address of a registry contract for routing to other contracts.\\n   */\\n  function setRegistry(address registryAddress) public onlyOwner {\\n    require(registryAddress != address(0), \\\"Cannot register the null address\\\");\\n    registry = IRegistry(registryAddress);\\n    emit RegistrySet(registryAddress);\\n  }\\n\\n  function getAccounts() internal view returns (IAccounts) {\\n    return IAccounts(registry.getAddressForOrDie(ACCOUNTS_REGISTRY_ID));\\n  }\\n\\n  function getAttestations() internal view returns (IAttestations) {\\n    return IAttestations(registry.getAddressForOrDie(ATTESTATIONS_REGISTRY_ID));\\n  }\\n\\n  function getElection() internal view returns (IElection) {\\n    return IElection(registry.getAddressForOrDie(ELECTION_REGISTRY_ID));\\n  }\\n\\n  function getExchange() internal view returns (IExchange) {\\n    return IExchange(registry.getAddressForOrDie(EXCHANGE_REGISTRY_ID));\\n  }\\n\\n  function getFeeCurrencyWhitelistRegistry() internal view returns (IFeeCurrencyWhitelist) {\\n    return IFeeCurrencyWhitelist(registry.getAddressForOrDie(FEE_CURRENCY_WHITELIST_REGISTRY_ID));\\n  }\\n\\n  function getFreezer() internal view returns (IFreezer) {\\n    return IFreezer(registry.getAddressForOrDie(FREEZER_REGISTRY_ID));\\n  }\\n\\n  function getGoldToken() internal view returns (IERC20) {\\n    return IERC20(registry.getAddressForOrDie(GOLD_TOKEN_REGISTRY_ID));\\n  }\\n\\n  function getGovernance() internal view returns (IGovernance) {\\n    return IGovernance(registry.getAddressForOrDie(GOVERNANCE_REGISTRY_ID));\\n  }\\n\\n  function getLockedGold() internal view returns (ILockedGold) {\\n    return ILockedGold(registry.getAddressForOrDie(LOCKED_GOLD_REGISTRY_ID));\\n  }\\n\\n  function getRandom() internal view returns (IRandom) {\\n    return IRandom(registry.getAddressForOrDie(RANDOM_REGISTRY_ID));\\n  }\\n\\n  function getReserve() internal view returns (IReserve) {\\n    return IReserve(registry.getAddressForOrDie(RESERVE_REGISTRY_ID));\\n  }\\n\\n  function getSortedOracles() internal view returns (ISortedOracles) {\\n    return ISortedOracles(registry.getAddressForOrDie(SORTED_ORACLES_REGISTRY_ID));\\n  }\\n\\n  function getStableToken() internal view returns (IStableToken) {\\n    return IStableToken(registry.getAddressForOrDie(STABLE_TOKEN_REGISTRY_ID));\\n  }\\n\\n  function getValidators() internal view returns (IValidators) {\\n    return IValidators(registry.getAddressForOrDie(VALIDATORS_REGISTRY_ID));\\n  }\\n}\\n\",\"keccak256\":\"0x31ec0f16867a35046f9e1211ac3457198e39abc2362d2d559f4ccc4a3985a9ac\"},\"project:/contracts/common/interfaces/IAccounts.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IAccounts {\\n  function isAccount(address) external view returns (bool);\\n  function voteSignerToAccount(address) external view returns (address);\\n  function validatorSignerToAccount(address) external view returns (address);\\n  function attestationSignerToAccount(address) external view returns (address);\\n  function signerToAccount(address) external view returns (address);\\n  function getAttestationSigner(address) external view returns (address);\\n  function getValidatorSigner(address) external view returns (address);\\n  function getVoteSigner(address) external view returns (address);\\n  function hasAuthorizedVoteSigner(address) external view returns (bool);\\n  function hasAuthorizedValidatorSigner(address) external view returns (bool);\\n  function hasAuthorizedAttestationSigner(address) external view returns (bool);\\n\\n  function setAccountDataEncryptionKey(bytes calldata) external;\\n  function setMetadataURL(string calldata) external;\\n  function setName(string calldata) external;\\n  function setWalletAddress(address, uint8, bytes32, bytes32) external;\\n  function setAccount(string calldata, bytes calldata, address, uint8, bytes32, bytes32) external;\\n\\n  function getDataEncryptionKey(address) external view returns (bytes memory);\\n  function getWalletAddress(address) external view returns (address);\\n  function getMetadataURL(address) external view returns (string memory);\\n  function batchGetMetadataURL(address[] calldata)\\n    external\\n    view\\n    returns (uint256[] memory, bytes memory);\\n  function getName(address) external view returns (string memory);\\n\\n  function authorizeVoteSigner(address, uint8, bytes32, bytes32) external;\\n  function authorizeValidatorSigner(address, uint8, bytes32, bytes32) external;\\n  function authorizeValidatorSignerWithPublicKey(address, uint8, bytes32, bytes32, bytes calldata)\\n    external;\\n  function authorizeValidatorSignerWithKeys(\\n    address,\\n    uint8,\\n    bytes32,\\n    bytes32,\\n    bytes calldata,\\n    bytes calldata,\\n    bytes calldata\\n  ) external;\\n  function authorizeAttestationSigner(address, uint8, bytes32, bytes32) external;\\n  function createAccount() external returns (bool);\\n\\n  function setPaymentDelegation(address, uint256) external;\\n  function getPaymentDelegation(address) external view returns (address, uint256);\\n  function isSigner(address, address, bytes32) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x17a0ff4b1c2da32f5de9c0fe230fcb325b2bbabcf51980cfb425cec75f678f5e\"},\"project:/contracts/common/interfaces/IFeeCurrencyWhitelist.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IFeeCurrencyWhitelist {\\n  function addToken(address) external;\\n  function getWhitelist() external view returns (address[] memory);\\n}\\n\",\"keccak256\":\"0x4a91e634d22e8b8c36ef16113d7403029f334affb38f2453f0453f4ba06a925e\"},\"project:/contracts/common/interfaces/IFeeHandlerSeller.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\nimport \\\"../FixidityLib.sol\\\";\\n\\ninterface IFeeHandlerSeller {\\n  function sell(\\n    address sellTokenAddress,\\n    address buyTokenAddress,\\n    uint256 amount,\\n    uint256 minAmount\\n  ) external returns (uint256);\\n  // in case some funds need to be returned or moved to another contract\\n  function transfer(address token, uint256 amount, address to) external returns (bool);\\n}\\n\",\"keccak256\":\"0xbd24e41e74129592bd51f85e97ad1776b31994040359a820a3486bac976e5372\"},\"project:/contracts/common/interfaces/IFreezer.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IFreezer {\\n  function isFrozen(address) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x6c34df21ba7ae83d9b47153bec2ffdb74128c11c0a9f20edaca927967fda4786\"},\"project:/contracts/common/interfaces/IRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IRegistry {\\n  function setAddressFor(string calldata, address) external;\\n  function getAddressForOrDie(bytes32) external view returns (address);\\n  function getAddressFor(bytes32) external view returns (address);\\n  function getAddressForStringOrDie(string calldata identifier) external view returns (address);\\n  function getAddressForString(string calldata identifier) external view returns (address);\\n  function isOneOf(bytes32[] calldata, address) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x7737cbda6f3519bf6a4108e07b2c991a655e8731a4c040a3681e9629cfc4b52d\"},\"project:/contracts/governance/interfaces/IElection.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IElection {\\n  function electValidatorSigners() external view returns (address[] memory);\\n  function electNValidatorSigners(uint256, uint256) external view returns (address[] memory);\\n  function vote(address, uint256, address, address) external returns (bool);\\n  function activate(address) external returns (bool);\\n  function revokeActive(address, uint256, address, address, uint256) external returns (bool);\\n  function revokeAllActive(address, address, address, uint256) external returns (bool);\\n  function revokePending(address, uint256, address, address, uint256) external returns (bool);\\n  function markGroupIneligible(address) external;\\n  function markGroupEligible(address, address, address) external;\\n  function allowedToVoteOverMaxNumberOfGroups(address) external returns (bool);\\n  function forceDecrementVotes(\\n    address,\\n    uint256,\\n    address[] calldata,\\n    address[] calldata,\\n    uint256[] calldata\\n  ) external returns (uint256);\\n  function setAllowedToVoteOverMaxNumberOfGroups(bool flag) external;\\n\\n  // view functions\\n  function getElectableValidators() external view returns (uint256, uint256);\\n  function getElectabilityThreshold() external view returns (uint256);\\n  function getNumVotesReceivable(address) external view returns (uint256);\\n  function getTotalVotes() external view returns (uint256);\\n  function getActiveVotes() external view returns (uint256);\\n  function getTotalVotesByAccount(address) external view returns (uint256);\\n  function getPendingVotesForGroupByAccount(address, address) external view returns (uint256);\\n  function getActiveVotesForGroupByAccount(address, address) external view returns (uint256);\\n  function getTotalVotesForGroupByAccount(address, address) external view returns (uint256);\\n  function getActiveVoteUnitsForGroupByAccount(address, address) external view returns (uint256);\\n  function getTotalVotesForGroup(address) external view returns (uint256);\\n  function getActiveVotesForGroup(address) external view returns (uint256);\\n  function getPendingVotesForGroup(address) external view returns (uint256);\\n  function getGroupEligibility(address) external view returns (bool);\\n  function getGroupEpochRewards(address, uint256, uint256[] calldata)\\n    external\\n    view\\n    returns (uint256);\\n  function getGroupsVotedForByAccount(address) external view returns (address[] memory);\\n  function getEligibleValidatorGroups() external view returns (address[] memory);\\n  function getTotalVotesForEligibleValidatorGroups()\\n    external\\n    view\\n    returns (address[] memory, uint256[] memory);\\n  function getCurrentValidatorSigners() external view returns (address[] memory);\\n  function canReceiveVotes(address, uint256) external view returns (bool);\\n  function hasActivatablePendingVotes(address, address) external view returns (bool);\\n  function validatorSignerAddressFromCurrentSet(uint256 index) external view returns (address);\\n  function numberValidatorsInCurrentSet() external view returns (uint256);\\n\\n  // only owner\\n  function setElectableValidators(uint256, uint256) external returns (bool);\\n  function setMaxNumGroupsVotedFor(uint256) external returns (bool);\\n  function setElectabilityThreshold(uint256) external returns (bool);\\n\\n  // only VM\\n  function distributeEpochRewards(address, uint256, address, address) external;\\n}\\n\",\"keccak256\":\"0x2b7195aaef2f49cfd9a5b1106fd6841701e0dc92752b97d4909947b3127460c7\"},\"project:/contracts/governance/interfaces/IGovernance.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IGovernance {\\n  function removeVotesWhenRevokingDelegatedVotes(address account, uint256 maxAmountAllowed)\\n    external;\\n  function votePartially(\\n    uint256 proposalId,\\n    uint256 index,\\n    uint256 yesVotes,\\n    uint256 noVotes,\\n    uint256 abstainVotes\\n  ) external returns (bool);\\n\\n  function isVoting(address) external view returns (bool);\\n  function getAmountOfGoldUsedForVoting(address account) external view returns (uint256);\\n\\n  function getProposal(uint256 proposalId)\\n    external\\n    view\\n    returns (address, uint256, uint256, uint256, string memory, uint256, bool);\\n\\n  function getReferendumStageDuration() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x19499ae304c70805e523ebf674c2983e8dc428f49a9da5b89e8450c2cd12997b\"},\"project:/contracts/governance/interfaces/ILockedGold.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ILockedGold {\\n  function lock() external payable;\\n  function incrementNonvotingAccountBalance(address, uint256) external;\\n  function decrementNonvotingAccountBalance(address, uint256) external;\\n  function getAccountTotalLockedGold(address) external view returns (uint256);\\n  function getTotalLockedGold() external view returns (uint256);\\n  function getPendingWithdrawals(address)\\n    external\\n    view\\n    returns (uint256[] memory, uint256[] memory);\\n  function getPendingWithdrawal(address account, uint256 index)\\n    external\\n    view\\n    returns (uint256, uint256);\\n  function getTotalPendingWithdrawals(address) external view returns (uint256);\\n  function unlock(uint256) external;\\n  function relock(uint256, uint256) external;\\n  function withdraw(uint256) external;\\n  function slash(\\n    address account,\\n    uint256 penalty,\\n    address reporter,\\n    uint256 reward,\\n    address[] calldata lessers,\\n    address[] calldata greaters,\\n    uint256[] calldata indices\\n  ) external;\\n  function isSlasher(address) external view returns (bool);\\n\\n  function getAccountTotalDelegatedFraction(address account) external view returns (uint256);\\n\\n  function getAccountTotalGovernanceVotingPower(address account) external view returns (uint256);\\n  function unlockingPeriod() external view returns (uint256);\\n  function getAccountNonvotingLockedGold(address account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xcb6530457f85fc492a9714baca95f52a915dc91472cbd1f987ab4347d2e2d1bc\"},\"project:/contracts/governance/interfaces/IValidators.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IValidators {\\n  function registerValidator(bytes calldata, bytes calldata, bytes calldata)\\n    external\\n    returns (bool);\\n  function deregisterValidator(uint256) external returns (bool);\\n  function affiliate(address) external returns (bool);\\n  function deaffiliate() external returns (bool);\\n  function updateBlsPublicKey(bytes calldata, bytes calldata) external returns (bool);\\n  function registerValidatorGroup(uint256) external returns (bool);\\n  function deregisterValidatorGroup(uint256) external returns (bool);\\n  function addMember(address) external returns (bool);\\n  function addFirstMember(address, address, address) external returns (bool);\\n  function removeMember(address) external returns (bool);\\n  function reorderMember(address, address, address) external returns (bool);\\n  function updateCommission() external;\\n  function setNextCommissionUpdate(uint256) external;\\n  function resetSlashingMultiplier() external;\\n\\n  // only owner\\n  function setCommissionUpdateDelay(uint256) external;\\n  function setMaxGroupSize(uint256) external returns (bool);\\n  function setMembershipHistoryLength(uint256) external returns (bool);\\n  function setValidatorScoreParameters(uint256, uint256) external returns (bool);\\n  function setGroupLockedGoldRequirements(uint256, uint256) external returns (bool);\\n  function setValidatorLockedGoldRequirements(uint256, uint256) external returns (bool);\\n  function setSlashingMultiplierResetPeriod(uint256) external;\\n\\n  // view functions\\n  function getMaxGroupSize() external view returns (uint256);\\n  function getCommissionUpdateDelay() external view returns (uint256);\\n  function getValidatorScoreParameters() external view returns (uint256, uint256);\\n  function getMembershipHistory(address)\\n    external\\n    view\\n    returns (uint256[] memory, address[] memory, uint256, uint256);\\n  function calculateEpochScore(uint256) external view returns (uint256);\\n  function calculateGroupEpochScore(uint256[] calldata) external view returns (uint256);\\n  function getAccountLockedGoldRequirement(address) external view returns (uint256);\\n  function meetsAccountLockedGoldRequirements(address) external view returns (bool);\\n  function getValidatorBlsPublicKeyFromSigner(address) external view returns (bytes memory);\\n  function getValidator(address account)\\n    external\\n    view\\n    returns (bytes memory, bytes memory, address, uint256, address);\\n  function getValidatorGroup(address)\\n    external\\n    view\\n    returns (address[] memory, uint256, uint256, uint256, uint256[] memory, uint256, uint256);\\n  function getGroupNumMembers(address) external view returns (uint256);\\n  function getTopGroupValidators(address, uint256) external view returns (address[] memory);\\n  function getGroupsNumMembers(address[] calldata accounts)\\n    external\\n    view\\n    returns (uint256[] memory);\\n  function getNumRegisteredValidators() external view returns (uint256);\\n  function groupMembershipInEpoch(address, uint256, uint256) external view returns (address);\\n\\n  // only registered contract\\n  function updateEcdsaPublicKey(address, address, bytes calldata) external returns (bool);\\n  function updatePublicKeys(address, address, bytes calldata, bytes calldata, bytes calldata)\\n    external\\n    returns (bool);\\n  function getValidatorLockedGoldRequirements() external view returns (uint256, uint256);\\n  function getGroupLockedGoldRequirements() external view returns (uint256, uint256);\\n  function getRegisteredValidators() external view returns (address[] memory);\\n  function getRegisteredValidatorSigners() external view returns (address[] memory);\\n  function getRegisteredValidatorGroups() external view returns (address[] memory);\\n  function isValidatorGroup(address) external view returns (bool);\\n  function isValidator(address) external view returns (bool);\\n  function getValidatorGroupSlashingMultiplier(address) external view returns (uint256);\\n  function getMembershipInLastEpoch(address) external view returns (address);\\n  function getMembershipInLastEpochFromSigner(address) external view returns (address);\\n\\n  // only VM\\n  function updateValidatorScoreFromSigner(address, uint256) external;\\n  function distributeEpochPaymentsFromSigner(address, uint256) external returns (uint256);\\n\\n  // only slasher\\n  function forceDeaffiliateIfValidator(address) external;\\n  function halveSlashingMultiplier(address) external;\\n\\n}\\n\",\"keccak256\":\"0xedb1f9717f0ea77f30cb7fa40bfd3704dcfdc17252082c4bf5caaea205c83d9a\"},\"project:/contracts/identity/interfaces/IAttestations.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IAttestations {\\n  function revoke(bytes32, uint256) external;\\n  function withdraw(address) external;\\n\\n  // view functions\\n  function getUnselectedRequest(bytes32, address) external view returns (uint32, uint32, address);\\n  function getAttestationIssuers(bytes32, address) external view returns (address[] memory);\\n  function getAttestationStats(bytes32, address) external view returns (uint32, uint32);\\n  function batchGetAttestationStats(bytes32[] calldata)\\n    external\\n    view\\n    returns (uint256[] memory, address[] memory, uint64[] memory, uint64[] memory);\\n  function getAttestationState(bytes32, address, address)\\n    external\\n    view\\n    returns (uint8, uint32, address);\\n  function getCompletableAttestations(bytes32, address)\\n    external\\n    view\\n    returns (uint32[] memory, address[] memory, uint256[] memory, bytes memory);\\n  function getAttestationRequestFee(address) external view returns (uint256);\\n  function getMaxAttestations() external view returns (uint256);\\n  function validateAttestationCode(bytes32, address, uint8, bytes32, bytes32)\\n    external\\n    view\\n    returns (address);\\n  function lookupAccountsForIdentifier(bytes32) external view returns (address[] memory);\\n  function requireNAttestationsRequested(bytes32, address, uint32) external view;\\n\\n  // only owner\\n  function setAttestationRequestFee(address, uint256) external;\\n  function setAttestationExpiryBlocks(uint256) external;\\n  function setSelectIssuersWaitBlocks(uint256) external;\\n  function setMaxAttestations(uint256) external;\\n}\\n\",\"keccak256\":\"0x18698a475dc0c9ea8a4c53ab5e42407f34a7c676d7b713c1507b43669f860e74\"},\"project:/contracts/identity/interfaces/IRandom.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IRandom {\\n  function revealAndCommit(bytes32, bytes32, address) external;\\n  function randomnessBlockRetentionWindow() external view returns (uint256);\\n  function random() external view returns (bytes32);\\n  function getBlockRandomness(uint256) external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xdb545530be6397d23692e4465f4514cf3c87c1d4f553323964694818c375c08d\"},\"project:/contracts/stability/interfaces/ISortedOracles.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ISortedOracles {\\n  function addOracle(address, address) external;\\n  function removeOracle(address, address, uint256) external;\\n  function report(address, uint256, address, address) external;\\n  function removeExpiredReports(address, uint256) external;\\n  function isOldestReportExpired(address token) external view returns (bool, address);\\n  function numRates(address) external view returns (uint256);\\n  function medianRate(address) external view returns (uint256, uint256);\\n  function numTimestamps(address) external view returns (uint256);\\n  function medianTimestamp(address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xc9d69b608b060effe4a0b246e7fad096b524b848aa51d8f4eccad36c1aa0479d\"},\"project:/contracts/uniswap/interfaces/IUniswapV2FactoryMin.sol\":{\"content\":\"pragma solidity >=0.5.0;\\n\\ninterface IUniswapV2FactoryMin {\\n  function getPair(address tokenA, address tokenB) external view returns (address pair);\\n}\\n\",\"keccak256\":\"0x2ab073e0725236442e0cc8c412f5fac5a504192ae57b2f6510b72a9e22171aa8\"},\"project:/contracts/uniswap/interfaces/IUniswapV2RouterMin.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\ninterface IUniswapV2RouterMin {\\n  function factory() external pure returns (address);\\n  function swapExactTokensForTokens(\\n    uint256 amountIn,\\n    uint256 amountOutMin,\\n    address[] calldata path,\\n    address to,\\n    uint256 deadline\\n  ) external returns (uint256[] memory amounts);\\n  function getAmountsOut(uint256 amountIn, address[] calldata path)\\n    external\\n    view\\n    returns (uint256[] memory amounts);\\n}\\n\",\"keccak256\":\"0x17c1c22dc595e4cd6b40820732eb1edc2650cc7198fe246240cbe7f63bef20d3\"},\"project:/lib/mento-core/contracts/interfaces/IExchange.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\ninterface IExchange {\\n    function buy(\\n        uint256,\\n        uint256,\\n        bool\\n    ) external returns (uint256);\\n\\n    function sell(\\n        uint256,\\n        uint256,\\n        bool\\n    ) external returns (uint256);\\n\\n    function exchange(\\n        uint256,\\n        uint256,\\n        bool\\n    ) external returns (uint256);\\n\\n    function setUpdateFrequency(uint256) external;\\n\\n    function getBuyTokenAmount(uint256, bool) external view returns (uint256);\\n\\n    function getSellTokenAmount(uint256, bool) external view returns (uint256);\\n\\n    function getBuyAndSellBuckets(bool) external view returns (uint256, uint256);\\n}\\n\",\"keccak256\":\"0x320488022d1066ac81797b9e7a3dc303d1c8e9a48597972d4686e00f9554ade9\"},\"project:/lib/mento-core/contracts/interfaces/IReserve.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\ninterface IReserve {\\n    function setTobinTaxStalenessThreshold(uint256) external;\\n\\n    function addToken(address) external returns (bool);\\n\\n    function removeToken(address, uint256) external returns (bool);\\n\\n    function transferGold(address payable, uint256) external returns (bool);\\n\\n    function transferExchangeGold(address payable, uint256) external returns (bool);\\n\\n    function getReserveGoldBalance() external view returns (uint256);\\n\\n    function getUnfrozenReserveGoldBalance() external view returns (uint256);\\n\\n    function getOrComputeTobinTax() external returns (uint256, uint256);\\n\\n    function getTokens() external view returns (address[] memory);\\n\\n    function getReserveRatio() external view returns (uint256);\\n\\n    function addExchangeSpender(address) external;\\n\\n    function removeExchangeSpender(address, uint256) external;\\n\\n    function addSpender(address) external;\\n\\n    function removeSpender(address) external;\\n}\\n\",\"keccak256\":\"0x9162b458dc21fe7e6cfc5d4722b3db3001b1c54ecdcefa703ff9d902084150b7\"},\"project:/lib/mento-core/contracts/interfaces/IStableToken.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\n/**\\n * @title This interface describes the functions specific to Celo Stable Tokens, and in the\\n * absence of interface inheritance is intended as a companion to IERC20.sol and ICeloToken.sol.\\n */\\ninterface IStableToken {\\n    function mint(address, uint256) external returns (bool);\\n\\n    function burn(uint256) external returns (bool);\\n\\n    function setInflationParameters(uint256, uint256) external;\\n\\n    function valueToUnits(uint256) external view returns (uint256);\\n\\n    function unitsToValue(uint256) external view returns (uint256);\\n\\n    function getInflationParameters()\\n        external\\n        view\\n        returns (\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256\\n        );\\n\\n    // NOTE: duplicated with IERC20.sol, remove once interface inheritance is supported.\\n    function balanceOf(address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xcb6440c9b161b26a5b062e6c74d6fd1ed9736f292161c757406a9c39e942d20a\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620037bf380380620037bf833981810160405260208110156200003757600080fd5b81019080805190602001909291905050508060006200005b6200012360201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350806200011b576001600060146101000a81548160ff0219169083151502179055505b50506200012b565b600033905090565b613684806200013b6000396000f3fe6080604052600436106100fe5760003560e01c806373f0a07011610095578063a91ee0dc11610064578063a91ee0dc14610544578063dbba0f0114610595578063e4187b1314610628578063f2fde38b14610695578063ff1d5752146106e6576100fe565b806373f0a070146103f65780637b103999146104675780638da5cb5b146104be5780638f32d59b14610515576100fe565b806341d68b8f116100d157806341d68b8f146102c95780634e008cdb1461033a57806354255be01461039f578063715018a6146103df576100fe565b80630c2fef1414610100578063158ef93e146101a65780632f257aa0146101d557806331de7d1514610230575b005b34801561010c57600080fd5b5061014f6004803603602081101561012357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107e1565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610192578082015181840152602081019050610177565b505050509050019250505060405180910390f35b3480156101b257600080fd5b506101bb6108b1565b604051808215151515815260200191505060405180910390f35b3480156101e157600080fd5b5061022e600480360360408110156101f857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108c4565b005b34801561023c57600080fd5b506102b36004803603608081101561025357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919050505061094c565b6040518082815260200191505060405180910390f35b3480156102d557600080fd5b50610338600480360360408110156102ec57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114a9565b005b34801561034657600080fd5b506103896004803603602081101561035d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611531565b6040518082815260200191505060405180910390f35b3480156103ab57600080fd5b506103b4611549565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b3480156103eb57600080fd5b506103f461156f565b005b34801561040257600080fd5b506104656004803603604081101561041957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116a8565b005b34801561047357600080fd5b5061047c61180f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104ca57600080fd5b506104d3611835565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561052157600080fd5b5061052a61185e565b604051808215151515815260200191505060405180910390f35b34801561055057600080fd5b506105936004803603602081101561056757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118bc565b005b3480156105a157600080fd5b5061060e600480360360608110156105b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a60565b604051808215151515815260200191505060405180910390f35b34801561063457600080fd5b5061067f6004803603608081101561064b57600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190505050611ba7565b6040518082815260200191505060405180910390f35b3480156106a157600080fd5b506106e4600480360360208110156106b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c4d565b005b3480156106f257600080fd5b506107df6004803603606081101561070957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561074657600080fd5b82018360208201111561075857600080fd5b8035906020019184602083028401116401000000008311171561077a57600080fd5b90919293919293908035906020019064010000000081111561079b57600080fd5b8201836020820111156107ad57600080fd5b803590602001918460208302840111640100000000831117156107cf57600080fd5b9091929391929390505050611cd3565b005b6060600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054806020026020016040519081016040528092919081815260200182805480156108a557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161085b575b50505050509050919050565b600060149054906101000a900460ff1681565b6108cc61185e565b61093e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6109488282611ded565b5050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f476f6c64546f6b656e00000000000000000000000000000000000000000000008152506009019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610a0757600080fd5b505afa158015610a1b573d6000803e3d6000fd5b505050506040513d6020811015610a3157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610ae2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f42757920746f6b656e2063616e206f6e6c7920626520676f6c6420746f6b656e81525060200191505060405180910390fd5b6000600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054905011610b80576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806135ab6023913960400191505060405180910390fd5b6000610b8a611ea0565b90506000806000905060606002604051908082528060200260200182016040528015610bc55781602001602082028038833980820191505090505b5090508881600081518110610bd657fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508381600181518110610c1e57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008090505b600360008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180549050811015610f10576000610cfe82600360008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611f9b90919063ffffffff16565b9050600081905060008173ffffffffffffffffffffffffffffffffffffffff1663d06ca61f8c876040518363ffffffff1660e01b81526004018083815260200180602001828103825283818151815260200191508051906020019060200280838360005b83811015610d7d578082015181840152602081019050610d62565b50505050905001935050505060006040518083038186803b158015610da157600080fd5b505afa158015610db5573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015610ddf57600080fd5b8101908080516040519392919084640100000000821115610dff57600080fd5b83820191506020820185811115610e1557600080fd5b8251866020820283011164010000000082111715610e3257600080fd5b8083526020830192505050908051906020019060200280838360005b83811015610e69578082015181840152602081019050610e4e565b50505050905001604052505050600181518110610e8257fe5b602002602001015190508273ffffffffffffffffffffffffffffffffffffffff168d73ffffffffffffffffffffffffffffffffffffffff167fba55c28acee19777ec6c603117b386d3e3b39886c0d3d53bc244be24ee6e7c84836040518082815260200191505060405180910390a385811115610f00578095508196505b5050508080600101915050610c5e565b506000821415610f88576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f43616e27742065786368616e67652077697468207a65726f2071756f7465000081525060200191505060405180910390fd5b6000809050610f998a888a87611fdf565b90508973ffffffffffffffffffffffffffffffffffffffff1663095ea7b3858a6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561102257600080fd5b505af1158015611036573d6000803e3d6000fd5b505050506040513d602081101561104c57600080fd5b8101908080519060200190929190505050508373ffffffffffffffffffffffffffffffffffffffff166338ed173989838530601442016040518663ffffffff1660e01b815260040180868152602001858152602001806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b838110156111185780820151818401526020810190506110fd565b505050509050019650505050505050600060405180830381600087803b15801561114157600080fd5b505af1158015611155573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561117f57600080fd5b810190808051604051939291908464010000000082111561119f57600080fd5b838201915060208201858111156111b557600080fd5b82518660208202830111640100000000821117156111d257600080fd5b8083526020830192505050908051906020019060200280838360005b838110156112095780820151818401526020810190506111ee565b505050509050016040525050505060008573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561129657600080fd5b505afa1580156112aa573d6000803e3d6000fd5b505050506040513d60208110156112c057600080fd5b810190808051906020019092919050505090508573ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561135a57600080fd5b505af115801561136e573d6000803e3d6000fd5b505050506040513d602081101561138457600080fd5b8101908080519060200190929190505050507f59afd9b3bf745a06d8739721397432b9f161243cee13868b9d6d6fca05b6e55185604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a17fd4cffd6979677853b45a7a17f455188a434e975ba474c5a2613c94beacea537a8b8b8b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1809650505050505050949350505050565b6114b161185e565b611523576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61152d828261253b565b5050565b60026020528060005260406000206000915090505481565b600080600080600180600080839350829250819150809050935093509350935090919293565b61157761185e565b6115e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6116b061185e565b611722576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61177381600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061278690919063ffffffff16565b507f044c4b00bcc14b6c00430f73b8bc07f33aecb2387c7b188142d6d497342de89a8282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166118a0612974565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b6118c461185e565b611936576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156119d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f43616e6e6f7420726567697374657220746865206e756c6c206164647265737381525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b60405160405180910390a250565b6000611a6a61185e565b611adc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611b6357600080fd5b505af1158015611b77573d6000803e3d6000fd5b505050506040513d6020811015611b8d57600080fd5b810190808051906020019092919050505090509392505050565b6000611bb1613597565b611bba8361297c565b9050611bc4613597565b611bce878761299a565b9050611bd8613597565b611be1866129dc565b9050611beb613597565b611bfe8284612a6690919063ffffffff16565b9050611c3f611c3a611c2b84611c1d8888612a6690919063ffffffff16565b612a6690919063ffffffff16565b83612ec590919063ffffffff16565b612f6c565b945050505050949350505050565b611c5561185e565b611cc7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611cd081612f8d565b50565b600060149054906101000a900460ff1615611d56576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f636f6e747261637420616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff021916908315150217905550611d7a33612f8d565b611d83856118bc565b60008090505b84849050811015611de557611dd8858583818110611da357fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff16848484818110611dcc57fe5b90506020020135611ded565b8080600101915050611d89565b505050505050565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f03cc7dddcb89dd90027bd8fa62d09d1b5c49ce5d20f8c9bb6bdeaaa62ea1718b8282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f476f6c64546f6b656e00000000000000000000000000000000000000000000008152506009019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611f5b57600080fd5b505afa158015611f6f573d6000803e3d6000fd5b505050506040513d6020811015611f8557600080fd5b8101908080519060200190929190505050905090565b6000826001018281548110611fac57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b600080611fea6130d1565b90506000600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050808273ffffffffffffffffffffffffffffffffffffffff1663bbc66a94896040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156120ae57600080fd5b505afa1580156120c2573d6000803e3d6000fd5b505050506040513d60208110156120d857600080fd5b81019080805190602001909291905050501015612140576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061362a6026913960400191505060405180910390fd5b60008090506000821115612227576000808473ffffffffffffffffffffffffffffffffffffffff1663ef90e1b08b6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b1580156121cd57600080fd5b505afa1580156121e1573d6000803e3d6000fd5b505050506040513d60408110156121f757600080fd5b8101908080519060200190929190805190602001909291905050509150915061222282828a8c611ba7565b925050505b6000612231611ea0565b905060008673ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b15801561227b57600080fd5b505afa15801561228f573d6000803e3d6000fd5b505050506040513d60208110156122a557600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1663e6a439058b846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561236657600080fd5b505afa15801561237a573d6000803e3d6000fd5b505050506040513d602081101561239057600080fd5b81019080805190602001909291905050509050600061251f8b73ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561242557600080fd5b505afa158015612439573d6000803e3d6000fd5b505050506040513d602081101561244f57600080fd5b81019080805190602001909291905050508473ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156124dd57600080fd5b505afa1580156124f1573d6000803e3d6000fd5b505050506040513d602081101561250757600080fd5b81019080805190602001909291905050508b8d611ba7565b905061252b81856131cc565b9650505050505050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156125de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f526f757465722063616e27742062652061646472657373207a65726f0000000081525060200191505060405180910390fd5b61262f81600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206131e690919063ffffffff16565b5060038060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054905011156126eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4d6178206e756d626572206f6620726f7574657273207265616368656400000081525060200191505060405180910390fd5b7fb3cbb74e835466bdbf8838b1acb70fa4a8b73e1a00cd5bacb9f68cf4dfc79cf38282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b600061279283836132b6565b1561296957600060018460000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540390506000600185600101805490500390508181146128d757600085600101828154811061280757fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508086600101848154811061284457fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600183018660000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b8460000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090558460010180548061292957fe5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055905560019250505061296e565b600090505b92915050565b600033905090565b612984613597565b6040518060200160405280838152509050919050565b6129a2613597565b6129aa613597565b6129b3846129dc565b90506129bd613597565b6129c6846129dc565b90506129d28282613305565b9250505092915050565b6129e4613597565b6129ec61344e565b821115612a44576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260368152602001806135f46036913960400191505060405180910390fd5b604051806020016040528069d3c21bcecceda100000084028152509050919050565b612a6e613597565b600083600001511480612a85575060008260000151145b15612aa157604051806020016040528060008152509050612ebf565b69d3c21bcecceda100000082600001511415612abf57829050612ebf565b69d3c21bcecceda100000083600001511415612add57819050612ebf565b600069d3c21bcecceda1000000612af38561346d565b6000015181612afe57fe5b0490506000612b0c856134a4565b600001519050600069d3c21bcecceda1000000612b288661346d565b6000015181612b3357fe5b0490506000612b41866134a4565b6000015190506000828502905060008514612bd55782858281612b6057fe5b0414612bd4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783179312064657465637465640000000000000000000081525060200191505060405180910390fd5b5b600069d3c21bcecceda10000008202905060008214612c775769d3c21bcecceda1000000828281612c0257fe5b0414612c76576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f6f766572666c6f772078317931202a206669786564312064657465637465640081525060200191505060405180910390fd5b5b8091506000848602905060008614612d085784868281612c9357fe5b0414612d07576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783279312064657465637465640000000000000000000081525060200191505060405180910390fd5b5b6000848802905060008814612d965784888281612d2157fe5b0414612d95576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783179322064657465637465640000000000000000000081525060200191505060405180910390fd5b5b612d9e6134e1565b8781612da657fe5b049650612db16134e1565b8581612db957fe5b0494506000858802905060008814612e4a5785888281612dd557fe5b0414612e49576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783279322064657465637465640000000000000000000081525060200191505060405180910390fd5b5b612e52613597565b6040518060200160405280878152509050612e7b816040518060200160405280878152506134ee565b9050612e95816040518060200160405280868152506134ee565b9050612eaf816040518060200160405280858152506134ee565b9050809a50505050505050505050505b92915050565b612ecd613597565b816000015183600001511015612f4b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f737562737472616374696f6e20756e646572666c6f772064657465637465640081525060200191505060405180910390fd5b60405180602001604052808360000151856000015103815250905092915050565b600069d3c21bcecceda1000000826000015181612f8557fe5b049050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415613013576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806135ce6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f536f727465644f7261636c657300000000000000000000000000000000000000815250600d019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561318c57600080fd5b505afa1580156131a0573d6000803e3d6000fd5b505050506040513d60208110156131b657600080fd5b8101908080519060200190929190505050905090565b6000818310156131dc57816131de565b825b905092915050565b60006131f283836132b6565b6132ab57826001018290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600190506132b0565b600090505b92915050565b6000808360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415905092915050565b61330d613597565b600082600001511415613388576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f63616e277420646976696465206279203000000000000000000000000000000081525060200191505060405180910390fd5b600069d3c21bcecceda10000008460000151029050836000015169d3c21bcecceda100000082816133b557fe5b0414613429576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6f766572666c6f7720617420646976696465000000000000000000000000000081525060200191505060405180910390fd5b60405180602001604052808460000151838161344157fe5b0481525091505092915050565b60007601357c299a88ea76a58924d52ce4f26a85af186c2b9e74905090565b613475613597565b604051806020016040528069d3c21bcecceda10000008085600001518161349857fe5b04028152509050919050565b6134ac613597565b604051806020016040528069d3c21bcecceda1000000808560000151816134cf57fe5b04028460000151038152509050919050565b600064e8d4a51000905090565b6134f6613597565b600082600001518460000151019050836000015181101561357f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f616464206f766572666c6f77206465746563746564000000000000000000000081525060200191505060405180910390fd5b60405180602001604052808281525091505092915050565b604051806020016040528060008152509056fe726f757465724164647265737365732073686f756c64206265206e6f6e20656d7074794f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737363616e277420637265617465206669786964697479206e756d626572206c6172676572207468616e206d61784e6577466978656428294e756d626572206f66207265706f72747320666f7220746f6b656e206e6f7420656e6f756768a265627a7a72315820cb9164d30c542cce20338d1c11c6c3f60cd08a27b0b5a0e8a33f5393393417a164736f6c634300050d0032",
  "deployedBytecode": "0x6080604052600436106100fe5760003560e01c806373f0a07011610095578063a91ee0dc11610064578063a91ee0dc14610544578063dbba0f0114610595578063e4187b1314610628578063f2fde38b14610695578063ff1d5752146106e6576100fe565b806373f0a070146103f65780637b103999146104675780638da5cb5b146104be5780638f32d59b14610515576100fe565b806341d68b8f116100d157806341d68b8f146102c95780634e008cdb1461033a57806354255be01461039f578063715018a6146103df576100fe565b80630c2fef1414610100578063158ef93e146101a65780632f257aa0146101d557806331de7d1514610230575b005b34801561010c57600080fd5b5061014f6004803603602081101561012357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107e1565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610192578082015181840152602081019050610177565b505050509050019250505060405180910390f35b3480156101b257600080fd5b506101bb6108b1565b604051808215151515815260200191505060405180910390f35b3480156101e157600080fd5b5061022e600480360360408110156101f857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108c4565b005b34801561023c57600080fd5b506102b36004803603608081101561025357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919050505061094c565b6040518082815260200191505060405180910390f35b3480156102d557600080fd5b50610338600480360360408110156102ec57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114a9565b005b34801561034657600080fd5b506103896004803603602081101561035d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611531565b6040518082815260200191505060405180910390f35b3480156103ab57600080fd5b506103b4611549565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b3480156103eb57600080fd5b506103f461156f565b005b34801561040257600080fd5b506104656004803603604081101561041957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116a8565b005b34801561047357600080fd5b5061047c61180f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104ca57600080fd5b506104d3611835565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561052157600080fd5b5061052a61185e565b604051808215151515815260200191505060405180910390f35b34801561055057600080fd5b506105936004803603602081101561056757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118bc565b005b3480156105a157600080fd5b5061060e600480360360608110156105b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a60565b604051808215151515815260200191505060405180910390f35b34801561063457600080fd5b5061067f6004803603608081101561064b57600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190505050611ba7565b6040518082815260200191505060405180910390f35b3480156106a157600080fd5b506106e4600480360360208110156106b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c4d565b005b3480156106f257600080fd5b506107df6004803603606081101561070957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561074657600080fd5b82018360208201111561075857600080fd5b8035906020019184602083028401116401000000008311171561077a57600080fd5b90919293919293908035906020019064010000000081111561079b57600080fd5b8201836020820111156107ad57600080fd5b803590602001918460208302840111640100000000831117156107cf57600080fd5b9091929391929390505050611cd3565b005b6060600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054806020026020016040519081016040528092919081815260200182805480156108a557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161085b575b50505050509050919050565b600060149054906101000a900460ff1681565b6108cc61185e565b61093e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6109488282611ded565b5050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f476f6c64546f6b656e00000000000000000000000000000000000000000000008152506009019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610a0757600080fd5b505afa158015610a1b573d6000803e3d6000fd5b505050506040513d6020811015610a3157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610ae2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f42757920746f6b656e2063616e206f6e6c7920626520676f6c6420746f6b656e81525060200191505060405180910390fd5b6000600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054905011610b80576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806135ab6023913960400191505060405180910390fd5b6000610b8a611ea0565b90506000806000905060606002604051908082528060200260200182016040528015610bc55781602001602082028038833980820191505090505b5090508881600081518110610bd657fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508381600181518110610c1e57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008090505b600360008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180549050811015610f10576000610cfe82600360008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611f9b90919063ffffffff16565b9050600081905060008173ffffffffffffffffffffffffffffffffffffffff1663d06ca61f8c876040518363ffffffff1660e01b81526004018083815260200180602001828103825283818151815260200191508051906020019060200280838360005b83811015610d7d578082015181840152602081019050610d62565b50505050905001935050505060006040518083038186803b158015610da157600080fd5b505afa158015610db5573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015610ddf57600080fd5b8101908080516040519392919084640100000000821115610dff57600080fd5b83820191506020820185811115610e1557600080fd5b8251866020820283011164010000000082111715610e3257600080fd5b8083526020830192505050908051906020019060200280838360005b83811015610e69578082015181840152602081019050610e4e565b50505050905001604052505050600181518110610e8257fe5b602002602001015190508273ffffffffffffffffffffffffffffffffffffffff168d73ffffffffffffffffffffffffffffffffffffffff167fba55c28acee19777ec6c603117b386d3e3b39886c0d3d53bc244be24ee6e7c84836040518082815260200191505060405180910390a385811115610f00578095508196505b5050508080600101915050610c5e565b506000821415610f88576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f43616e27742065786368616e67652077697468207a65726f2071756f7465000081525060200191505060405180910390fd5b6000809050610f998a888a87611fdf565b90508973ffffffffffffffffffffffffffffffffffffffff1663095ea7b3858a6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561102257600080fd5b505af1158015611036573d6000803e3d6000fd5b505050506040513d602081101561104c57600080fd5b8101908080519060200190929190505050508373ffffffffffffffffffffffffffffffffffffffff166338ed173989838530601442016040518663ffffffff1660e01b815260040180868152602001858152602001806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b838110156111185780820151818401526020810190506110fd565b505050509050019650505050505050600060405180830381600087803b15801561114157600080fd5b505af1158015611155573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561117f57600080fd5b810190808051604051939291908464010000000082111561119f57600080fd5b838201915060208201858111156111b557600080fd5b82518660208202830111640100000000821117156111d257600080fd5b8083526020830192505050908051906020019060200280838360005b838110156112095780820151818401526020810190506111ee565b505050509050016040525050505060008573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561129657600080fd5b505afa1580156112aa573d6000803e3d6000fd5b505050506040513d60208110156112c057600080fd5b810190808051906020019092919050505090508573ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561135a57600080fd5b505af115801561136e573d6000803e3d6000fd5b505050506040513d602081101561138457600080fd5b8101908080519060200190929190505050507f59afd9b3bf745a06d8739721397432b9f161243cee13868b9d6d6fca05b6e55185604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a17fd4cffd6979677853b45a7a17f455188a434e975ba474c5a2613c94beacea537a8b8b8b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1809650505050505050949350505050565b6114b161185e565b611523576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61152d828261253b565b5050565b60026020528060005260406000206000915090505481565b600080600080600180600080839350829250819150809050935093509350935090919293565b61157761185e565b6115e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6116b061185e565b611722576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61177381600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061278690919063ffffffff16565b507f044c4b00bcc14b6c00430f73b8bc07f33aecb2387c7b188142d6d497342de89a8282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166118a0612974565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b6118c461185e565b611936576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156119d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f43616e6e6f7420726567697374657220746865206e756c6c206164647265737381525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b60405160405180910390a250565b6000611a6a61185e565b611adc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611b6357600080fd5b505af1158015611b77573d6000803e3d6000fd5b505050506040513d6020811015611b8d57600080fd5b810190808051906020019092919050505090509392505050565b6000611bb1613597565b611bba8361297c565b9050611bc4613597565b611bce878761299a565b9050611bd8613597565b611be1866129dc565b9050611beb613597565b611bfe8284612a6690919063ffffffff16565b9050611c3f611c3a611c2b84611c1d8888612a6690919063ffffffff16565b612a6690919063ffffffff16565b83612ec590919063ffffffff16565b612f6c565b945050505050949350505050565b611c5561185e565b611cc7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611cd081612f8d565b50565b600060149054906101000a900460ff1615611d56576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f636f6e747261637420616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff021916908315150217905550611d7a33612f8d565b611d83856118bc565b60008090505b84849050811015611de557611dd8858583818110611da357fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff16848484818110611dcc57fe5b90506020020135611ded565b8080600101915050611d89565b505050505050565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f03cc7dddcb89dd90027bd8fa62d09d1b5c49ce5d20f8c9bb6bdeaaa62ea1718b8282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f476f6c64546f6b656e00000000000000000000000000000000000000000000008152506009019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611f5b57600080fd5b505afa158015611f6f573d6000803e3d6000fd5b505050506040513d6020811015611f8557600080fd5b8101908080519060200190929190505050905090565b6000826001018281548110611fac57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b600080611fea6130d1565b90506000600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050808273ffffffffffffffffffffffffffffffffffffffff1663bbc66a94896040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156120ae57600080fd5b505afa1580156120c2573d6000803e3d6000fd5b505050506040513d60208110156120d857600080fd5b81019080805190602001909291905050501015612140576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061362a6026913960400191505060405180910390fd5b60008090506000821115612227576000808473ffffffffffffffffffffffffffffffffffffffff1663ef90e1b08b6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b1580156121cd57600080fd5b505afa1580156121e1573d6000803e3d6000fd5b505050506040513d60408110156121f757600080fd5b8101908080519060200190929190805190602001909291905050509150915061222282828a8c611ba7565b925050505b6000612231611ea0565b905060008673ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b15801561227b57600080fd5b505afa15801561228f573d6000803e3d6000fd5b505050506040513d60208110156122a557600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1663e6a439058b846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561236657600080fd5b505afa15801561237a573d6000803e3d6000fd5b505050506040513d602081101561239057600080fd5b81019080805190602001909291905050509050600061251f8b73ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561242557600080fd5b505afa158015612439573d6000803e3d6000fd5b505050506040513d602081101561244f57600080fd5b81019080805190602001909291905050508473ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156124dd57600080fd5b505afa1580156124f1573d6000803e3d6000fd5b505050506040513d602081101561250757600080fd5b81019080805190602001909291905050508b8d611ba7565b905061252b81856131cc565b9650505050505050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156125de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f526f757465722063616e27742062652061646472657373207a65726f0000000081525060200191505060405180910390fd5b61262f81600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206131e690919063ffffffff16565b5060038060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054905011156126eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4d6178206e756d626572206f6620726f7574657273207265616368656400000081525060200191505060405180910390fd5b7fb3cbb74e835466bdbf8838b1acb70fa4a8b73e1a00cd5bacb9f68cf4dfc79cf38282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b600061279283836132b6565b1561296957600060018460000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540390506000600185600101805490500390508181146128d757600085600101828154811061280757fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508086600101848154811061284457fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600183018660000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b8460000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090558460010180548061292957fe5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055905560019250505061296e565b600090505b92915050565b600033905090565b612984613597565b6040518060200160405280838152509050919050565b6129a2613597565b6129aa613597565b6129b3846129dc565b90506129bd613597565b6129c6846129dc565b90506129d28282613305565b9250505092915050565b6129e4613597565b6129ec61344e565b821115612a44576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260368152602001806135f46036913960400191505060405180910390fd5b604051806020016040528069d3c21bcecceda100000084028152509050919050565b612a6e613597565b600083600001511480612a85575060008260000151145b15612aa157604051806020016040528060008152509050612ebf565b69d3c21bcecceda100000082600001511415612abf57829050612ebf565b69d3c21bcecceda100000083600001511415612add57819050612ebf565b600069d3c21bcecceda1000000612af38561346d565b6000015181612afe57fe5b0490506000612b0c856134a4565b600001519050600069d3c21bcecceda1000000612b288661346d565b6000015181612b3357fe5b0490506000612b41866134a4565b6000015190506000828502905060008514612bd55782858281612b6057fe5b0414612bd4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783179312064657465637465640000000000000000000081525060200191505060405180910390fd5b5b600069d3c21bcecceda10000008202905060008214612c775769d3c21bcecceda1000000828281612c0257fe5b0414612c76576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f6f766572666c6f772078317931202a206669786564312064657465637465640081525060200191505060405180910390fd5b5b8091506000848602905060008614612d085784868281612c9357fe5b0414612d07576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783279312064657465637465640000000000000000000081525060200191505060405180910390fd5b5b6000848802905060008814612d965784888281612d2157fe5b0414612d95576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783179322064657465637465640000000000000000000081525060200191505060405180910390fd5b5b612d9e6134e1565b8781612da657fe5b049650612db16134e1565b8581612db957fe5b0494506000858802905060008814612e4a5785888281612dd557fe5b0414612e49576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783279322064657465637465640000000000000000000081525060200191505060405180910390fd5b5b612e52613597565b6040518060200160405280878152509050612e7b816040518060200160405280878152506134ee565b9050612e95816040518060200160405280868152506134ee565b9050612eaf816040518060200160405280858152506134ee565b9050809a50505050505050505050505b92915050565b612ecd613597565b816000015183600001511015612f4b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f737562737472616374696f6e20756e646572666c6f772064657465637465640081525060200191505060405180910390fd5b60405180602001604052808360000151856000015103815250905092915050565b600069d3c21bcecceda1000000826000015181612f8557fe5b049050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415613013576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806135ce6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f536f727465644f7261636c657300000000000000000000000000000000000000815250600d019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561318c57600080fd5b505afa1580156131a0573d6000803e3d6000fd5b505050506040513d60208110156131b657600080fd5b8101908080519060200190929190505050905090565b6000818310156131dc57816131de565b825b905092915050565b60006131f283836132b6565b6132ab57826001018290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600190506132b0565b600090505b92915050565b6000808360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415905092915050565b61330d613597565b600082600001511415613388576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f63616e277420646976696465206279203000000000000000000000000000000081525060200191505060405180910390fd5b600069d3c21bcecceda10000008460000151029050836000015169d3c21bcecceda100000082816133b557fe5b0414613429576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6f766572666c6f7720617420646976696465000000000000000000000000000081525060200191505060405180910390fd5b60405180602001604052808460000151838161344157fe5b0481525091505092915050565b60007601357c299a88ea76a58924d52ce4f26a85af186c2b9e74905090565b613475613597565b604051806020016040528069d3c21bcecceda10000008085600001518161349857fe5b04028152509050919050565b6134ac613597565b604051806020016040528069d3c21bcecceda1000000808560000151816134cf57fe5b04028460000151038152509050919050565b600064e8d4a51000905090565b6134f6613597565b600082600001518460000151019050836000015181101561357f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f616464206f766572666c6f77206465746563746564000000000000000000000081525060200191505060405180910390fd5b60405180602001604052808281525091505092915050565b604051806020016040528060008152509056fe726f757465724164647265737365732073686f756c64206265206e6f6e20656d7074794f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737363616e277420637265617465206669786964697479206e756d626572206c6172676572207468616e206d61784e6577466978656428294e756d626572206f66207265706f72747320666f7220746f6b656e206e6f7420656e6f756768a265627a7a72315820cb9164d30c542cce20338d1c11c6c3f60cd08a27b0b5a0e8a33f5393393417a164736f6c634300050d0032",
  "sourceMap": "873:6651:34:-;;;1652:52;8:9:-1;5:2;;;30:1;27;20:12;5:2;1652:52:34;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1652:52:34;;;;;;;;;;;;;;;;1696:4;698:17:4;718:12;:10;;;:12;;:::i;:::-;698:32;;749:9;740:6;;:18;;;;;;;;;;;;;;;;;;806:9;773:43;;802:1;773:43;;;;;;;;;;;;664:159;185:17:24;180:57;;226:4;212:11;;:18;;;;;;;;;;;;;;;;;;180:57;131:110;1652:52:34;873:6651;;788:96:0;833:15;867:10;860:17;;788:96;:::o;873:6651:34:-;;;;;;;",
  "deployedSourceMap": "873:6651:34:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3327:131;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3327:131:34;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3327:131:34;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3327:131:34;;;;;;;;;;;;;;;;;103:23:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;103:23:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1443:155:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1443:155:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1443:155:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5308:2214:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5308:2214:34;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;5308:2214:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2363:105;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2363:105:34;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2363:105:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;689:49:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;689:49:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;689:49:19;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2087:117:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2087:117:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1684:137:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1684:137:4;;;:::i;:::-;;2989:166:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2989:166:34;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2989:166:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2636:25:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2636:25:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;899:77:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;899:77:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1250:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1250:92:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3185:230:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3185:230:36;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3185:230:36;;;;;;;;;;;;;;;;;;;:::i;:::-;;3477:147:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3477:147:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3477:147:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2365:694;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2365:694:19;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2365:694:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1970:107:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1970:107:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1970:107:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;906:364:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;906:364:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;906:364:19;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;906:364:19;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;906:364:19;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;906:364:19;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;906:364:19;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;906:364:19;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;906:364:19;;;;;;;;;;;;:::i;:::-;;3327:131:34;3393:16;3424:15;:22;3440:5;3424:22;;;;;;;;;;;;;;;:29;;3417:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3327:131;;;:::o;103:23:24:-;;;;;;;;;;;;;:::o;1443:155:19:-;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1542:51:19;1561:12;1575:17;1542:18;:51::i;:::-;1443:155;;:::o;5308:2214:34:-;5464:7;5513:8;;;;;;;;;;;:27;;;1848:29:36;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1848:29:36;;;1838:40;;;;;;5513:51:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5513:51:34;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5513:51:34;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5513:51:34;;;;;;;;;;;;;;;;5494:70;;:15;:70;;;5479:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5684:1;5634:15;:33;5650:16;5634:33;;;;;;;;;;;;;;;:40;;:47;;;;:51;5619:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5952:16;5971:14;:12;:14::i;:::-;5952:33;;5992:30;6028:23;6054:1;6028:27;;6062:21;6100:1;6086:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;6086:16:34;;;;6062:40;;6119:16;6109:4;6114:1;6109:7;;;;;;;;;;;;;:26;;;;;;;;;;;6159:9;6141:4;6146:1;6141:7;;;;;;;;;;;;;:28;;;;;;;;;;;6181:9;6193:1;6181:13;;6176:683;6200:15;:33;6216:16;6200:33;;;;;;;;;;;;;;;:40;;:47;;;;6196:1;:51;6176:683;;;6262:19;6284:40;6322:1;6284:15;:33;6300:16;6284:33;;;;;;;;;;;;;;;:37;;:40;;;;:::i;:::-;6262:62;;6332:26;6381:11;6332:61;;6615:16;6634:6;:20;;;6655:6;6663:4;6634:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6634:34:34;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6634:34:34;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6634:34:34;;;;;;39:16:-1;36:1;17:17;2:54;6634:34:34;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6634:34:34;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;385:12;380:3;373:25;421:4;416:3;412:14;405:21;;0:433;;6634:34:34;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6634:34:34;;;;;;;;;;;6669:1;6634:37;;;;;;;;;;;;;;6615:56;;6717:11;6685:54;;6699:16;6685:54;;;6730:8;6685:54;;;;;;;;;;;;;;;;;;6762:15;6751:8;:26;6747:106;;;6807:8;6789:26;;6838:6;6825:19;;6747:106;6176:683;;;6249:3;;;;;;;6176:683;;;;6892:1;6873:15;:20;;6865:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6935:17;6955:1;6935:21;;6974:72;6996:16;7014:11;7027:6;7035:10;6974:21;:72::i;:::-;6962:84;;7060:16;7053:32;;;7094:10;7107:6;7053:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7053:61:34;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7053:61:34;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7053:61:34;;;;;;;;;;;;;;;;;7120:10;:35;;;7163:6;7177:9;7194:4;7214;1126:2;7227:15;:46;7120:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7120:159:34;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7120:159:34;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7120:159:34;;;;;;39:16:-1;36:1;17:17;2:54;7120:159:34;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7120:159:34;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;385:12;380:3;373:25;421:4;416:3;412:14;405:21;;0:433;;7120:159:34;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7120:159:34;;;;;;;;;;;;7286:18;7307:9;:19;;;7335:4;7307:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7307:34:34;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7307:34:34;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7307:34:34;;;;;;;;;;;;;;;;7286:55;;7347:9;:18;;;7366:10;7378;7347:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7347:42:34;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7347:42:34;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7347:42:34;;;;;;;;;;;;;;;;;7400:31;7419:10;7400:31;;;;;;;;;;;;;;;;;;;;;;7442:52;7452:16;7470:15;7487:6;7442:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7507:10;7500:17;;;;;;;;5308:2214;;;;;;:::o;2363:105::-;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2438:25:34;2449:5;2456:6;2438:10;:25::i;:::-;2363:105;;:::o;689:49:19:-;;;;;;;;;;;;;;;;;:::o;2087:117:34:-;2138:7;2147;2156;2165;2188:1;2191;2194;2197;2180:19;;;;;;;;;;;;;;;;;;;;2087:117;;;;:::o;1684:137:4:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:1;1745:40;;1766:6;;;;;;;;;;;1745:40;;;;;;;;;;;;1812:1;1795:6;;:19;;;;;;;;;;;;;;;;;;1684:137::o;2989:166:34:-;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3067:37:34;3097:6;3067:15;:22;3083:5;3067:22;;;;;;;;;;;;;;;:29;;:37;;;;:::i;:::-;;3115:35;3136:5;3143:6;3115:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2989:166;;:::o;2636:25:36:-;;;;;;;;;;;;;:::o;899:77:4:-;937:7;963:6;;;;;;;;;;;956:13;;899:77;:::o;1250:92::-;1290:4;1329:6;;;;;;;;;;;1313:22;;:12;:10;:12::i;:::-;:22;;;1306:29;;1250:92;:::o;3185:230:36:-;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3289:1:36;3262:29;;:15;:29;;;;3254:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3355:15;3334:8;;:37;;;;;;;;;;;;;;;;;;3394:15;3382:28;;;;;;;;;;;;3185:230;:::o;3477:147:19:-;3566:4;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3592:5:19;3585:22;;;3608:2;3612:6;3585:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3585:34:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3585:34:19;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3585:34:19;;;;;;;;;;;;;;;;3578:41;;3477:147;;;;;:::o;2365:694::-;2542:7;2557:47;;:::i;:::-;2607:29;2624:11;2607:16;:29::i;:::-;2557:79;;2643:33;;:::i;:::-;2679:86;2715:17;2740:19;2679:28;:86::i;:::-;2643:122;;2771:42;;:::i;:::-;2816:28;2837:6;2816:20;:28::i;:::-;2771:73;;2850:39;;:::i;:::-;2892:30;2907:14;2892:5;:14;;:30;;;;:::i;:::-;2850:72;;2942:112;:91;2972:60;3017:14;2972:35;2987:19;2972:5;:14;;:35;;;;:::i;:::-;:44;;:60;;;;:::i;:::-;2942:11;:29;;:91;;;;:::i;:::-;:110;:112::i;:::-;2929:125;;;;;;2365:694;;;;;;:::o;1970:107:4:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;906:364:19:-;283:11:24;;;;;;;;;;;282:12;274:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;347:4;333:11;;:18;;;;;;;;;;;;;;;;;;1068:30:19;1087:10;1068:18;:30::i;:::-;1104:29;1116:16;1104:11;:29::i;:::-;1145:9;1157:1;1145:13;;1140:126;1164:14;;:21;;1160:1;:25;1140:126;;;1200:59;1219:14;;1234:1;1219:17;;;;;;;;;;;;;;;1238;;1256:1;1238:20;;;;;;;;;;;;;1200:18;:59::i;:::-;1187:3;;;;;;;1140:126;;;;906:364;;;;;:::o;1602:206::-;1725:17;1694:14;:28;1709:12;1694:28;;;;;;;;;;;;;;;:48;;;;1753:50;1771:12;1785:17;1753:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;1602:206;;:::o;4323:132:36:-;4370:6;4398:8;;;;;;;;;;;:27;;;1848:29;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1848:29:36;;;1838:40;;;;;;4398:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4398:51:36;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4398:51:36;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4398:51:36;;;;;;;;;;;;;;;;4384:66;;4323:132;:::o;3795:153:9:-;3894:7;3924:3;:10;;3935:5;3924:17;;;;;;;;;;;;;;;;;;;;;;;;;3917:24;;3795:153;;;;:::o;3991:1215:34:-;4159:7;4174:28;4205:18;:16;:18::i;:::-;4174:49;;4229:18;4250:14;:32;4265:16;4250:32;;;;;;;;;;;;;;;;4229:53;;4348:10;4304:13;:22;;;4327:16;4304:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4304:40:34;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4304:40:34;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4304:40:34;;;;;;;;;;;;;;;;:54;;4289:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4419:28;4450:1;4419:32;;4554:1;4541:10;:14;4537:271;;;4566:21;4589:23;4616:13;:24;;;4641:16;4616:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4616:42:34;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4616:42:34;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4616:42:34;;;;;;;;;;;;;;;;;;;;;;;;;4565:93;;;;4690:111;4718:13;4741:15;4766:6;4782:11;4690:18;:111::i;:::-;4667:134;;4537:271;;;4814:16;4833:14;:12;:14::i;:::-;4814:33;;4853:12;4889:10;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4889:20:34;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4889:20:34;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4889:20:34;;;;;;;;;;;;;;;;4868:50;;;4926:16;4958:9;4868:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4868:106:34;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4868:106:34;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4868:106:34;;;;;;;;;;;;;;;;4853:121;;4980:21;5004:138;5037:16;5030:34;;;5065:4;5030:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5030:40:34;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5030:40:34;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5030:40:34;;;;;;;;;;;;;;;;5078:9;:19;;;5098:4;5078:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5078:25:34;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5078:25:34;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5078:25:34;;;;;;;;;;;;;;;;5111:6;5125:11;5004:18;:138::i;:::-;4980:162;;5156:45;5165:13;5180:20;5156:8;:45::i;:::-;5149:52;;;;;;;;3991:1215;;;;;;:::o;2472:347::-;2563:1;2545:20;;:6;:20;;;;2537:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2604:34;2631:6;2604:15;:22;2620:5;2604:22;;;;;;;;;;;;;;;:26;;:34;;;;:::i;:::-;;1180:1;2659:15;:22;2675:5;2659:22;;;;;;;;;;;;;;;:29;;:36;;;;:68;;2644:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2783:31;2800:5;2807:6;2783:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2472:347;;:::o;1325:1019:9:-;1414:4;1438:20;1447:3;1452:5;1438:8;:20::i;:::-;1434:904;;;1473:21;1516:1;1497:3;:9;;:16;1507:5;1497:16;;;;;;;;;;;;;;;;:20;1473:44;;1531:17;1571:1;1551:3;:10;;:17;;;;:21;1531:41;;1709:13;1696:9;:26;1692:382;;1742:17;1762:3;:10;;1773:9;1762:21;;;;;;;;;;;;;;;;;;;;;;;;;1742:41;;1909:9;1881:3;:10;;1892:13;1881:25;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;2031:1;2015:13;:17;1992:3;:9;;:20;2002:9;1992:20;;;;;;;;;;;;;;;:40;;;;1692:382;;2155:3;:9;;:16;2165:5;2155:16;;;;;;;;;;;;;;;2148:23;;;2242:3;:10;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:4;2273:11;;;;;;1434:904;2322:5;2315:12;;1325:1019;;;;;:::o;788:96:0:-;833:15;867:10;860:17;;788:96;:::o;1552:94:20:-;1600:15;;:::i;:::-;1630:11;;;;;;;;1639:1;1630:11;;;1623:18;;1552:94;;;:::o;3565:314::-;3666:15;;:::i;:::-;3691:34;;:::i;:::-;3728:19;3737:9;3728:8;:19::i;:::-;3691:56;;3753:36;;:::i;:::-;3792:21;3801:11;3792:8;:21::i;:::-;3753:60;;3826:48;3833:18;3853:20;3826:6;:48::i;:::-;3819:55;;;;3565:314;;;;:::o;2597:203::-;2649:15;;:::i;:::-;2685:13;:11;:13::i;:::-;2680:1;:18;;2672:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2770:25;;;;;;;;1046;2779:1;:15;2770:25;;;2763:32;;2597:203;;;:::o;6256:1636::-;6335:15;;:::i;:::-;6373:1;6362;:7;;;:12;:28;;;;6389:1;6378;:7;;;:12;6362:28;6358:52;;;6399:11;;;;;;;;6408:1;6399:11;;;6392:18;;;;6358:52;1046:25;6420:1;:7;;;:22;6416:36;;;6451:1;6444:8;;;;6416:36;1046:25;6462:1;:7;;;:22;6458:36;;;6493:1;6486:8;;;;6458:36;6583:10;1046:25;6596:10;6604:1;6596:7;:10::i;:::-;:16;;;:30;;;;;;6583:43;;6632:10;6645:13;6656:1;6645:10;:13::i;:::-;:19;;;6632:32;;6670:10;1046:25;6683:10;6691:1;6683:7;:10::i;:::-;:16;;;:30;;;;;;6670:43;;6719:10;6732:13;6743:1;6732:10;:13::i;:::-;:19;;;6719:32;;6835:12;6855:2;6850;:7;6835:22;;6873:1;6867:2;:7;6863:63;;6897:2;6891;6884:4;:9;;;;;;:15;6876:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6863:63;7025:18;1046:25;7046:4;:18;7025:39;;7082:1;7074:4;:9;7070:91;;1046:25;7106:4;7093:10;:17;;;;;;:32;7085:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7070:91;7174:10;7167:17;;7191:12;7211:2;7206;:7;7191:22;;7229:1;7223:2;:7;7219:63;;7253:2;7247;7240:4;:9;;;;;;:15;7232:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7219:63;7289:12;7309:2;7304;:7;7289:22;;7327:1;7321:2;:7;7317:63;;7351:2;7345;7338:4;:9;;;;;;:15;7330:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7317:63;7397:14;:12;:14::i;:::-;7392:2;:19;;;;;;7387:24;;7427:14;:12;:14::i;:::-;7422:2;:19;;;;;;7417:24;;7447:12;7467:2;7462;:7;7447:22;;7485:1;7479:2;:7;7475:63;;7509:2;7503;7496:4;:9;;;;;;:15;7488:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7475:63;7622:22;;:::i;:::-;7647:14;;;;;;;;7656:4;7647:14;;;7622:39;;7676:27;7680:6;7688:14;;;;;;;;7697:4;7688:14;;;7676:3;:27::i;:::-;7667:36;;7745:27;7749:6;7757:14;;;;;;;;7766:4;7757:14;;;7745:3;:27::i;:::-;7736:36;;7814:27;7818:6;7826:14;;;;;;;;7835:4;7826:14;;;7814:3;:27::i;:::-;7805:36;;7881:6;7874:13;;;;;;;;;;;;6256:1636;;;;;:::o;5391:209::-;5470:15;;:::i;:::-;5512:1;:7;;;5501:1;:7;;;:18;;5493:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5568:27;;;;;;;;5587:1;:7;;;5577:1;:7;;;:17;5568:27;;;5561:34;;5391:209;;;;:::o;2959:109::-;3020:7;1046:25;3042:1;:7;;;:21;;;;;;3035:28;;2959:109;;;:::o;2178:225:4:-;2271:1;2251:22;;:8;:22;;;;2243:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:8;2331:38;;2352:6;;;;;;;;;;;2331:38;;;;;;;;;;;;2388:8;2379:6;;:17;;;;;;;;;;;;;;;;;;2178:225;:::o;5020:156:36:-;5071:14;5115:8;;;;;;;;;;;:27;;;2383:33;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2383:33:36;;;2373:44;;;;;;5115:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5115:55:36;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5115:55:36;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5115:55:36;;;;;;;;;;;;;;;;5093:78;;5020:156;:::o;182:105:2:-;240:7;271:1;266;:6;;:14;;279:1;266:14;;;275:1;266:14;259:21;;182:105;;;;:::o;923:272:9:-;1009:4;1034:20;1043:3;1048:5;1034:8;:20::i;:::-;1029:160;;1088:3;:10;;1104:5;1088:22;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1088:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1069:3;:9;;:16;1079:5;1069:16;;;;;;;;;;;;;;;:41;;;;1131:4;1124:11;;;;1029:160;1173:5;1166:12;;923:272;;;;;:::o;2425:159::-;2529:4;2576:1;2556:3;:9;;:16;2566:5;2556:16;;;;;;;;;;;;;;;;:21;;2549:28;;2425:159;;;;:::o;9230:283:20:-;9307:15;;:::i;:::-;9349:1;9338;:7;;;:12;;9330:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9378:9;1046:25;9390:1;:7;;;:21;9378:33;;9444:1;:7;;;1046:25;9425:1;:15;;;;;;:26;9417:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9487:21;;;;;;;;9500:1;:7;;;9496:1;:11;;;;;;9487:21;;;9480:28;;;9230:283;;;;:::o;2213:127::-;2259:7;2281:54;2274:61;;2213:127;:::o;4118:159::-;4177:15;;:::i;:::-;4207:47;;;;;;;;1046:25;;4217:1;:7;;;:21;;;;;;4216:37;4207:47;;;4200:54;;4118:159;;;:::o;4564:172::-;4626:15;;:::i;:::-;4656:57;;;;;;;;1046:25;;4676:1;:7;;;:21;;;;;;4675:37;4665:1;:7;;;:47;4656:57;;;4649:64;;4564:172;;;:::o;1955:87::-;2002:7;2024:13;2017:20;;1955:87;:::o;5108:207::-;5182:15;;:::i;:::-;5205:9;5227:1;:7;;;5217:1;:7;;;:17;5205:29;;5253:1;:7;;;5248:1;:12;;5240:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:11;;;;;;;;5308:1;5299:11;;;5292:18;;;5108:207;;;;:::o;873:6651:34:-;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.13;\n\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\";\nimport \"openzeppelin-solidity/contracts/utils/EnumerableSet.sol\";\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"openzeppelin-solidity/contracts/math/Math.sol\";\n\nimport \"./UsingRegistry.sol\";\n\nimport \"../common/interfaces/IFeeHandlerSeller.sol\";\nimport \"../stability/interfaces/ISortedOracles.sol\";\nimport \"../common/FixidityLib.sol\";\nimport \"../common/Initializable.sol\";\nimport \"./FeeHandlerSeller.sol\";\n\nimport \"../uniswap/interfaces/IUniswapV2RouterMin.sol\";\nimport \"../uniswap/interfaces/IUniswapV2FactoryMin.sol\";\n\n// An implementation of FeeHandlerSeller supporting interfaces compatible with\n// Uniswap V2 API\n// See https://github.com/celo-org/celo-proposals/blob/master/CIPs/cip-0052.md\ncontract UniswapFeeHandlerSeller is IFeeHandlerSeller, FeeHandlerSeller {\n  using SafeMath for uint256;\n  using FixidityLib for FixidityLib.Fraction;\n  using EnumerableSet for EnumerableSet.AddressSet;\n\n  uint256 constant MAX_TIMESTAMP_BLOCK_EXCHANGE = 20;\n  uint256 constant MAX_NUMBER_ROUTERS_PER_TOKEN = 3;\n  mapping(address => EnumerableSet.AddressSet) private routerAddresses;\n\n  event ReceivedQuote(address indexed tokneAddress, address indexed router, uint256 quote);\n  event RouterUsed(address router);\n  event RouterAddressSet(address token, address router);\n  event RouterAddressRemoved(address token, address router);\n\n  /**\n   * @notice Sets initialized == true on implementation contracts.\n   * @param test Set to true to skip implementation initialisation.\n   */\n  constructor(bool test) public Initializable(test) {}\n\n  // without this line the contract can't receive native Celo transfers\n  function() external payable {}\n\n  /**\n   * @notice Returns the storage, major, minor, and patch version of the contract.\n   * @return Storage version of the contract.\n   * @return Major version of the contract.\n   * @return Minor version of the contract.\n   * @return Patch version of the contract.\n   */\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256) {\n    return (1, 1, 0, 0);\n  }\n\n  /**\n    * @notice Allows owner to set the router for a token.\n    * @param token Address of the token to set.\n    * @param router The new router.\n    */\n  function setRouter(address token, address router) external onlyOwner {\n    _setRouter(token, router);\n  }\n\n  function _setRouter(address token, address router) private {\n    require(router != address(0), \"Router can't be address zero\");\n    routerAddresses[token].add(router);\n    require(\n      routerAddresses[token].values.length <= MAX_NUMBER_ROUTERS_PER_TOKEN,\n      \"Max number of routers reached\"\n    );\n    emit RouterAddressSet(token, router);\n  }\n\n  /**\n    * @notice Allows owner to remove a router for a token.\n    * @param token Address of the token.\n    * @param router Address of the router to remove.\n    */\n  function removeRouter(address token, address router) external onlyOwner {\n    routerAddresses[token].remove(router);\n    emit RouterAddressRemoved(token, router);\n  }\n\n  /**\n    * @notice Get the list of routers for a token.\n    * @param token The address of the token to query.\n    * @return An array of all the allowed router.\n    */\n  function getRoutersForToken(address token) external view returns (address[] memory) {\n    return routerAddresses[token].values;\n  }\n\n  /**\n  * @dev Calculates the minimum amount of tokens that can be received for a given amount of sell tokens, \n          taking into account the slippage and the rates of the sell token and CELO token on the Uniswap V2 pair.\n  * @param sellTokenAddress The address of the sell token.\n  * @param maxSlippage The maximum slippage allowed.\n  * @param amount The amount of sell tokens to be traded.\n  * @param bestRouter The Uniswap V2 router with the best price.\n  * @return The minimum amount of tokens that can be received.\n  */\n  function calculateAllMinAmount(\n    address sellTokenAddress,\n    uint256 maxSlippage,\n    uint256 amount,\n    IUniswapV2RouterMin bestRouter\n  ) private view returns (uint256) {\n    ISortedOracles sortedOracles = getSortedOracles();\n    uint256 minReports = minimumReports[sellTokenAddress];\n\n    require(\n      sortedOracles.numRates(sellTokenAddress) >= minReports,\n      \"Number of reports for token not enough\"\n    );\n\n    uint256 minimalSortedOracles = 0;\n    // if minimumReports for this token is zero, assume the check is not needed\n    if (minReports > 0) {\n      (uint256 rateNumerator, uint256 rateDenominator) = sortedOracles.medianRate(sellTokenAddress);\n\n      minimalSortedOracles = calculateMinAmount(\n        rateNumerator,\n        rateDenominator,\n        amount,\n        maxSlippage\n      );\n    }\n\n    IERC20 celoToken = getGoldToken();\n    address pair = IUniswapV2FactoryMin(bestRouter.factory()).getPair(\n      sellTokenAddress,\n      address(celoToken)\n    );\n    uint256 minAmountPair = calculateMinAmount(\n      IERC20(sellTokenAddress).balanceOf(pair),\n      celoToken.balanceOf(pair),\n      amount,\n      maxSlippage\n    );\n\n    return Math.max(minAmountPair, minimalSortedOracles);\n  }\n\n  // This function explicitly defines few variables because it was getting error \"stack too deep\"\n  function sell(\n    address sellTokenAddress,\n    address buyTokenAddress,\n    uint256 amount,\n    uint256 maxSlippage // as fraction,\n  ) external returns (uint256) {\n    require(\n      buyTokenAddress == registry.getAddressForOrDie(GOLD_TOKEN_REGISTRY_ID),\n      \"Buy token can only be gold token\"\n    );\n\n    require(\n      routerAddresses[sellTokenAddress].values.length > 0,\n      \"routerAddresses should be non empty\"\n    );\n\n    // An improvement to this function would be to allow the user to pass a path as argument\n    // and if it generates a better outcome that the ones enabled that gets used\n    // and the user gets a reward\n\n    IERC20 celoToken = getGoldToken();\n\n    IUniswapV2RouterMin bestRouter;\n    uint256 bestRouterQuote = 0;\n\n    address[] memory path = new address[](2);\n\n    path[0] = sellTokenAddress;\n    path[1] = address(celoToken);\n\n    for (uint256 i = 0; i < routerAddresses[sellTokenAddress].values.length; i++) {\n      address poolAddress = routerAddresses[sellTokenAddress].get(i);\n      IUniswapV2RouterMin router = IUniswapV2RouterMin(poolAddress);\n\n      // Using the second return value becuase it's the last argument,\n      // the previous values show how many tokens are exchanged in each path\n      // so the first value would be equivalent to balanceToBurn\n      uint256 wouldGet = router.getAmountsOut(amount, path)[1];\n\n      emit ReceivedQuote(sellTokenAddress, poolAddress, wouldGet);\n      if (wouldGet > bestRouterQuote) {\n        bestRouterQuote = wouldGet;\n        bestRouter = router;\n      }\n    }\n\n    require(bestRouterQuote != 0, \"Can't exchange with zero quote\");\n\n    uint256 minAmount = 0;\n    minAmount = calculateAllMinAmount(sellTokenAddress, maxSlippage, amount, bestRouter);\n\n    IERC20(sellTokenAddress).approve(address(bestRouter), amount);\n    bestRouter.swapExactTokensForTokens(\n      amount,\n      minAmount,\n      path,\n      address(this),\n      block.timestamp + MAX_TIMESTAMP_BLOCK_EXCHANGE\n    );\n\n    uint256 celoAmount = celoToken.balanceOf(address(this));\n    celoToken.transfer(msg.sender, celoAmount);\n    emit RouterUsed(address(bestRouter));\n    emit TokenSold(sellTokenAddress, buyTokenAddress, amount);\n    return celoAmount;\n  }\n}\n",
  "sourcePath": "/Users/beaver/Development/celo/celo-monorepo/packages/protocol/contracts/common/UniswapFeeHandlerSeller.sol",
  "ast": {
    "absolutePath": "project:/contracts/common/UniswapFeeHandlerSeller.sol",
    "exportedSymbols": {
      "UniswapFeeHandlerSeller": [
        10805
      ]
    },
    "id": 10806,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10311,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:34"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 10312,
        "nodeType": "ImportDirective",
        "scope": 10806,
        "sourceUnit": 364,
        "src": "26:59:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 10313,
        "nodeType": "ImportDirective",
        "scope": 10806,
        "sourceUnit": 956,
        "src": "86:64:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/utils/EnumerableSet.sol",
        "file": "openzeppelin-solidity/contracts/utils/EnumerableSet.sol",
        "id": 10314,
        "nodeType": "ImportDirective",
        "scope": 10806,
        "sourceUnit": 1466,
        "src": "151:65:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 10315,
        "nodeType": "ImportDirective",
        "scope": 10806,
        "sourceUnit": 482,
        "src": "217:63:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/Math.sol",
        "file": "openzeppelin-solidity/contracts/math/Math.sol",
        "id": 10316,
        "nodeType": "ImportDirective",
        "scope": 10806,
        "sourceUnit": 177,
        "src": "281:55:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/UsingRegistry.sol",
        "file": "./UsingRegistry.sol",
        "id": 10317,
        "nodeType": "ImportDirective",
        "scope": 10806,
        "sourceUnit": 11868,
        "src": "338:29:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/interfaces/IFeeHandlerSeller.sol",
        "file": "../common/interfaces/IFeeHandlerSeller.sol",
        "id": 10318,
        "nodeType": "ImportDirective",
        "scope": 10806,
        "sourceUnit": 12799,
        "src": "369:52:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/stability/interfaces/ISortedOracles.sol",
        "file": "../stability/interfaces/ISortedOracles.sol",
        "id": 10319,
        "nodeType": "ImportDirective",
        "scope": 10806,
        "sourceUnit": 52849,
        "src": "422:52:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/FixidityLib.sol",
        "file": "../common/FixidityLib.sol",
        "id": 10320,
        "nodeType": "ImportDirective",
        "scope": 10806,
        "sourceUnit": 6815,
        "src": "475:35:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/Initializable.sol",
        "file": "../common/Initializable.sol",
        "id": 10321,
        "nodeType": "ImportDirective",
        "scope": 10806,
        "sourceUnit": 7599,
        "src": "511:37:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/FeeHandlerSeller.sol",
        "file": "./FeeHandlerSeller.sol",
        "id": 10322,
        "nodeType": "ImportDirective",
        "scope": 10806,
        "sourceUnit": 6211,
        "src": "549:32:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/uniswap/interfaces/IUniswapV2RouterMin.sol",
        "file": "../uniswap/interfaces/IUniswapV2RouterMin.sol",
        "id": 10323,
        "nodeType": "ImportDirective",
        "scope": 10806,
        "sourceUnit": 54262,
        "src": "583:55:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/uniswap/interfaces/IUniswapV2FactoryMin.sol",
        "file": "../uniswap/interfaces/IUniswapV2FactoryMin.sol",
        "id": 10324,
        "nodeType": "ImportDirective",
        "scope": 10806,
        "sourceUnit": 53594,
        "src": "639:56:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10325,
              "name": "IFeeHandlerSeller",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12798,
              "src": "909:17:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IFeeHandlerSeller_$12798",
                "typeString": "contract IFeeHandlerSeller"
              }
            },
            "id": 10326,
            "nodeType": "InheritanceSpecifier",
            "src": "909:17:34"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10327,
              "name": "FeeHandlerSeller",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6210,
              "src": "928:16:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FeeHandlerSeller_$6210",
                "typeString": "contract FeeHandlerSeller"
              }
            },
            "id": 10328,
            "nodeType": "InheritanceSpecifier",
            "src": "928:16:34"
          }
        ],
        "contractDependencies": [
          26,
          481,
          6210,
          7598,
          11867,
          12798
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 10805,
        "linearizedBaseContracts": [
          10805,
          6210,
          11867,
          7598,
          481,
          26,
          12798
        ],
        "name": "UniswapFeeHandlerSeller",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 10331,
            "libraryName": {
              "contractScope": null,
              "id": 10329,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 363,
              "src": "955:8:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$363",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "949:27:34",
            "typeName": {
              "id": 10330,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "968:7:34",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 10334,
            "libraryName": {
              "contractScope": null,
              "id": 10332,
              "name": "FixidityLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6814,
              "src": "985:11:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FixidityLib_$6814",
                "typeString": "library FixidityLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "979:43:34",
            "typeName": {
              "contractScope": null,
              "id": 10333,
              "name": "FixidityLib.Fraction",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6215,
              "src": "1001:20:34",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Fraction_$6215_storage_ptr",
                "typeString": "struct FixidityLib.Fraction"
              }
            }
          },
          {
            "id": 10337,
            "libraryName": {
              "contractScope": null,
              "id": 10335,
              "name": "EnumerableSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1465,
              "src": "1031:13:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EnumerableSet_$1465",
                "typeString": "library EnumerableSet"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1025:49:34",
            "typeName": {
              "contractScope": null,
              "id": 10336,
              "name": "EnumerableSet.AddressSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1260,
              "src": "1049:24:34",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$1260_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            }
          },
          {
            "constant": true,
            "id": 10340,
            "name": "MAX_TIMESTAMP_BLOCK_EXCHANGE",
            "nodeType": "VariableDeclaration",
            "scope": 10805,
            "src": "1078:50:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10338,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1078:7:34",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3230",
              "id": 10339,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1126:2:34",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_20_by_1",
                "typeString": "int_const 20"
              },
              "value": "20"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 10343,
            "name": "MAX_NUMBER_ROUTERS_PER_TOKEN",
            "nodeType": "VariableDeclaration",
            "scope": 10805,
            "src": "1132:49:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10341,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1132:7:34",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "33",
              "id": 10342,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1180:1:34",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 10347,
            "name": "routerAddresses",
            "nodeType": "VariableDeclaration",
            "scope": 10805,
            "src": "1185:68:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$1260_storage_$",
              "typeString": "mapping(address => struct EnumerableSet.AddressSet)"
            },
            "typeName": {
              "id": 10346,
              "keyType": {
                "id": 10344,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1193:7:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1185:44:34",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$1260_storage_$",
                "typeString": "mapping(address => struct EnumerableSet.AddressSet)"
              },
              "valueType": {
                "contractScope": null,
                "id": 10345,
                "name": "EnumerableSet.AddressSet",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1260,
                "src": "1204:24:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_AddressSet_$1260_storage_ptr",
                  "typeString": "struct EnumerableSet.AddressSet"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 10355,
            "name": "ReceivedQuote",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10349,
                  "indexed": true,
                  "name": "tokneAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 10355,
                  "src": "1278:28:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10348,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1278:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10351,
                  "indexed": true,
                  "name": "router",
                  "nodeType": "VariableDeclaration",
                  "scope": 10355,
                  "src": "1308:22:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10350,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1308:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10353,
                  "indexed": false,
                  "name": "quote",
                  "nodeType": "VariableDeclaration",
                  "scope": 10355,
                  "src": "1332:13:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10352,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1332:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1277:69:34"
            },
            "src": "1258:89:34"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 10359,
            "name": "RouterUsed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10357,
                  "indexed": false,
                  "name": "router",
                  "nodeType": "VariableDeclaration",
                  "scope": 10359,
                  "src": "1367:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10356,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1367:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1366:16:34"
            },
            "src": "1350:33:34"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 10365,
            "name": "RouterAddressSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10361,
                  "indexed": false,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 10365,
                  "src": "1409:13:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10360,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1409:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10363,
                  "indexed": false,
                  "name": "router",
                  "nodeType": "VariableDeclaration",
                  "scope": 10365,
                  "src": "1424:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10362,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1424:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1408:31:34"
            },
            "src": "1386:54:34"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 10371,
            "name": "RouterAddressRemoved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10367,
                  "indexed": false,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 10371,
                  "src": "1470:13:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10366,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1470:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10369,
                  "indexed": false,
                  "name": "router",
                  "nodeType": "VariableDeclaration",
                  "scope": 10371,
                  "src": "1485:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1485:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1469:31:34"
            },
            "src": "1443:58:34"
          },
          {
            "body": {
              "id": 10379,
              "nodeType": "Block",
              "src": "1702:2:34",
              "statements": []
            },
            "documentation": "@notice Sets initialized == true on implementation contracts.\n@param test Set to true to skip implementation initialisation.",
            "id": 10380,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 10376,
                    "name": "test",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10373,
                    "src": "1696:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 10377,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10375,
                  "name": "Initializable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7598,
                  "src": "1682:13:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Initializable_$7598_$",
                    "typeString": "type(contract Initializable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1682:19:34"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10373,
                  "name": "test",
                  "nodeType": "VariableDeclaration",
                  "scope": 10380,
                  "src": "1664:9:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10372,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1664:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1663:11:34"
            },
            "returnParameters": {
              "id": 10378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1702:0:34"
            },
            "scope": 10805,
            "src": "1652:52:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10383,
              "nodeType": "Block",
              "src": "1808:2:34",
              "statements": []
            },
            "documentation": null,
            "id": 10384,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1788:2:34"
            },
            "returnParameters": {
              "id": 10382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1808:0:34"
            },
            "scope": 10805,
            "src": "1780:30:34",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10401,
              "nodeType": "Block",
              "src": "2174:30:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 10395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2188:1:34",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 10396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2191:1:34",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 10397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2194:1:34",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 10398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2197:1:34",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "id": 10399,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2187:12:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_1_by_1_$_t_rational_1_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
                      "typeString": "tuple(int_const 1,int_const 1,int_const 0,int_const 0)"
                    }
                  },
                  "functionReturnParameters": 10394,
                  "id": 10400,
                  "nodeType": "Return",
                  "src": "2180:19:34"
                }
              ]
            },
            "documentation": "@notice Returns the storage, major, minor, and patch version of the contract.\n@return Storage version of the contract.\n@return Major version of the contract.\n@return Minor version of the contract.\n@return Patch version of the contract.",
            "id": 10402,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVersionNumber",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2112:2:34"
            },
            "returnParameters": {
              "id": 10394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10387,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10402,
                  "src": "2138:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10386,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2138:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10389,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10402,
                  "src": "2147:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10388,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2147:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10391,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10402,
                  "src": "2156:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10390,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2156:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10393,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10402,
                  "src": "2165:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10392,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2165:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2137:36:34"
            },
            "scope": 10805,
            "src": "2087:117:34",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10416,
              "nodeType": "Block",
              "src": "2432:36:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10412,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10404,
                        "src": "2449:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10413,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10406,
                        "src": "2456:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10411,
                      "name": "_setRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10457,
                      "src": "2438:10:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 10414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2438:25:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10415,
                  "nodeType": "ExpressionStatement",
                  "src": "2438:25:34"
                }
              ]
            },
            "documentation": "@notice Allows owner to set the router for a token.\n@param token Address of the token to set.\n@param router The new router.",
            "id": 10417,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 10409,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10408,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 414,
                  "src": "2422:9:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2422:9:34"
              }
            ],
            "name": "setRouter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10404,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 10417,
                  "src": "2382:13:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10403,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2382:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10406,
                  "name": "router",
                  "nodeType": "VariableDeclaration",
                  "scope": 10417,
                  "src": "2397:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10405,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2397:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2381:31:34"
            },
            "returnParameters": {
              "id": 10410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2432:0:34"
            },
            "scope": 10805,
            "src": "2363:105:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10456,
              "nodeType": "Block",
              "src": "2531:288:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 10425,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10421,
                          "src": "2545:6:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 10427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2563:1:34",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2555:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 10428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2555:10:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2545:20:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "526f757465722063616e27742062652061646472657373207a65726f",
                        "id": 10430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2567:30:34",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7e073122cf0233ae9f99ba80dc2df44411bc03b8e06ae4546f19ee9c47e5c76d",
                          "typeString": "literal_string \"Router can't be address zero\""
                        },
                        "value": "Router can't be address zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7e073122cf0233ae9f99ba80dc2df44411bc03b8e06ae4546f19ee9c47e5c76d",
                          "typeString": "literal_string \"Router can't be address zero\""
                        }
                      ],
                      "id": 10424,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59219,
                        59220
                      ],
                      "referencedDeclaration": 59220,
                      "src": "2537:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2537:61:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10432,
                  "nodeType": "ExpressionStatement",
                  "src": "2537:61:34"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10437,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10421,
                        "src": "2631:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 10433,
                          "name": "routerAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10347,
                          "src": "2604:15:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$1260_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                          }
                        },
                        "id": 10435,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 10434,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10419,
                          "src": "2620:5:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2604:22:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$1260_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 10436,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1294,
                      "src": "2604:26:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1260_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$1260_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                      }
                    },
                    "id": 10438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2604:34:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10439,
                  "nodeType": "ExpressionStatement",
                  "src": "2604:34:34"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 10441,
                                "name": "routerAddresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10347,
                                "src": "2659:15:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$1260_storage_$",
                                  "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                                }
                              },
                              "id": 10443,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 10442,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10419,
                                "src": "2675:5:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2659:22:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$1260_storage",
                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                              }
                            },
                            "id": 10444,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "values",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1259,
                            "src": "2659:29:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 10445,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2659:36:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 10446,
                          "name": "MAX_NUMBER_ROUTERS_PER_TOKEN",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10343,
                          "src": "2699:28:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2659:68:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d6178206e756d626572206f6620726f75746572732072656163686564",
                        "id": 10448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2735:31:34",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b57133d444395eb498ab77bc7d3dc0bf20553812af7305101bcd7fa5a8e8575",
                          "typeString": "literal_string \"Max number of routers reached\""
                        },
                        "value": "Max number of routers reached"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b57133d444395eb498ab77bc7d3dc0bf20553812af7305101bcd7fa5a8e8575",
                          "typeString": "literal_string \"Max number of routers reached\""
                        }
                      ],
                      "id": 10440,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59219,
                        59220
                      ],
                      "referencedDeclaration": 59220,
                      "src": "2644:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2644:128:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10450,
                  "nodeType": "ExpressionStatement",
                  "src": "2644:128:34"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10452,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10419,
                        "src": "2800:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10453,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10421,
                        "src": "2807:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10451,
                      "name": "RouterAddressSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10365,
                      "src": "2783:16:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 10454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2783:31:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10455,
                  "nodeType": "EmitStatement",
                  "src": "2778:36:34"
                }
              ]
            },
            "documentation": null,
            "id": 10457,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setRouter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10419,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 10457,
                  "src": "2492:13:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2492:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10421,
                  "name": "router",
                  "nodeType": "VariableDeclaration",
                  "scope": 10457,
                  "src": "2507:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10420,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2507:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2491:31:34"
            },
            "returnParameters": {
              "id": 10423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2531:0:34"
            },
            "scope": 10805,
            "src": "2472:347:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 10478,
              "nodeType": "Block",
              "src": "3061:94:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10470,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10461,
                        "src": "3097:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 10466,
                          "name": "routerAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10347,
                          "src": "3067:15:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$1260_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                          }
                        },
                        "id": 10468,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 10467,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10459,
                          "src": "3083:5:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3067:22:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$1260_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 10469,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1375,
                      "src": "3067:29:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1260_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$1260_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                      }
                    },
                    "id": 10471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3067:37:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10472,
                  "nodeType": "ExpressionStatement",
                  "src": "3067:37:34"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10474,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10459,
                        "src": "3136:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10475,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10461,
                        "src": "3143:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10473,
                      "name": "RouterAddressRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10371,
                      "src": "3115:20:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 10476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3115:35:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10477,
                  "nodeType": "EmitStatement",
                  "src": "3110:40:34"
                }
              ]
            },
            "documentation": "@notice Allows owner to remove a router for a token.\n@param token Address of the token.\n@param router Address of the router to remove.",
            "id": 10479,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 10464,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10463,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 414,
                  "src": "3051:9:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3051:9:34"
              }
            ],
            "name": "removeRouter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10459,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 10479,
                  "src": "3011:13:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10458,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3011:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10461,
                  "name": "router",
                  "nodeType": "VariableDeclaration",
                  "scope": 10479,
                  "src": "3026:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3026:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3010:31:34"
            },
            "returnParameters": {
              "id": 10465,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3061:0:34"
            },
            "scope": 10805,
            "src": "2989:166:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10492,
              "nodeType": "Block",
              "src": "3411:47:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 10487,
                        "name": "routerAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10347,
                        "src": "3424:15:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$1260_storage_$",
                          "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                        }
                      },
                      "id": 10489,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 10488,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10481,
                        "src": "3440:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3424:22:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AddressSet_$1260_storage",
                        "typeString": "struct EnumerableSet.AddressSet storage ref"
                      }
                    },
                    "id": 10490,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "values",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1259,
                    "src": "3424:29:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 10486,
                  "id": 10491,
                  "nodeType": "Return",
                  "src": "3417:36:34"
                }
              ]
            },
            "documentation": "@notice Get the list of routers for a token.\n@param token The address of the token to query.\n@return An array of all the allowed router.",
            "id": 10493,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRoutersForToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10481,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 10493,
                  "src": "3355:13:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10480,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3355:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3354:15:34"
            },
            "returnParameters": {
              "id": 10486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10485,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10493,
                  "src": "3393:16:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10483,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3393:7:34",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 10484,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3393:9:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3392:18:34"
            },
            "scope": 10805,
            "src": "3327:131:34",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10596,
              "nodeType": "Block",
              "src": "4168:1038:34",
              "statements": [
                {
                  "assignments": [
                    10507
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10507,
                      "name": "sortedOracles",
                      "nodeType": "VariableDeclaration",
                      "scope": 10596,
                      "src": "4174:28:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISortedOracles_$52848",
                        "typeString": "contract ISortedOracles"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 10506,
                        "name": "ISortedOracles",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 52848,
                        "src": "4174:14:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISortedOracles_$52848",
                          "typeString": "contract ISortedOracles"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10510,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10508,
                      "name": "getSortedOracles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11840,
                      "src": "4205:16:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ISortedOracles_$52848_$",
                        "typeString": "function () view returns (contract ISortedOracles)"
                      }
                    },
                    "id": 10509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4205:18:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISortedOracles_$52848",
                      "typeString": "contract ISortedOracles"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4174:49:34"
                },
                {
                  "assignments": [
                    10512
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10512,
                      "name": "minReports",
                      "nodeType": "VariableDeclaration",
                      "scope": 10596,
                      "src": "4229:18:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10511,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4229:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10516,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 10513,
                      "name": "minimumReports",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6030,
                      "src": "4250:14:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 10515,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 10514,
                      "name": "sellTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10495,
                      "src": "4265:16:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4250:32:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4229:53:34"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 10520,
                              "name": "sellTokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10495,
                              "src": "4327:16:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 10518,
                              "name": "sortedOracles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10507,
                              "src": "4304:13:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISortedOracles_$52848",
                                "typeString": "contract ISortedOracles"
                              }
                            },
                            "id": 10519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "numRates",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52824,
                            "src": "4304:22:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 10521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4304:40:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 10522,
                          "name": "minReports",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10512,
                          "src": "4348:10:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4304:54:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e756d626572206f66207265706f72747320666f7220746f6b656e206e6f7420656e6f756768",
                        "id": 10524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4366:40:34",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_95b70a67b6f90bd4b4b99001501d6b791eaef597a8ec562443faa4204f719fe0",
                          "typeString": "literal_string \"Number of reports for token not enough\""
                        },
                        "value": "Number of reports for token not enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_95b70a67b6f90bd4b4b99001501d6b791eaef597a8ec562443faa4204f719fe0",
                          "typeString": "literal_string \"Number of reports for token not enough\""
                        }
                      ],
                      "id": 10517,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59219,
                        59220
                      ],
                      "referencedDeclaration": 59220,
                      "src": "4289:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4289:123:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10526,
                  "nodeType": "ExpressionStatement",
                  "src": "4289:123:34"
                },
                {
                  "assignments": [
                    10528
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10528,
                      "name": "minimalSortedOracles",
                      "nodeType": "VariableDeclaration",
                      "scope": 10596,
                      "src": "4419:28:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10527,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4419:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10530,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 10529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4450:1:34",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4419:32:34"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 10531,
                      "name": "minReports",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10512,
                      "src": "4541:10:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 10532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4554:1:34",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4541:14:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 10553,
                  "nodeType": "IfStatement",
                  "src": "4537:271:34",
                  "trueBody": {
                    "id": 10552,
                    "nodeType": "Block",
                    "src": "4557:251:34",
                    "statements": [
                      {
                        "assignments": [
                          10535,
                          10537
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10535,
                            "name": "rateNumerator",
                            "nodeType": "VariableDeclaration",
                            "scope": 10552,
                            "src": "4566:21:34",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 10534,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4566:7:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 10537,
                            "name": "rateDenominator",
                            "nodeType": "VariableDeclaration",
                            "scope": 10552,
                            "src": "4589:23:34",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 10536,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4589:7:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 10542,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 10540,
                              "name": "sellTokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10495,
                              "src": "4641:16:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 10538,
                              "name": "sortedOracles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10507,
                              "src": "4616:13:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISortedOracles_$52848",
                                "typeString": "contract ISortedOracles"
                              }
                            },
                            "id": 10539,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "medianRate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52833,
                            "src": "4616:24:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256,uint256)"
                            }
                          },
                          "id": 10541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4616:42:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4565:93:34"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 10550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 10543,
                            "name": "minimalSortedOracles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10528,
                            "src": "4667:20:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 10545,
                                "name": "rateNumerator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10535,
                                "src": "4718:13:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 10546,
                                "name": "rateDenominator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10537,
                                "src": "4741:15:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 10547,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10499,
                                "src": "4766:6:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 10548,
                                "name": "maxSlippage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10497,
                                "src": "4782:11:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 10544,
                              "name": "calculateMinAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6187,
                              "src": "4690:18:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 10549,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4690:111:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4667:134:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10551,
                        "nodeType": "ExpressionStatement",
                        "src": "4667:134:34"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    10555
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10555,
                      "name": "celoToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 10596,
                      "src": "4814:16:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$955",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 10554,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 955,
                        "src": "4814:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$955",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10558,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10556,
                      "name": "getGoldToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11775,
                      "src": "4833:12:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$955_$",
                        "typeString": "function () view returns (contract IERC20)"
                      }
                    },
                    "id": 10557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4833:14:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$955",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4814:33:34"
                },
                {
                  "assignments": [
                    10560
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10560,
                      "name": "pair",
                      "nodeType": "VariableDeclaration",
                      "scope": 10596,
                      "src": "4853:12:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10559,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4853:7:34",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10572,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10567,
                        "name": "sellTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10495,
                        "src": "4926:16:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10569,
                            "name": "celoToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10555,
                            "src": "4958:9:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$955",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$955",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 10568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4950:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 10570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4950:18:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 10562,
                                "name": "bestRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10501,
                                "src": "4889:10:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54261",
                                  "typeString": "contract IUniswapV2RouterMin"
                                }
                              },
                              "id": 10563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "factory",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54232,
                              "src": "4889:18:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                "typeString": "function () pure external returns (address)"
                              }
                            },
                            "id": 10564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4889:20:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10561,
                          "name": "IUniswapV2FactoryMin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53593,
                          "src": "4868:20:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV2FactoryMin_$53593_$",
                            "typeString": "type(contract IUniswapV2FactoryMin)"
                          }
                        },
                        "id": 10565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4868:42:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2FactoryMin_$53593",
                          "typeString": "contract IUniswapV2FactoryMin"
                        }
                      },
                      "id": 10566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53592,
                      "src": "4868:50:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_address_$",
                        "typeString": "function (address,address) view external returns (address)"
                      }
                    },
                    "id": 10571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4868:106:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4853:121:34"
                },
                {
                  "assignments": [
                    10574
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10574,
                      "name": "minAmountPair",
                      "nodeType": "VariableDeclaration",
                      "scope": 10596,
                      "src": "4980:21:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10573,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4980:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10589,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10580,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10560,
                            "src": "5065:4:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 10577,
                                "name": "sellTokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10495,
                                "src": "5037:16:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 10576,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 955,
                              "src": "5030:6:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$955_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 10578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5030:24:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$955",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 10579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 900,
                          "src": "5030:34:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 10581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5030:40:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10584,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10560,
                            "src": "5098:4:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 10582,
                            "name": "celoToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10555,
                            "src": "5078:9:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$955",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 10583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 900,
                          "src": "5078:19:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 10585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5078:25:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10586,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10499,
                        "src": "5111:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10587,
                        "name": "maxSlippage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10497,
                        "src": "5125:11:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10575,
                      "name": "calculateMinAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6187,
                      "src": "5004:18:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 10588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5004:138:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4980:162:34"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10592,
                        "name": "minAmountPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10574,
                        "src": "5165:13:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10593,
                        "name": "minimalSortedOracles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10528,
                        "src": "5180:20:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 10590,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 176,
                        "src": "5156:4:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$176_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 10591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 126,
                      "src": "5156:8:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 10594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5156:45:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10505,
                  "id": 10595,
                  "nodeType": "Return",
                  "src": "5149:52:34"
                }
              ]
            },
            "documentation": "@dev Calculates the minimum amount of tokens that can be received for a given amount of sell tokens, \ntaking into account the slippage and the rates of the sell token and CELO token on the Uniswap V2 pair.\n@param sellTokenAddress The address of the sell token.\n@param maxSlippage The maximum slippage allowed.\n@param amount The amount of sell tokens to be traded.\n@param bestRouter The Uniswap V2 router with the best price.\n@return The minimum amount of tokens that can be received.",
            "id": 10597,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateAllMinAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10495,
                  "name": "sellTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 10597,
                  "src": "4027:24:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10494,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4027:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10497,
                  "name": "maxSlippage",
                  "nodeType": "VariableDeclaration",
                  "scope": 10597,
                  "src": "4057:19:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10496,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4057:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10499,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10597,
                  "src": "4082:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10498,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4082:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10501,
                  "name": "bestRouter",
                  "nodeType": "VariableDeclaration",
                  "scope": 10597,
                  "src": "4102:30:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54261",
                    "typeString": "contract IUniswapV2RouterMin"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10500,
                    "name": "IUniswapV2RouterMin",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 54261,
                    "src": "4102:19:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54261",
                      "typeString": "contract IUniswapV2RouterMin"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4021:115:34"
            },
            "returnParameters": {
              "id": 10505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10504,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10597,
                  "src": "4159:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10503,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4159:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4158:9:34"
            },
            "scope": 10805,
            "src": "3991:1215:34",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 10803,
              "nodeType": "Block",
              "src": "5473:2049:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 10611,
                          "name": "buyTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10601,
                          "src": "5494:15:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 10614,
                              "name": "GOLD_TOKEN_REGISTRY_ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11557,
                              "src": "5541:22:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 10612,
                              "name": "registry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11623,
                              "src": "5513:8:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRegistry_$12958",
                                "typeString": "contract IRegistry"
                              }
                            },
                            "id": 10613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getAddressForOrDie",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12926,
                            "src": "5513:27:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32) view external returns (address)"
                            }
                          },
                          "id": 10615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5513:51:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5494:70:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42757920746f6b656e2063616e206f6e6c7920626520676f6c6420746f6b656e",
                        "id": 10617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5572:34:34",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e67027ddace3b13a3c1798b88643976b0c365b6eabe047620c9ccbbe70a5cd62",
                          "typeString": "literal_string \"Buy token can only be gold token\""
                        },
                        "value": "Buy token can only be gold token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e67027ddace3b13a3c1798b88643976b0c365b6eabe047620c9ccbbe70a5cd62",
                          "typeString": "literal_string \"Buy token can only be gold token\""
                        }
                      ],
                      "id": 10610,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59219,
                        59220
                      ],
                      "referencedDeclaration": 59220,
                      "src": "5479:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5479:133:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10619,
                  "nodeType": "ExpressionStatement",
                  "src": "5479:133:34"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 10621,
                                "name": "routerAddresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10347,
                                "src": "5634:15:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$1260_storage_$",
                                  "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                                }
                              },
                              "id": 10623,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 10622,
                                "name": "sellTokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10599,
                                "src": "5650:16:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5634:33:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$1260_storage",
                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                              }
                            },
                            "id": 10624,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "values",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1259,
                            "src": "5634:40:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 10625,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5634:47:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 10626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5684:1:34",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5634:51:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "726f757465724164647265737365732073686f756c64206265206e6f6e20656d707479",
                        "id": 10628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5693:37:34",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_165e0bf8f1f6e56e3848d98e23d10c9a84f2724a3f4accb4951f747933b71c01",
                          "typeString": "literal_string \"routerAddresses should be non empty\""
                        },
                        "value": "routerAddresses should be non empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_165e0bf8f1f6e56e3848d98e23d10c9a84f2724a3f4accb4951f747933b71c01",
                          "typeString": "literal_string \"routerAddresses should be non empty\""
                        }
                      ],
                      "id": 10620,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59219,
                        59220
                      ],
                      "referencedDeclaration": 59220,
                      "src": "5619:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5619:117:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10630,
                  "nodeType": "ExpressionStatement",
                  "src": "5619:117:34"
                },
                {
                  "assignments": [
                    10632
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10632,
                      "name": "celoToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 10803,
                      "src": "5952:16:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$955",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 10631,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 955,
                        "src": "5952:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$955",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10635,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10633,
                      "name": "getGoldToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11775,
                      "src": "5971:12:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$955_$",
                        "typeString": "function () view returns (contract IERC20)"
                      }
                    },
                    "id": 10634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5971:14:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$955",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5952:33:34"
                },
                {
                  "assignments": [
                    10637
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10637,
                      "name": "bestRouter",
                      "nodeType": "VariableDeclaration",
                      "scope": 10803,
                      "src": "5992:30:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54261",
                        "typeString": "contract IUniswapV2RouterMin"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 10636,
                        "name": "IUniswapV2RouterMin",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 54261,
                        "src": "5992:19:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54261",
                          "typeString": "contract IUniswapV2RouterMin"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10638,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5992:30:34"
                },
                {
                  "assignments": [
                    10640
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10640,
                      "name": "bestRouterQuote",
                      "nodeType": "VariableDeclaration",
                      "scope": 10803,
                      "src": "6028:23:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10639,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6028:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10642,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 10641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6054:1:34",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6028:27:34"
                },
                {
                  "assignments": [
                    10646
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10646,
                      "name": "path",
                      "nodeType": "VariableDeclaration",
                      "scope": 10803,
                      "src": "6062:21:34",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 10644,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6062:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 10645,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "6062:9:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10652,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 10650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6100:1:34",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 10649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6086:13:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 10647,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6090:7:34",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 10648,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "6090:9:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 10651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6086:16:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6062:40:34"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 10653,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10646,
                        "src": "6109:4:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 10655,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 10654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6114:1:34",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6109:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10656,
                      "name": "sellTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10599,
                      "src": "6119:16:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6109:26:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10658,
                  "nodeType": "ExpressionStatement",
                  "src": "6109:26:34"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 10659,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10646,
                        "src": "6141:4:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 10661,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 10660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6146:1:34",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6141:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 10663,
                          "name": "celoToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10632,
                          "src": "6159:9:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$955",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$955",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 10662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6151:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 10664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6151:18:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6141:28:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10666,
                  "nodeType": "ExpressionStatement",
                  "src": "6141:28:34"
                },
                {
                  "body": {
                    "id": 10725,
                    "nodeType": "Block",
                    "src": "6254:605:34",
                    "statements": [
                      {
                        "assignments": [
                          10682
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10682,
                            "name": "poolAddress",
                            "nodeType": "VariableDeclaration",
                            "scope": 10725,
                            "src": "6262:19:34",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 10681,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6262:7:34",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 10689,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 10687,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10668,
                              "src": "6322:1:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 10683,
                                "name": "routerAddresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10347,
                                "src": "6284:15:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$1260_storage_$",
                                  "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                                }
                              },
                              "id": 10685,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 10684,
                                "name": "sellTokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10599,
                                "src": "6300:16:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6284:33:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$1260_storage",
                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                              }
                            },
                            "id": 10686,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "get",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1464,
                            "src": "6284:37:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1260_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$1260_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
                            }
                          },
                          "id": 10688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6284:40:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6262:62:34"
                      },
                      {
                        "assignments": [
                          10691
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10691,
                            "name": "router",
                            "nodeType": "VariableDeclaration",
                            "scope": 10725,
                            "src": "6332:26:34",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54261",
                              "typeString": "contract IUniswapV2RouterMin"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 10690,
                              "name": "IUniswapV2RouterMin",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 54261,
                              "src": "6332:19:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54261",
                                "typeString": "contract IUniswapV2RouterMin"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 10695,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 10693,
                              "name": "poolAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10682,
                              "src": "6381:11:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 10692,
                            "name": "IUniswapV2RouterMin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54261,
                            "src": "6361:19:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IUniswapV2RouterMin_$54261_$",
                              "typeString": "type(contract IUniswapV2RouterMin)"
                            }
                          },
                          "id": 10694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6361:32:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54261",
                            "typeString": "contract IUniswapV2RouterMin"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6332:61:34"
                      },
                      {
                        "assignments": [
                          10697
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10697,
                            "name": "wouldGet",
                            "nodeType": "VariableDeclaration",
                            "scope": 10725,
                            "src": "6615:16:34",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 10696,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6615:7:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 10705,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 10700,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10603,
                                "src": "6655:6:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 10701,
                                "name": "path",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10646,
                                "src": "6663:4:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 10698,
                                "name": "router",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10691,
                                "src": "6634:6:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54261",
                                  "typeString": "contract IUniswapV2RouterMin"
                                }
                              },
                              "id": 10699,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getAmountsOut",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54260,
                              "src": "6634:20:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                "typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
                              }
                            },
                            "id": 10702,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6634:34:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 10704,
                          "indexExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 10703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6669:1:34",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6634:37:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6615:56:34"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 10707,
                              "name": "sellTokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10599,
                              "src": "6699:16:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 10708,
                              "name": "poolAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10682,
                              "src": "6717:11:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 10709,
                              "name": "wouldGet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10697,
                              "src": "6730:8:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 10706,
                            "name": "ReceivedQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10355,
                            "src": "6685:13:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 10710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6685:54:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10711,
                        "nodeType": "EmitStatement",
                        "src": "6680:59:34"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10712,
                            "name": "wouldGet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10697,
                            "src": "6751:8:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 10713,
                            "name": "bestRouterQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10640,
                            "src": "6762:15:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6751:26:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 10724,
                        "nodeType": "IfStatement",
                        "src": "6747:106:34",
                        "trueBody": {
                          "id": 10723,
                          "nodeType": "Block",
                          "src": "6779:74:34",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 10717,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 10715,
                                  "name": "bestRouterQuote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10640,
                                  "src": "6789:15:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 10716,
                                  "name": "wouldGet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10697,
                                  "src": "6807:8:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6789:26:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 10718,
                              "nodeType": "ExpressionStatement",
                              "src": "6789:26:34"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 10721,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 10719,
                                  "name": "bestRouter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10637,
                                  "src": "6825:10:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54261",
                                    "typeString": "contract IUniswapV2RouterMin"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 10720,
                                  "name": "router",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10691,
                                  "src": "6838:6:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54261",
                                    "typeString": "contract IUniswapV2RouterMin"
                                  }
                                },
                                "src": "6825:19:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54261",
                                  "typeString": "contract IUniswapV2RouterMin"
                                }
                              },
                              "id": 10722,
                              "nodeType": "ExpressionStatement",
                              "src": "6825:19:34"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 10671,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10668,
                      "src": "6196:1:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 10672,
                            "name": "routerAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10347,
                            "src": "6200:15:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$1260_storage_$",
                              "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                            }
                          },
                          "id": 10674,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 10673,
                            "name": "sellTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10599,
                            "src": "6216:16:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6200:33:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressSet_$1260_storage",
                            "typeString": "struct EnumerableSet.AddressSet storage ref"
                          }
                        },
                        "id": 10675,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "values",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1259,
                        "src": "6200:40:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 10676,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6200:47:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6196:51:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10726,
                  "initializationExpression": {
                    "assignments": [
                      10668
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 10668,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 10726,
                        "src": "6181:9:34",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 10667,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6181:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 10670,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 10669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6193:1:34",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6181:13:34"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 10679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6249:3:34",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 10678,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10668,
                        "src": "6249:1:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 10680,
                    "nodeType": "ExpressionStatement",
                    "src": "6249:3:34"
                  },
                  "nodeType": "ForStatement",
                  "src": "6176:683:34"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 10728,
                          "name": "bestRouterQuote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10640,
                          "src": "6873:15:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 10729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6892:1:34",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6873:20:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e27742065786368616e67652077697468207a65726f2071756f7465",
                        "id": 10731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6895:32:34",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e922fdd17f0dca5c801efce65fb6d53726ba6a56278781a761dc52d89a28b6b",
                          "typeString": "literal_string \"Can't exchange with zero quote\""
                        },
                        "value": "Can't exchange with zero quote"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e922fdd17f0dca5c801efce65fb6d53726ba6a56278781a761dc52d89a28b6b",
                          "typeString": "literal_string \"Can't exchange with zero quote\""
                        }
                      ],
                      "id": 10727,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59219,
                        59220
                      ],
                      "referencedDeclaration": 59220,
                      "src": "6865:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6865:63:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10733,
                  "nodeType": "ExpressionStatement",
                  "src": "6865:63:34"
                },
                {
                  "assignments": [
                    10735
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10735,
                      "name": "minAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 10803,
                      "src": "6935:17:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10734,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6935:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10737,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 10736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6955:1:34",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6935:21:34"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10738,
                      "name": "minAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10735,
                      "src": "6962:9:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 10740,
                          "name": "sellTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10599,
                          "src": "6996:16:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 10741,
                          "name": "maxSlippage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10605,
                          "src": "7014:11:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 10742,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10603,
                          "src": "7027:6:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 10743,
                          "name": "bestRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10637,
                          "src": "7035:10:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54261",
                            "typeString": "contract IUniswapV2RouterMin"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54261",
                            "typeString": "contract IUniswapV2RouterMin"
                          }
                        ],
                        "id": 10739,
                        "name": "calculateAllMinAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10597,
                        "src": "6974:21:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$_t_contract$_IUniswapV2RouterMin_$54261_$returns$_t_uint256_$",
                          "typeString": "function (address,uint256,uint256,contract IUniswapV2RouterMin) view returns (uint256)"
                        }
                      },
                      "id": 10744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6974:72:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6962:84:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10746,
                  "nodeType": "ExpressionStatement",
                  "src": "6962:84:34"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10752,
                            "name": "bestRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10637,
                            "src": "7094:10:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54261",
                              "typeString": "contract IUniswapV2RouterMin"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54261",
                              "typeString": "contract IUniswapV2RouterMin"
                            }
                          ],
                          "id": 10751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7086:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 10753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7086:19:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10754,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10603,
                        "src": "7107:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10748,
                            "name": "sellTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10599,
                            "src": "7060:16:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10747,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 955,
                          "src": "7053:6:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$955_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 10749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7053:24:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$955",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 10750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 927,
                      "src": "7053:32:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 10755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7053:61:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10756,
                  "nodeType": "ExpressionStatement",
                  "src": "7053:61:34"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10760,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10603,
                        "src": "7163:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10761,
                        "name": "minAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10735,
                        "src": "7177:9:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10762,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10646,
                        "src": "7194:4:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10764,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59352,
                            "src": "7214:4:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UniswapFeeHandlerSeller_$10805",
                              "typeString": "contract UniswapFeeHandlerSeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_UniswapFeeHandlerSeller_$10805",
                              "typeString": "contract UniswapFeeHandlerSeller"
                            }
                          ],
                          "id": 10763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7206:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 10765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7206:13:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 10766,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59206,
                            "src": "7227:5:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 10767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7227:15:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 10768,
                          "name": "MAX_TIMESTAMP_BLOCK_EXCHANGE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10340,
                          "src": "7245:28:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7227:46:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 10757,
                        "name": "bestRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10637,
                        "src": "7120:10:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54261",
                          "typeString": "contract IUniswapV2RouterMin"
                        }
                      },
                      "id": 10759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swapExactTokensForTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54249,
                      "src": "7120:35:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 10770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7120:159:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 10771,
                  "nodeType": "ExpressionStatement",
                  "src": "7120:159:34"
                },
                {
                  "assignments": [
                    10773
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10773,
                      "name": "celoAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 10803,
                      "src": "7286:18:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10772,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7286:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10780,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10777,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59352,
                            "src": "7335:4:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UniswapFeeHandlerSeller_$10805",
                              "typeString": "contract UniswapFeeHandlerSeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_UniswapFeeHandlerSeller_$10805",
                              "typeString": "contract UniswapFeeHandlerSeller"
                            }
                          ],
                          "id": 10776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7327:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 10778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7327:13:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 10774,
                        "name": "celoToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10632,
                        "src": "7307:9:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$955",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 10775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 900,
                      "src": "7307:19:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 10779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7307:34:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7286:55:34"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 10784,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59216,
                          "src": "7366:3:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7366:10:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10786,
                        "name": "celoAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10773,
                        "src": "7378:10:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 10781,
                        "name": "celoToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10632,
                        "src": "7347:9:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$955",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 10783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 909,
                      "src": "7347:18:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 10787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7347:42:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10788,
                  "nodeType": "ExpressionStatement",
                  "src": "7347:42:34"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10791,
                            "name": "bestRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10637,
                            "src": "7419:10:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54261",
                              "typeString": "contract IUniswapV2RouterMin"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54261",
                              "typeString": "contract IUniswapV2RouterMin"
                            }
                          ],
                          "id": 10790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7411:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 10792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7411:19:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10789,
                      "name": "RouterUsed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10359,
                      "src": "7400:10:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7400:31:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10794,
                  "nodeType": "EmitStatement",
                  "src": "7395:36:34"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10796,
                        "name": "sellTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10599,
                        "src": "7452:16:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10797,
                        "name": "buyTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10601,
                        "src": "7470:15:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10798,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10603,
                        "src": "7487:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10795,
                      "name": "TokenSold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6044,
                      "src": "7442:9:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7442:52:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10800,
                  "nodeType": "EmitStatement",
                  "src": "7437:57:34"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10801,
                    "name": "celoAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10773,
                    "src": "7507:10:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10609,
                  "id": 10802,
                  "nodeType": "Return",
                  "src": "7500:17:34"
                }
              ]
            },
            "documentation": null,
            "id": 10804,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sell",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10599,
                  "name": "sellTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 10804,
                  "src": "5327:24:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10598,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5327:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10601,
                  "name": "buyTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 10804,
                  "src": "5357:23:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5357:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10603,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10804,
                  "src": "5386:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10602,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5386:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10605,
                  "name": "maxSlippage",
                  "nodeType": "VariableDeclaration",
                  "scope": 10804,
                  "src": "5406:19:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10604,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5406:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5321:124:34"
            },
            "returnParameters": {
              "id": 10609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10608,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10804,
                  "src": "5464:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10607,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5464:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5463:9:34"
            },
            "scope": 10805,
            "src": "5308:2214:34",
            "stateMutability": "nonpayable",
            "superFunction": 12786,
            "visibility": "external"
          }
        ],
        "scope": 10806,
        "src": "873:6651:34"
      }
    ],
    "src": "0:7525:34"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/common/UniswapFeeHandlerSeller.sol",
      "exportedSymbols": {
        "UniswapFeeHandlerSeller": [
          10805
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".13"
          ]
        },
        "id": 10311,
        "name": "PragmaDirective",
        "src": "0:24:34"
      },
      {
        "attributes": {
          "SourceUnit": 364,
          "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
          "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
          "scope": 10806,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 10312,
        "name": "ImportDirective",
        "src": "26:59:34"
      },
      {
        "attributes": {
          "SourceUnit": 956,
          "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
          "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
          "scope": 10806,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 10313,
        "name": "ImportDirective",
        "src": "86:64:34"
      },
      {
        "attributes": {
          "SourceUnit": 1466,
          "absolutePath": "openzeppelin-solidity/contracts/utils/EnumerableSet.sol",
          "file": "openzeppelin-solidity/contracts/utils/EnumerableSet.sol",
          "scope": 10806,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 10314,
        "name": "ImportDirective",
        "src": "151:65:34"
      },
      {
        "attributes": {
          "SourceUnit": 482,
          "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
          "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
          "scope": 10806,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 10315,
        "name": "ImportDirective",
        "src": "217:63:34"
      },
      {
        "attributes": {
          "SourceUnit": 177,
          "absolutePath": "openzeppelin-solidity/contracts/math/Math.sol",
          "file": "openzeppelin-solidity/contracts/math/Math.sol",
          "scope": 10806,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 10316,
        "name": "ImportDirective",
        "src": "281:55:34"
      },
      {
        "attributes": {
          "SourceUnit": 11868,
          "absolutePath": "project:/contracts/common/UsingRegistry.sol",
          "file": "./UsingRegistry.sol",
          "scope": 10806,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 10317,
        "name": "ImportDirective",
        "src": "338:29:34"
      },
      {
        "attributes": {
          "SourceUnit": 12799,
          "absolutePath": "project:/contracts/common/interfaces/IFeeHandlerSeller.sol",
          "file": "../common/interfaces/IFeeHandlerSeller.sol",
          "scope": 10806,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 10318,
        "name": "ImportDirective",
        "src": "369:52:34"
      },
      {
        "attributes": {
          "SourceUnit": 52849,
          "absolutePath": "project:/contracts/stability/interfaces/ISortedOracles.sol",
          "file": "../stability/interfaces/ISortedOracles.sol",
          "scope": 10806,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 10319,
        "name": "ImportDirective",
        "src": "422:52:34"
      },
      {
        "attributes": {
          "SourceUnit": 6815,
          "absolutePath": "project:/contracts/common/FixidityLib.sol",
          "file": "../common/FixidityLib.sol",
          "scope": 10806,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 10320,
        "name": "ImportDirective",
        "src": "475:35:34"
      },
      {
        "attributes": {
          "SourceUnit": 7599,
          "absolutePath": "project:/contracts/common/Initializable.sol",
          "file": "../common/Initializable.sol",
          "scope": 10806,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 10321,
        "name": "ImportDirective",
        "src": "511:37:34"
      },
      {
        "attributes": {
          "SourceUnit": 6211,
          "absolutePath": "project:/contracts/common/FeeHandlerSeller.sol",
          "file": "./FeeHandlerSeller.sol",
          "scope": 10806,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 10322,
        "name": "ImportDirective",
        "src": "549:32:34"
      },
      {
        "attributes": {
          "SourceUnit": 54262,
          "absolutePath": "project:/contracts/uniswap/interfaces/IUniswapV2RouterMin.sol",
          "file": "../uniswap/interfaces/IUniswapV2RouterMin.sol",
          "scope": 10806,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 10323,
        "name": "ImportDirective",
        "src": "583:55:34"
      },
      {
        "attributes": {
          "SourceUnit": 53594,
          "absolutePath": "project:/contracts/uniswap/interfaces/IUniswapV2FactoryMin.sol",
          "file": "../uniswap/interfaces/IUniswapV2FactoryMin.sol",
          "scope": 10806,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 10324,
        "name": "ImportDirective",
        "src": "639:56:34"
      },
      {
        "attributes": {
          "contractDependencies": [
            26,
            481,
            6210,
            7598,
            11867,
            12798
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            10805,
            6210,
            11867,
            7598,
            481,
            26,
            12798
          ],
          "name": "UniswapFeeHandlerSeller",
          "scope": 10806
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "IFeeHandlerSeller",
                  "referencedDeclaration": 12798,
                  "type": "contract IFeeHandlerSeller"
                },
                "id": 10325,
                "name": "UserDefinedTypeName",
                "src": "909:17:34"
              }
            ],
            "id": 10326,
            "name": "InheritanceSpecifier",
            "src": "909:17:34"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "FeeHandlerSeller",
                  "referencedDeclaration": 6210,
                  "type": "contract FeeHandlerSeller"
                },
                "id": 10327,
                "name": "UserDefinedTypeName",
                "src": "928:16:34"
              }
            ],
            "id": 10328,
            "name": "InheritanceSpecifier",
            "src": "928:16:34"
          },
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "SafeMath",
                  "referencedDeclaration": 363,
                  "type": "library SafeMath"
                },
                "id": 10329,
                "name": "UserDefinedTypeName",
                "src": "955:8:34"
              },
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 10330,
                "name": "ElementaryTypeName",
                "src": "968:7:34"
              }
            ],
            "id": 10331,
            "name": "UsingForDirective",
            "src": "949:27:34"
          },
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "FixidityLib",
                  "referencedDeclaration": 6814,
                  "type": "library FixidityLib"
                },
                "id": 10332,
                "name": "UserDefinedTypeName",
                "src": "985:11:34"
              },
              {
                "attributes": {
                  "contractScope": null,
                  "name": "FixidityLib.Fraction",
                  "referencedDeclaration": 6215,
                  "type": "struct FixidityLib.Fraction"
                },
                "id": 10333,
                "name": "UserDefinedTypeName",
                "src": "1001:20:34"
              }
            ],
            "id": 10334,
            "name": "UsingForDirective",
            "src": "979:43:34"
          },
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "EnumerableSet",
                  "referencedDeclaration": 1465,
                  "type": "library EnumerableSet"
                },
                "id": 10335,
                "name": "UserDefinedTypeName",
                "src": "1031:13:34"
              },
              {
                "attributes": {
                  "contractScope": null,
                  "name": "EnumerableSet.AddressSet",
                  "referencedDeclaration": 1260,
                  "type": "struct EnumerableSet.AddressSet"
                },
                "id": 10336,
                "name": "UserDefinedTypeName",
                "src": "1049:24:34"
              }
            ],
            "id": 10337,
            "name": "UsingForDirective",
            "src": "1025:49:34"
          },
          {
            "attributes": {
              "constant": true,
              "name": "MAX_TIMESTAMP_BLOCK_EXCHANGE",
              "scope": 10805,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 10338,
                "name": "ElementaryTypeName",
                "src": "1078:7:34"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "3230",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 20",
                  "value": "20"
                },
                "id": 10339,
                "name": "Literal",
                "src": "1126:2:34"
              }
            ],
            "id": 10340,
            "name": "VariableDeclaration",
            "src": "1078:50:34"
          },
          {
            "attributes": {
              "constant": true,
              "name": "MAX_NUMBER_ROUTERS_PER_TOKEN",
              "scope": 10805,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 10341,
                "name": "ElementaryTypeName",
                "src": "1132:7:34"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "33",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 3",
                  "value": "3"
                },
                "id": 10342,
                "name": "Literal",
                "src": "1180:1:34"
              }
            ],
            "id": 10343,
            "name": "VariableDeclaration",
            "src": "1132:49:34"
          },
          {
            "attributes": {
              "constant": false,
              "name": "routerAddresses",
              "scope": 10805,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct EnumerableSet.AddressSet)",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct EnumerableSet.AddressSet)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 10344,
                    "name": "ElementaryTypeName",
                    "src": "1193:7:34"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "EnumerableSet.AddressSet",
                      "referencedDeclaration": 1260,
                      "type": "struct EnumerableSet.AddressSet"
                    },
                    "id": 10345,
                    "name": "UserDefinedTypeName",
                    "src": "1204:24:34"
                  }
                ],
                "id": 10346,
                "name": "Mapping",
                "src": "1185:44:34"
              }
            ],
            "id": 10347,
            "name": "VariableDeclaration",
            "src": "1185:68:34"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "ReceivedQuote"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "tokneAddress",
                      "scope": 10355,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 10348,
                        "name": "ElementaryTypeName",
                        "src": "1278:7:34"
                      }
                    ],
                    "id": 10349,
                    "name": "VariableDeclaration",
                    "src": "1278:28:34"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "router",
                      "scope": 10355,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 10350,
                        "name": "ElementaryTypeName",
                        "src": "1308:7:34"
                      }
                    ],
                    "id": 10351,
                    "name": "VariableDeclaration",
                    "src": "1308:22:34"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "quote",
                      "scope": 10355,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 10352,
                        "name": "ElementaryTypeName",
                        "src": "1332:7:34"
                      }
                    ],
                    "id": 10353,
                    "name": "VariableDeclaration",
                    "src": "1332:13:34"
                  }
                ],
                "id": 10354,
                "name": "ParameterList",
                "src": "1277:69:34"
              }
            ],
            "id": 10355,
            "name": "EventDefinition",
            "src": "1258:89:34"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "RouterUsed"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "router",
                      "scope": 10359,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 10356,
                        "name": "ElementaryTypeName",
                        "src": "1367:7:34"
                      }
                    ],
                    "id": 10357,
                    "name": "VariableDeclaration",
                    "src": "1367:14:34"
                  }
                ],
                "id": 10358,
                "name": "ParameterList",
                "src": "1366:16:34"
              }
            ],
            "id": 10359,
            "name": "EventDefinition",
            "src": "1350:33:34"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "RouterAddressSet"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "token",
                      "scope": 10365,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 10360,
                        "name": "ElementaryTypeName",
                        "src": "1409:7:34"
                      }
                    ],
                    "id": 10361,
                    "name": "VariableDeclaration",
                    "src": "1409:13:34"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "router",
                      "scope": 10365,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 10362,
                        "name": "ElementaryTypeName",
                        "src": "1424:7:34"
                      }
                    ],
                    "id": 10363,
                    "name": "VariableDeclaration",
                    "src": "1424:14:34"
                  }
                ],
                "id": 10364,
                "name": "ParameterList",
                "src": "1408:31:34"
              }
            ],
            "id": 10365,
            "name": "EventDefinition",
            "src": "1386:54:34"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "RouterAddressRemoved"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "token",
                      "scope": 10371,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 10366,
                        "name": "ElementaryTypeName",
                        "src": "1470:7:34"
                      }
                    ],
                    "id": 10367,
                    "name": "VariableDeclaration",
                    "src": "1470:13:34"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "router",
                      "scope": 10371,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 10368,
                        "name": "ElementaryTypeName",
                        "src": "1485:7:34"
                      }
                    ],
                    "id": 10369,
                    "name": "VariableDeclaration",
                    "src": "1485:14:34"
                  }
                ],
                "id": 10370,
                "name": "ParameterList",
                "src": "1469:31:34"
              }
            ],
            "id": 10371,
            "name": "EventDefinition",
            "src": "1443:58:34"
          },
          {
            "attributes": {
              "documentation": "@notice Sets initialized == true on implementation contracts.\n@param test Set to true to skip implementation initialisation.",
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 10805,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "test",
                      "scope": 10380,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 10372,
                        "name": "ElementaryTypeName",
                        "src": "1664:4:34"
                      }
                    ],
                    "id": 10373,
                    "name": "VariableDeclaration",
                    "src": "1664:9:34"
                  }
                ],
                "id": 10374,
                "name": "ParameterList",
                "src": "1663:11:34"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 10378,
                "name": "ParameterList",
                "src": "1702:0:34"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7598,
                      "type": "type(contract Initializable)",
                      "value": "Initializable"
                    },
                    "id": 10375,
                    "name": "Identifier",
                    "src": "1682:13:34"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 10373,
                      "type": "bool",
                      "value": "test"
                    },
                    "id": 10376,
                    "name": "Identifier",
                    "src": "1696:4:34"
                  }
                ],
                "id": 10377,
                "name": "ModifierInvocation",
                "src": "1682:19:34"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 10379,
                "name": "Block",
                "src": "1702:2:34"
              }
            ],
            "id": 10380,
            "name": "FunctionDefinition",
            "src": "1652:52:34"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "fallback",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 10805,
              "stateMutability": "payable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 10381,
                "name": "ParameterList",
                "src": "1788:2:34"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 10382,
                "name": "ParameterList",
                "src": "1808:0:34"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 10383,
                "name": "Block",
                "src": "1808:2:34"
              }
            ],
            "id": 10384,
            "name": "FunctionDefinition",
            "src": "1780:30:34"
          },
          {
            "attributes": {
              "documentation": "@notice Returns the storage, major, minor, and patch version of the contract.\n@return Storage version of the contract.\n@return Major version of the contract.\n@return Minor version of the contract.\n@return Patch version of the contract.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getVersionNumber",
              "scope": 10805,
              "stateMutability": "pure",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 10385,
                "name": "ParameterList",
                "src": "2112:2:34"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 10402,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 10386,
                        "name": "ElementaryTypeName",
                        "src": "2138:7:34"
                      }
                    ],
                    "id": 10387,
                    "name": "VariableDeclaration",
                    "src": "2138:7:34"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 10402,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 10388,
                        "name": "ElementaryTypeName",
                        "src": "2147:7:34"
                      }
                    ],
                    "id": 10389,
                    "name": "VariableDeclaration",
                    "src": "2147:7:34"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 10402,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 10390,
                        "name": "ElementaryTypeName",
                        "src": "2156:7:34"
                      }
                    ],
                    "id": 10391,
                    "name": "VariableDeclaration",
                    "src": "2156:7:34"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 10402,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 10392,
                        "name": "ElementaryTypeName",
                        "src": "2165:7:34"
                      }
                    ],
                    "id": 10393,
                    "name": "VariableDeclaration",
                    "src": "2165:7:34"
                  }
                ],
                "id": 10394,
                "name": "ParameterList",
                "src": "2137:36:34"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 10394
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "type": "tuple(int_const 1,int_const 1,int_const 0,int_const 0)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 10395,
                            "name": "Literal",
                            "src": "2188:1:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 10396,
                            "name": "Literal",
                            "src": "2191:1:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 10397,
                            "name": "Literal",
                            "src": "2194:1:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 10398,
                            "name": "Literal",
                            "src": "2197:1:34"
                          }
                        ],
                        "id": 10399,
                        "name": "TupleExpression",
                        "src": "2187:12:34"
                      }
                    ],
                    "id": 10400,
                    "name": "Return",
                    "src": "2180:19:34"
                  }
                ],
                "id": 10401,
                "name": "Block",
                "src": "2174:30:34"
              }
            ],
            "id": 10402,
            "name": "FunctionDefinition",
            "src": "2087:117:34"
          },
          {
            "attributes": {
              "documentation": "@notice Allows owner to set the router for a token.\n@param token Address of the token to set.\n@param router The new router.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "setRouter",
              "scope": 10805,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "token",
                      "scope": 10417,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 10403,
                        "name": "ElementaryTypeName",
                        "src": "2382:7:34"
                      }
                    ],
                    "id": 10404,
                    "name": "VariableDeclaration",
                    "src": "2382:13:34"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "router",
                      "scope": 10417,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 10405,
                        "name": "ElementaryTypeName",
                        "src": "2397:7:34"
                      }
                    ],
                    "id": 10406,
                    "name": "VariableDeclaration",
                    "src": "2397:14:34"
                  }
                ],
                "id": 10407,
                "name": "ParameterList",
                "src": "2381:31:34"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 10410,
                "name": "ParameterList",
                "src": "2432:0:34"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 414,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 10408,
                    "name": "Identifier",
                    "src": "2422:9:34"
                  }
                ],
                "id": 10409,
                "name": "ModifierInvocation",
                "src": "2422:9:34"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10457,
                              "type": "function (address,address)",
                              "value": "_setRouter"
                            },
                            "id": 10411,
                            "name": "Identifier",
                            "src": "2438:10:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10404,
                              "type": "address",
                              "value": "token"
                            },
                            "id": 10412,
                            "name": "Identifier",
                            "src": "2449:5:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10406,
                              "type": "address",
                              "value": "router"
                            },
                            "id": 10413,
                            "name": "Identifier",
                            "src": "2456:6:34"
                          }
                        ],
                        "id": 10414,
                        "name": "FunctionCall",
                        "src": "2438:25:34"
                      }
                    ],
                    "id": 10415,
                    "name": "ExpressionStatement",
                    "src": "2438:25:34"
                  }
                ],
                "id": 10416,
                "name": "Block",
                "src": "2432:36:34"
              }
            ],
            "id": 10417,
            "name": "FunctionDefinition",
            "src": "2363:105:34"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_setRouter",
              "scope": 10805,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "private"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "token",
                      "scope": 10457,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 10418,
                        "name": "ElementaryTypeName",
                        "src": "2492:7:34"
                      }
                    ],
                    "id": 10419,
                    "name": "VariableDeclaration",
                    "src": "2492:13:34"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "router",
                      "scope": 10457,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 10420,
                        "name": "ElementaryTypeName",
                        "src": "2507:7:34"
                      }
                    ],
                    "id": 10421,
                    "name": "VariableDeclaration",
                    "src": "2507:14:34"
                  }
                ],
                "id": 10422,
                "name": "ParameterList",
                "src": "2491:31:34"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 10423,
                "name": "ParameterList",
                "src": "2531:0:34"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_7e073122cf0233ae9f99ba80dc2df44411bc03b8e06ae4546f19ee9c47e5c76d",
                                  "typeString": "literal_string \"Router can't be address zero\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59219,
                                59220
                              ],
                              "referencedDeclaration": 59220,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 10424,
                            "name": "Identifier",
                            "src": "2537:7:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10421,
                                  "type": "address",
                                  "value": "router"
                                },
                                "id": 10425,
                                "name": "Identifier",
                                "src": "2545:6:34"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)",
                                      "value": "address"
                                    },
                                    "id": 10426,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "2555:7:34"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 10427,
                                    "name": "Literal",
                                    "src": "2563:1:34"
                                  }
                                ],
                                "id": 10428,
                                "name": "FunctionCall",
                                "src": "2555:10:34"
                              }
                            ],
                            "id": 10429,
                            "name": "BinaryOperation",
                            "src": "2545:20:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "526f757465722063616e27742062652061646472657373207a65726f",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Router can't be address zero\"",
                              "value": "Router can't be address zero"
                            },
                            "id": 10430,
                            "name": "Literal",
                            "src": "2567:30:34"
                          }
                        ],
                        "id": 10431,
                        "name": "FunctionCall",
                        "src": "2537:61:34"
                      }
                    ],
                    "id": 10432,
                    "name": "ExpressionStatement",
                    "src": "2537:61:34"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "add",
                              "referencedDeclaration": 1294,
                              "type": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct EnumerableSet.AddressSet storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10347,
                                      "type": "mapping(address => struct EnumerableSet.AddressSet storage ref)",
                                      "value": "routerAddresses"
                                    },
                                    "id": 10433,
                                    "name": "Identifier",
                                    "src": "2604:15:34"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10419,
                                      "type": "address",
                                      "value": "token"
                                    },
                                    "id": 10434,
                                    "name": "Identifier",
                                    "src": "2620:5:34"
                                  }
                                ],
                                "id": 10435,
                                "name": "IndexAccess",
                                "src": "2604:22:34"
                              }
                            ],
                            "id": 10436,
                            "name": "MemberAccess",
                            "src": "2604:26:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10421,
                              "type": "address",
                              "value": "router"
                            },
                            "id": 10437,
                            "name": "Identifier",
                            "src": "2631:6:34"
                          }
                        ],
                        "id": 10438,
                        "name": "FunctionCall",
                        "src": "2604:34:34"
                      }
                    ],
                    "id": 10439,
                    "name": "ExpressionStatement",
                    "src": "2604:34:34"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_1b57133d444395eb498ab77bc7d3dc0bf20553812af7305101bcd7fa5a8e8575",
                                  "typeString": "literal_string \"Max number of routers reached\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59219,
                                59220
                              ],
                              "referencedDeclaration": 59220,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 10440,
                            "name": "Identifier",
                            "src": "2644:7:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "length",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "values",
                                      "referencedDeclaration": 1259,
                                      "type": "address[] storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct EnumerableSet.AddressSet storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 10347,
                                              "type": "mapping(address => struct EnumerableSet.AddressSet storage ref)",
                                              "value": "routerAddresses"
                                            },
                                            "id": 10441,
                                            "name": "Identifier",
                                            "src": "2659:15:34"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 10419,
                                              "type": "address",
                                              "value": "token"
                                            },
                                            "id": 10442,
                                            "name": "Identifier",
                                            "src": "2675:5:34"
                                          }
                                        ],
                                        "id": 10443,
                                        "name": "IndexAccess",
                                        "src": "2659:22:34"
                                      }
                                    ],
                                    "id": 10444,
                                    "name": "MemberAccess",
                                    "src": "2659:29:34"
                                  }
                                ],
                                "id": 10445,
                                "name": "MemberAccess",
                                "src": "2659:36:34"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10343,
                                  "type": "uint256",
                                  "value": "MAX_NUMBER_ROUTERS_PER_TOKEN"
                                },
                                "id": 10446,
                                "name": "Identifier",
                                "src": "2699:28:34"
                              }
                            ],
                            "id": 10447,
                            "name": "BinaryOperation",
                            "src": "2659:68:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4d6178206e756d626572206f6620726f75746572732072656163686564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Max number of routers reached\"",
                              "value": "Max number of routers reached"
                            },
                            "id": 10448,
                            "name": "Literal",
                            "src": "2735:31:34"
                          }
                        ],
                        "id": 10449,
                        "name": "FunctionCall",
                        "src": "2644:128:34"
                      }
                    ],
                    "id": 10450,
                    "name": "ExpressionStatement",
                    "src": "2644:128:34"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10365,
                              "type": "function (address,address)",
                              "value": "RouterAddressSet"
                            },
                            "id": 10451,
                            "name": "Identifier",
                            "src": "2783:16:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10419,
                              "type": "address",
                              "value": "token"
                            },
                            "id": 10452,
                            "name": "Identifier",
                            "src": "2800:5:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10421,
                              "type": "address",
                              "value": "router"
                            },
                            "id": 10453,
                            "name": "Identifier",
                            "src": "2807:6:34"
                          }
                        ],
                        "id": 10454,
                        "name": "FunctionCall",
                        "src": "2783:31:34"
                      }
                    ],
                    "id": 10455,
                    "name": "EmitStatement",
                    "src": "2778:36:34"
                  }
                ],
                "id": 10456,
                "name": "Block",
                "src": "2531:288:34"
              }
            ],
            "id": 10457,
            "name": "FunctionDefinition",
            "src": "2472:347:34"
          },
          {
            "attributes": {
              "documentation": "@notice Allows owner to remove a router for a token.\n@param token Address of the token.\n@param router Address of the router to remove.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "removeRouter",
              "scope": 10805,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "token",
                      "scope": 10479,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 10458,
                        "name": "ElementaryTypeName",
                        "src": "3011:7:34"
                      }
                    ],
                    "id": 10459,
                    "name": "VariableDeclaration",
                    "src": "3011:13:34"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "router",
                      "scope": 10479,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 10460,
                        "name": "ElementaryTypeName",
                        "src": "3026:7:34"
                      }
                    ],
                    "id": 10461,
                    "name": "VariableDeclaration",
                    "src": "3026:14:34"
                  }
                ],
                "id": 10462,
                "name": "ParameterList",
                "src": "3010:31:34"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 10465,
                "name": "ParameterList",
                "src": "3061:0:34"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 414,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 10463,
                    "name": "Identifier",
                    "src": "3051:9:34"
                  }
                ],
                "id": 10464,
                "name": "ModifierInvocation",
                "src": "3051:9:34"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "remove",
                              "referencedDeclaration": 1375,
                              "type": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct EnumerableSet.AddressSet storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10347,
                                      "type": "mapping(address => struct EnumerableSet.AddressSet storage ref)",
                                      "value": "routerAddresses"
                                    },
                                    "id": 10466,
                                    "name": "Identifier",
                                    "src": "3067:15:34"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10459,
                                      "type": "address",
                                      "value": "token"
                                    },
                                    "id": 10467,
                                    "name": "Identifier",
                                    "src": "3083:5:34"
                                  }
                                ],
                                "id": 10468,
                                "name": "IndexAccess",
                                "src": "3067:22:34"
                              }
                            ],
                            "id": 10469,
                            "name": "MemberAccess",
                            "src": "3067:29:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10461,
                              "type": "address",
                              "value": "router"
                            },
                            "id": 10470,
                            "name": "Identifier",
                            "src": "3097:6:34"
                          }
                        ],
                        "id": 10471,
                        "name": "FunctionCall",
                        "src": "3067:37:34"
                      }
                    ],
                    "id": 10472,
                    "name": "ExpressionStatement",
                    "src": "3067:37:34"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10371,
                              "type": "function (address,address)",
                              "value": "RouterAddressRemoved"
                            },
                            "id": 10473,
                            "name": "Identifier",
                            "src": "3115:20:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10459,
                              "type": "address",
                              "value": "token"
                            },
                            "id": 10474,
                            "name": "Identifier",
                            "src": "3136:5:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10461,
                              "type": "address",
                              "value": "router"
                            },
                            "id": 10475,
                            "name": "Identifier",
                            "src": "3143:6:34"
                          }
                        ],
                        "id": 10476,
                        "name": "FunctionCall",
                        "src": "3115:35:34"
                      }
                    ],
                    "id": 10477,
                    "name": "EmitStatement",
                    "src": "3110:40:34"
                  }
                ],
                "id": 10478,
                "name": "Block",
                "src": "3061:94:34"
              }
            ],
            "id": 10479,
            "name": "FunctionDefinition",
            "src": "2989:166:34"
          },
          {
            "attributes": {
              "documentation": "@notice Get the list of routers for a token.\n@param token The address of the token to query.\n@return An array of all the allowed router.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getRoutersForToken",
              "scope": 10805,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "token",
                      "scope": 10493,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 10480,
                        "name": "ElementaryTypeName",
                        "src": "3355:7:34"
                      }
                    ],
                    "id": 10481,
                    "name": "VariableDeclaration",
                    "src": "3355:13:34"
                  }
                ],
                "id": 10482,
                "name": "ParameterList",
                "src": "3354:15:34"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 10493,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "address[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "address[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 10483,
                            "name": "ElementaryTypeName",
                            "src": "3393:7:34"
                          }
                        ],
                        "id": 10484,
                        "name": "ArrayTypeName",
                        "src": "3393:9:34"
                      }
                    ],
                    "id": 10485,
                    "name": "VariableDeclaration",
                    "src": "3393:16:34"
                  }
                ],
                "id": 10486,
                "name": "ParameterList",
                "src": "3392:18:34"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 10486
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "values",
                          "referencedDeclaration": 1259,
                          "type": "address[] storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "struct EnumerableSet.AddressSet storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10347,
                                  "type": "mapping(address => struct EnumerableSet.AddressSet storage ref)",
                                  "value": "routerAddresses"
                                },
                                "id": 10487,
                                "name": "Identifier",
                                "src": "3424:15:34"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10481,
                                  "type": "address",
                                  "value": "token"
                                },
                                "id": 10488,
                                "name": "Identifier",
                                "src": "3440:5:34"
                              }
                            ],
                            "id": 10489,
                            "name": "IndexAccess",
                            "src": "3424:22:34"
                          }
                        ],
                        "id": 10490,
                        "name": "MemberAccess",
                        "src": "3424:29:34"
                      }
                    ],
                    "id": 10491,
                    "name": "Return",
                    "src": "3417:36:34"
                  }
                ],
                "id": 10492,
                "name": "Block",
                "src": "3411:47:34"
              }
            ],
            "id": 10493,
            "name": "FunctionDefinition",
            "src": "3327:131:34"
          },
          {
            "attributes": {
              "documentation": "@dev Calculates the minimum amount of tokens that can be received for a given amount of sell tokens, \ntaking into account the slippage and the rates of the sell token and CELO token on the Uniswap V2 pair.\n@param sellTokenAddress The address of the sell token.\n@param maxSlippage The maximum slippage allowed.\n@param amount The amount of sell tokens to be traded.\n@param bestRouter The Uniswap V2 router with the best price.\n@return The minimum amount of tokens that can be received.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "calculateAllMinAmount",
              "scope": 10805,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "private"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "sellTokenAddress",
                      "scope": 10597,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 10494,
                        "name": "ElementaryTypeName",
                        "src": "4027:7:34"
                      }
                    ],
                    "id": 10495,
                    "name": "VariableDeclaration",
                    "src": "4027:24:34"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "maxSlippage",
                      "scope": 10597,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 10496,
                        "name": "ElementaryTypeName",
                        "src": "4057:7:34"
                      }
                    ],
                    "id": 10497,
                    "name": "VariableDeclaration",
                    "src": "4057:19:34"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "amount",
                      "scope": 10597,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 10498,
                        "name": "ElementaryTypeName",
                        "src": "4082:7:34"
                      }
                    ],
                    "id": 10499,
                    "name": "VariableDeclaration",
                    "src": "4082:14:34"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "bestRouter",
                      "scope": 10597,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract IUniswapV2RouterMin",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "IUniswapV2RouterMin",
                          "referencedDeclaration": 54261,
                          "type": "contract IUniswapV2RouterMin"
                        },
                        "id": 10500,
                        "name": "UserDefinedTypeName",
                        "src": "4102:19:34"
                      }
                    ],
                    "id": 10501,
                    "name": "VariableDeclaration",
                    "src": "4102:30:34"
                  }
                ],
                "id": 10502,
                "name": "ParameterList",
                "src": "4021:115:34"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 10597,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 10503,
                        "name": "ElementaryTypeName",
                        "src": "4159:7:34"
                      }
                    ],
                    "id": 10504,
                    "name": "VariableDeclaration",
                    "src": "4159:7:34"
                  }
                ],
                "id": 10505,
                "name": "ParameterList",
                "src": "4158:9:34"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        10507
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "sortedOracles",
                          "scope": 10596,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract ISortedOracles",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "ISortedOracles",
                              "referencedDeclaration": 52848,
                              "type": "contract ISortedOracles"
                            },
                            "id": 10506,
                            "name": "UserDefinedTypeName",
                            "src": "4174:14:34"
                          }
                        ],
                        "id": 10507,
                        "name": "VariableDeclaration",
                        "src": "4174:28:34"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "contract ISortedOracles",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 11840,
                              "type": "function () view returns (contract ISortedOracles)",
                              "value": "getSortedOracles"
                            },
                            "id": 10508,
                            "name": "Identifier",
                            "src": "4205:16:34"
                          }
                        ],
                        "id": 10509,
                        "name": "FunctionCall",
                        "src": "4205:18:34"
                      }
                    ],
                    "id": 10510,
                    "name": "VariableDeclarationStatement",
                    "src": "4174:49:34"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        10512
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "minReports",
                          "scope": 10596,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 10511,
                            "name": "ElementaryTypeName",
                            "src": "4229:7:34"
                          }
                        ],
                        "id": 10512,
                        "name": "VariableDeclaration",
                        "src": "4229:18:34"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6030,
                              "type": "mapping(address => uint256)",
                              "value": "minimumReports"
                            },
                            "id": 10513,
                            "name": "Identifier",
                            "src": "4250:14:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10495,
                              "type": "address",
                              "value": "sellTokenAddress"
                            },
                            "id": 10514,
                            "name": "Identifier",
                            "src": "4265:16:34"
                          }
                        ],
                        "id": 10515,
                        "name": "IndexAccess",
                        "src": "4250:32:34"
                      }
                    ],
                    "id": 10516,
                    "name": "VariableDeclarationStatement",
                    "src": "4229:53:34"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_95b70a67b6f90bd4b4b99001501d6b791eaef597a8ec562443faa4204f719fe0",
                                  "typeString": "literal_string \"Number of reports for token not enough\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59219,
                                59220
                              ],
                              "referencedDeclaration": 59220,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 10517,
                            "name": "Identifier",
                            "src": "4289:7:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "numRates",
                                      "referencedDeclaration": 52824,
                                      "type": "function (address) view external returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 10507,
                                          "type": "contract ISortedOracles",
                                          "value": "sortedOracles"
                                        },
                                        "id": 10518,
                                        "name": "Identifier",
                                        "src": "4304:13:34"
                                      }
                                    ],
                                    "id": 10519,
                                    "name": "MemberAccess",
                                    "src": "4304:22:34"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10495,
                                      "type": "address",
                                      "value": "sellTokenAddress"
                                    },
                                    "id": 10520,
                                    "name": "Identifier",
                                    "src": "4327:16:34"
                                  }
                                ],
                                "id": 10521,
                                "name": "FunctionCall",
                                "src": "4304:40:34"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10512,
                                  "type": "uint256",
                                  "value": "minReports"
                                },
                                "id": 10522,
                                "name": "Identifier",
                                "src": "4348:10:34"
                              }
                            ],
                            "id": 10523,
                            "name": "BinaryOperation",
                            "src": "4304:54:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4e756d626572206f66207265706f72747320666f7220746f6b656e206e6f7420656e6f756768",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Number of reports for token not enough\"",
                              "value": "Number of reports for token not enough"
                            },
                            "id": 10524,
                            "name": "Literal",
                            "src": "4366:40:34"
                          }
                        ],
                        "id": 10525,
                        "name": "FunctionCall",
                        "src": "4289:123:34"
                      }
                    ],
                    "id": 10526,
                    "name": "ExpressionStatement",
                    "src": "4289:123:34"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        10528
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "minimalSortedOracles",
                          "scope": 10596,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 10527,
                            "name": "ElementaryTypeName",
                            "src": "4419:7:34"
                          }
                        ],
                        "id": 10528,
                        "name": "VariableDeclaration",
                        "src": "4419:28:34"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "30",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "number",
                          "type": "int_const 0",
                          "value": "0"
                        },
                        "id": 10529,
                        "name": "Literal",
                        "src": "4450:1:34"
                      }
                    ],
                    "id": 10530,
                    "name": "VariableDeclarationStatement",
                    "src": "4419:32:34"
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": ">",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10512,
                              "type": "uint256",
                              "value": "minReports"
                            },
                            "id": 10531,
                            "name": "Identifier",
                            "src": "4541:10:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 10532,
                            "name": "Literal",
                            "src": "4554:1:34"
                          }
                        ],
                        "id": 10533,
                        "name": "BinaryOperation",
                        "src": "4541:14:34"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "assignments": [
                                10535,
                                10537
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "rateNumerator",
                                  "scope": 10552,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "uint256",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 10534,
                                    "name": "ElementaryTypeName",
                                    "src": "4566:7:34"
                                  }
                                ],
                                "id": 10535,
                                "name": "VariableDeclaration",
                                "src": "4566:21:34"
                              },
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "rateDenominator",
                                  "scope": 10552,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "uint256",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 10536,
                                    "name": "ElementaryTypeName",
                                    "src": "4589:7:34"
                                  }
                                ],
                                "id": 10537,
                                "name": "VariableDeclaration",
                                "src": "4589:23:34"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple(uint256,uint256)",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "medianRate",
                                      "referencedDeclaration": 52833,
                                      "type": "function (address) view external returns (uint256,uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 10507,
                                          "type": "contract ISortedOracles",
                                          "value": "sortedOracles"
                                        },
                                        "id": 10538,
                                        "name": "Identifier",
                                        "src": "4616:13:34"
                                      }
                                    ],
                                    "id": 10539,
                                    "name": "MemberAccess",
                                    "src": "4616:24:34"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10495,
                                      "type": "address",
                                      "value": "sellTokenAddress"
                                    },
                                    "id": 10540,
                                    "name": "Identifier",
                                    "src": "4641:16:34"
                                  }
                                ],
                                "id": 10541,
                                "name": "FunctionCall",
                                "src": "4616:42:34"
                              }
                            ],
                            "id": 10542,
                            "name": "VariableDeclarationStatement",
                            "src": "4565:93:34"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10528,
                                      "type": "uint256",
                                      "value": "minimalSortedOracles"
                                    },
                                    "id": 10543,
                                    "name": "Identifier",
                                    "src": "4667:20:34"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "uint256",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 6187,
                                          "type": "function (uint256,uint256,uint256,uint256) pure returns (uint256)",
                                          "value": "calculateMinAmount"
                                        },
                                        "id": 10544,
                                        "name": "Identifier",
                                        "src": "4690:18:34"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 10535,
                                          "type": "uint256",
                                          "value": "rateNumerator"
                                        },
                                        "id": 10545,
                                        "name": "Identifier",
                                        "src": "4718:13:34"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 10537,
                                          "type": "uint256",
                                          "value": "rateDenominator"
                                        },
                                        "id": 10546,
                                        "name": "Identifier",
                                        "src": "4741:15:34"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 10499,
                                          "type": "uint256",
                                          "value": "amount"
                                        },
                                        "id": 10547,
                                        "name": "Identifier",
                                        "src": "4766:6:34"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 10497,
                                          "type": "uint256",
                                          "value": "maxSlippage"
                                        },
                                        "id": 10548,
                                        "name": "Identifier",
                                        "src": "4782:11:34"
                                      }
                                    ],
                                    "id": 10549,
                                    "name": "FunctionCall",
                                    "src": "4690:111:34"
                                  }
                                ],
                                "id": 10550,
                                "name": "Assignment",
                                "src": "4667:134:34"
                              }
                            ],
                            "id": 10551,
                            "name": "ExpressionStatement",
                            "src": "4667:134:34"
                          }
                        ],
                        "id": 10552,
                        "name": "Block",
                        "src": "4557:251:34"
                      }
                    ],
                    "id": 10553,
                    "name": "IfStatement",
                    "src": "4537:271:34"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        10555
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "celoToken",
                          "scope": 10596,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract IERC20",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "IERC20",
                              "referencedDeclaration": 955,
                              "type": "contract IERC20"
                            },
                            "id": 10554,
                            "name": "UserDefinedTypeName",
                            "src": "4814:6:34"
                          }
                        ],
                        "id": 10555,
                        "name": "VariableDeclaration",
                        "src": "4814:16:34"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "contract IERC20",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 11775,
                              "type": "function () view returns (contract IERC20)",
                              "value": "getGoldToken"
                            },
                            "id": 10556,
                            "name": "Identifier",
                            "src": "4833:12:34"
                          }
                        ],
                        "id": 10557,
                        "name": "FunctionCall",
                        "src": "4833:14:34"
                      }
                    ],
                    "id": 10558,
                    "name": "VariableDeclarationStatement",
                    "src": "4814:33:34"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        10560
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "pair",
                          "scope": 10596,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 10559,
                            "name": "ElementaryTypeName",
                            "src": "4853:7:34"
                          }
                        ],
                        "id": 10560,
                        "name": "VariableDeclaration",
                        "src": "4853:12:34"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "address",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "getPair",
                              "referencedDeclaration": 53592,
                              "type": "function (address,address) view external returns (address)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "contract IUniswapV2FactoryMin",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 53593,
                                      "type": "type(contract IUniswapV2FactoryMin)",
                                      "value": "IUniswapV2FactoryMin"
                                    },
                                    "id": 10561,
                                    "name": "Identifier",
                                    "src": "4868:20:34"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "address",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "factory",
                                          "referencedDeclaration": 54232,
                                          "type": "function () pure external returns (address)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 10501,
                                              "type": "contract IUniswapV2RouterMin",
                                              "value": "bestRouter"
                                            },
                                            "id": 10562,
                                            "name": "Identifier",
                                            "src": "4889:10:34"
                                          }
                                        ],
                                        "id": 10563,
                                        "name": "MemberAccess",
                                        "src": "4889:18:34"
                                      }
                                    ],
                                    "id": 10564,
                                    "name": "FunctionCall",
                                    "src": "4889:20:34"
                                  }
                                ],
                                "id": 10565,
                                "name": "FunctionCall",
                                "src": "4868:42:34"
                              }
                            ],
                            "id": 10566,
                            "name": "MemberAccess",
                            "src": "4868:50:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10495,
                              "type": "address",
                              "value": "sellTokenAddress"
                            },
                            "id": 10567,
                            "name": "Identifier",
                            "src": "4926:16:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$955",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)",
                                  "value": "address"
                                },
                                "id": 10568,
                                "name": "ElementaryTypeNameExpression",
                                "src": "4950:7:34"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10555,
                                  "type": "contract IERC20",
                                  "value": "celoToken"
                                },
                                "id": 10569,
                                "name": "Identifier",
                                "src": "4958:9:34"
                              }
                            ],
                            "id": 10570,
                            "name": "FunctionCall",
                            "src": "4950:18:34"
                          }
                        ],
                        "id": 10571,
                        "name": "FunctionCall",
                        "src": "4868:106:34"
                      }
                    ],
                    "id": 10572,
                    "name": "VariableDeclarationStatement",
                    "src": "4853:121:34"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        10574
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "minAmountPair",
                          "scope": 10596,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 10573,
                            "name": "ElementaryTypeName",
                            "src": "4980:7:34"
                          }
                        ],
                        "id": 10574,
                        "name": "VariableDeclaration",
                        "src": "4980:21:34"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6187,
                              "type": "function (uint256,uint256,uint256,uint256) pure returns (uint256)",
                              "value": "calculateMinAmount"
                            },
                            "id": 10575,
                            "name": "Identifier",
                            "src": "5004:18:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "balanceOf",
                                  "referencedDeclaration": 900,
                                  "type": "function (address) view external returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "contract IERC20",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 955,
                                          "type": "type(contract IERC20)",
                                          "value": "IERC20"
                                        },
                                        "id": 10576,
                                        "name": "Identifier",
                                        "src": "5030:6:34"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 10495,
                                          "type": "address",
                                          "value": "sellTokenAddress"
                                        },
                                        "id": 10577,
                                        "name": "Identifier",
                                        "src": "5037:16:34"
                                      }
                                    ],
                                    "id": 10578,
                                    "name": "FunctionCall",
                                    "src": "5030:24:34"
                                  }
                                ],
                                "id": 10579,
                                "name": "MemberAccess",
                                "src": "5030:34:34"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10560,
                                  "type": "address",
                                  "value": "pair"
                                },
                                "id": 10580,
                                "name": "Identifier",
                                "src": "5065:4:34"
                              }
                            ],
                            "id": 10581,
                            "name": "FunctionCall",
                            "src": "5030:40:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "balanceOf",
                                  "referencedDeclaration": 900,
                                  "type": "function (address) view external returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10555,
                                      "type": "contract IERC20",
                                      "value": "celoToken"
                                    },
                                    "id": 10582,
                                    "name": "Identifier",
                                    "src": "5078:9:34"
                                  }
                                ],
                                "id": 10583,
                                "name": "MemberAccess",
                                "src": "5078:19:34"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10560,
                                  "type": "address",
                                  "value": "pair"
                                },
                                "id": 10584,
                                "name": "Identifier",
                                "src": "5098:4:34"
                              }
                            ],
                            "id": 10585,
                            "name": "FunctionCall",
                            "src": "5078:25:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10499,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 10586,
                            "name": "Identifier",
                            "src": "5111:6:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10497,
                              "type": "uint256",
                              "value": "maxSlippage"
                            },
                            "id": 10587,
                            "name": "Identifier",
                            "src": "5125:11:34"
                          }
                        ],
                        "id": 10588,
                        "name": "FunctionCall",
                        "src": "5004:138:34"
                      }
                    ],
                    "id": 10589,
                    "name": "VariableDeclarationStatement",
                    "src": "4980:162:34"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 10505
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "max",
                              "referencedDeclaration": 126,
                              "type": "function (uint256,uint256) pure returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 176,
                                  "type": "type(library Math)",
                                  "value": "Math"
                                },
                                "id": 10590,
                                "name": "Identifier",
                                "src": "5156:4:34"
                              }
                            ],
                            "id": 10591,
                            "name": "MemberAccess",
                            "src": "5156:8:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10574,
                              "type": "uint256",
                              "value": "minAmountPair"
                            },
                            "id": 10592,
                            "name": "Identifier",
                            "src": "5165:13:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10528,
                              "type": "uint256",
                              "value": "minimalSortedOracles"
                            },
                            "id": 10593,
                            "name": "Identifier",
                            "src": "5180:20:34"
                          }
                        ],
                        "id": 10594,
                        "name": "FunctionCall",
                        "src": "5156:45:34"
                      }
                    ],
                    "id": 10595,
                    "name": "Return",
                    "src": "5149:52:34"
                  }
                ],
                "id": 10596,
                "name": "Block",
                "src": "4168:1038:34"
              }
            ],
            "id": 10597,
            "name": "FunctionDefinition",
            "src": "3991:1215:34"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "sell",
              "scope": 10805,
              "stateMutability": "nonpayable",
              "superFunction": 12786,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "sellTokenAddress",
                      "scope": 10804,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 10598,
                        "name": "ElementaryTypeName",
                        "src": "5327:7:34"
                      }
                    ],
                    "id": 10599,
                    "name": "VariableDeclaration",
                    "src": "5327:24:34"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "buyTokenAddress",
                      "scope": 10804,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 10600,
                        "name": "ElementaryTypeName",
                        "src": "5357:7:34"
                      }
                    ],
                    "id": 10601,
                    "name": "VariableDeclaration",
                    "src": "5357:23:34"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "amount",
                      "scope": 10804,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 10602,
                        "name": "ElementaryTypeName",
                        "src": "5386:7:34"
                      }
                    ],
                    "id": 10603,
                    "name": "VariableDeclaration",
                    "src": "5386:14:34"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "maxSlippage",
                      "scope": 10804,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 10604,
                        "name": "ElementaryTypeName",
                        "src": "5406:7:34"
                      }
                    ],
                    "id": 10605,
                    "name": "VariableDeclaration",
                    "src": "5406:19:34"
                  }
                ],
                "id": 10606,
                "name": "ParameterList",
                "src": "5321:124:34"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 10804,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 10607,
                        "name": "ElementaryTypeName",
                        "src": "5464:7:34"
                      }
                    ],
                    "id": 10608,
                    "name": "VariableDeclaration",
                    "src": "5464:7:34"
                  }
                ],
                "id": 10609,
                "name": "ParameterList",
                "src": "5463:9:34"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_e67027ddace3b13a3c1798b88643976b0c365b6eabe047620c9ccbbe70a5cd62",
                                  "typeString": "literal_string \"Buy token can only be gold token\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59219,
                                59220
                              ],
                              "referencedDeclaration": 59220,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 10610,
                            "name": "Identifier",
                            "src": "5479:7:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10601,
                                  "type": "address",
                                  "value": "buyTokenAddress"
                                },
                                "id": 10611,
                                "name": "Identifier",
                                "src": "5494:15:34"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "getAddressForOrDie",
                                      "referencedDeclaration": 12926,
                                      "type": "function (bytes32) view external returns (address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 11623,
                                          "type": "contract IRegistry",
                                          "value": "registry"
                                        },
                                        "id": 10612,
                                        "name": "Identifier",
                                        "src": "5513:8:34"
                                      }
                                    ],
                                    "id": 10613,
                                    "name": "MemberAccess",
                                    "src": "5513:27:34"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 11557,
                                      "type": "bytes32",
                                      "value": "GOLD_TOKEN_REGISTRY_ID"
                                    },
                                    "id": 10614,
                                    "name": "Identifier",
                                    "src": "5541:22:34"
                                  }
                                ],
                                "id": 10615,
                                "name": "FunctionCall",
                                "src": "5513:51:34"
                              }
                            ],
                            "id": 10616,
                            "name": "BinaryOperation",
                            "src": "5494:70:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "42757920746f6b656e2063616e206f6e6c7920626520676f6c6420746f6b656e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Buy token can only be gold token\"",
                              "value": "Buy token can only be gold token"
                            },
                            "id": 10617,
                            "name": "Literal",
                            "src": "5572:34:34"
                          }
                        ],
                        "id": 10618,
                        "name": "FunctionCall",
                        "src": "5479:133:34"
                      }
                    ],
                    "id": 10619,
                    "name": "ExpressionStatement",
                    "src": "5479:133:34"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_165e0bf8f1f6e56e3848d98e23d10c9a84f2724a3f4accb4951f747933b71c01",
                                  "typeString": "literal_string \"routerAddresses should be non empty\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59219,
                                59220
                              ],
                              "referencedDeclaration": 59220,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 10620,
                            "name": "Identifier",
                            "src": "5619:7:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "length",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "values",
                                      "referencedDeclaration": 1259,
                                      "type": "address[] storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct EnumerableSet.AddressSet storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 10347,
                                              "type": "mapping(address => struct EnumerableSet.AddressSet storage ref)",
                                              "value": "routerAddresses"
                                            },
                                            "id": 10621,
                                            "name": "Identifier",
                                            "src": "5634:15:34"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 10599,
                                              "type": "address",
                                              "value": "sellTokenAddress"
                                            },
                                            "id": 10622,
                                            "name": "Identifier",
                                            "src": "5650:16:34"
                                          }
                                        ],
                                        "id": 10623,
                                        "name": "IndexAccess",
                                        "src": "5634:33:34"
                                      }
                                    ],
                                    "id": 10624,
                                    "name": "MemberAccess",
                                    "src": "5634:40:34"
                                  }
                                ],
                                "id": 10625,
                                "name": "MemberAccess",
                                "src": "5634:47:34"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 10626,
                                "name": "Literal",
                                "src": "5684:1:34"
                              }
                            ],
                            "id": 10627,
                            "name": "BinaryOperation",
                            "src": "5634:51:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "726f757465724164647265737365732073686f756c64206265206e6f6e20656d707479",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"routerAddresses should be non empty\"",
                              "value": "routerAddresses should be non empty"
                            },
                            "id": 10628,
                            "name": "Literal",
                            "src": "5693:37:34"
                          }
                        ],
                        "id": 10629,
                        "name": "FunctionCall",
                        "src": "5619:117:34"
                      }
                    ],
                    "id": 10630,
                    "name": "ExpressionStatement",
                    "src": "5619:117:34"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        10632
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "celoToken",
                          "scope": 10803,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract IERC20",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "IERC20",
                              "referencedDeclaration": 955,
                              "type": "contract IERC20"
                            },
                            "id": 10631,
                            "name": "UserDefinedTypeName",
                            "src": "5952:6:34"
                          }
                        ],
                        "id": 10632,
                        "name": "VariableDeclaration",
                        "src": "5952:16:34"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "contract IERC20",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 11775,
                              "type": "function () view returns (contract IERC20)",
                              "value": "getGoldToken"
                            },
                            "id": 10633,
                            "name": "Identifier",
                            "src": "5971:12:34"
                          }
                        ],
                        "id": 10634,
                        "name": "FunctionCall",
                        "src": "5971:14:34"
                      }
                    ],
                    "id": 10635,
                    "name": "VariableDeclarationStatement",
                    "src": "5952:33:34"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        10637
                      ],
                      "initialValue": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "bestRouter",
                          "scope": 10803,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract IUniswapV2RouterMin",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "IUniswapV2RouterMin",
                              "referencedDeclaration": 54261,
                              "type": "contract IUniswapV2RouterMin"
                            },
                            "id": 10636,
                            "name": "UserDefinedTypeName",
                            "src": "5992:19:34"
                          }
                        ],
                        "id": 10637,
                        "name": "VariableDeclaration",
                        "src": "5992:30:34"
                      }
                    ],
                    "id": 10638,
                    "name": "VariableDeclarationStatement",
                    "src": "5992:30:34"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        10640
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "bestRouterQuote",
                          "scope": 10803,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 10639,
                            "name": "ElementaryTypeName",
                            "src": "6028:7:34"
                          }
                        ],
                        "id": 10640,
                        "name": "VariableDeclaration",
                        "src": "6028:23:34"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "30",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "number",
                          "type": "int_const 0",
                          "value": "0"
                        },
                        "id": 10641,
                        "name": "Literal",
                        "src": "6054:1:34"
                      }
                    ],
                    "id": 10642,
                    "name": "VariableDeclarationStatement",
                    "src": "6028:27:34"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        10646
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "path",
                          "scope": 10803,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "address[]",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "length": null,
                              "type": "address[]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "address",
                                  "type": "address"
                                },
                                "id": 10644,
                                "name": "ElementaryTypeName",
                                "src": "6062:7:34"
                              }
                            ],
                            "id": 10645,
                            "name": "ArrayTypeName",
                            "src": "6062:9:34"
                          }
                        ],
                        "id": 10646,
                        "name": "VariableDeclaration",
                        "src": "6062:21:34"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "address[] memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "function (uint256) pure returns (address[] memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "length": null,
                                  "type": "address[]"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address",
                                      "stateMutability": "nonpayable",
                                      "type": "address"
                                    },
                                    "id": 10647,
                                    "name": "ElementaryTypeName",
                                    "src": "6090:7:34"
                                  }
                                ],
                                "id": 10648,
                                "name": "ArrayTypeName",
                                "src": "6090:9:34"
                              }
                            ],
                            "id": 10649,
                            "name": "NewExpression",
                            "src": "6086:13:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 10650,
                            "name": "Literal",
                            "src": "6100:1:34"
                          }
                        ],
                        "id": 10651,
                        "name": "FunctionCall",
                        "src": "6086:16:34"
                      }
                    ],
                    "id": 10652,
                    "name": "VariableDeclarationStatement",
                    "src": "6062:40:34"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10646,
                                  "type": "address[] memory",
                                  "value": "path"
                                },
                                "id": 10653,
                                "name": "Identifier",
                                "src": "6109:4:34"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 10654,
                                "name": "Literal",
                                "src": "6114:1:34"
                              }
                            ],
                            "id": 10655,
                            "name": "IndexAccess",
                            "src": "6109:7:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10599,
                              "type": "address",
                              "value": "sellTokenAddress"
                            },
                            "id": 10656,
                            "name": "Identifier",
                            "src": "6119:16:34"
                          }
                        ],
                        "id": 10657,
                        "name": "Assignment",
                        "src": "6109:26:34"
                      }
                    ],
                    "id": 10658,
                    "name": "ExpressionStatement",
                    "src": "6109:26:34"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10646,
                                  "type": "address[] memory",
                                  "value": "path"
                                },
                                "id": 10659,
                                "name": "Identifier",
                                "src": "6141:4:34"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 10660,
                                "name": "Literal",
                                "src": "6146:1:34"
                              }
                            ],
                            "id": 10661,
                            "name": "IndexAccess",
                            "src": "6141:7:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$955",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)",
                                  "value": "address"
                                },
                                "id": 10662,
                                "name": "ElementaryTypeNameExpression",
                                "src": "6151:7:34"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10632,
                                  "type": "contract IERC20",
                                  "value": "celoToken"
                                },
                                "id": 10663,
                                "name": "Identifier",
                                "src": "6159:9:34"
                              }
                            ],
                            "id": 10664,
                            "name": "FunctionCall",
                            "src": "6151:18:34"
                          }
                        ],
                        "id": 10665,
                        "name": "Assignment",
                        "src": "6141:28:34"
                      }
                    ],
                    "id": 10666,
                    "name": "ExpressionStatement",
                    "src": "6141:28:34"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            10668
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "name": "i",
                              "scope": 10726,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 10667,
                                "name": "ElementaryTypeName",
                                "src": "6181:7:34"
                              }
                            ],
                            "id": 10668,
                            "name": "VariableDeclaration",
                            "src": "6181:9:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 10669,
                            "name": "Literal",
                            "src": "6193:1:34"
                          }
                        ],
                        "id": 10670,
                        "name": "VariableDeclarationStatement",
                        "src": "6181:13:34"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10668,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 10671,
                            "name": "Identifier",
                            "src": "6196:1:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "values",
                                  "referencedDeclaration": 1259,
                                  "type": "address[] storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct EnumerableSet.AddressSet storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 10347,
                                          "type": "mapping(address => struct EnumerableSet.AddressSet storage ref)",
                                          "value": "routerAddresses"
                                        },
                                        "id": 10672,
                                        "name": "Identifier",
                                        "src": "6200:15:34"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 10599,
                                          "type": "address",
                                          "value": "sellTokenAddress"
                                        },
                                        "id": 10673,
                                        "name": "Identifier",
                                        "src": "6216:16:34"
                                      }
                                    ],
                                    "id": 10674,
                                    "name": "IndexAccess",
                                    "src": "6200:33:34"
                                  }
                                ],
                                "id": 10675,
                                "name": "MemberAccess",
                                "src": "6200:40:34"
                              }
                            ],
                            "id": 10676,
                            "name": "MemberAccess",
                            "src": "6200:47:34"
                          }
                        ],
                        "id": 10677,
                        "name": "BinaryOperation",
                        "src": "6196:51:34"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10668,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 10678,
                                "name": "Identifier",
                                "src": "6249:1:34"
                              }
                            ],
                            "id": 10679,
                            "name": "UnaryOperation",
                            "src": "6249:3:34"
                          }
                        ],
                        "id": 10680,
                        "name": "ExpressionStatement",
                        "src": "6249:3:34"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "assignments": [
                                10682
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "poolAddress",
                                  "scope": 10725,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "address",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address",
                                      "stateMutability": "nonpayable",
                                      "type": "address"
                                    },
                                    "id": 10681,
                                    "name": "ElementaryTypeName",
                                    "src": "6262:7:34"
                                  }
                                ],
                                "id": 10682,
                                "name": "VariableDeclaration",
                                "src": "6262:19:34"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "get",
                                      "referencedDeclaration": 1464,
                                      "type": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct EnumerableSet.AddressSet storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 10347,
                                              "type": "mapping(address => struct EnumerableSet.AddressSet storage ref)",
                                              "value": "routerAddresses"
                                            },
                                            "id": 10683,
                                            "name": "Identifier",
                                            "src": "6284:15:34"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 10599,
                                              "type": "address",
                                              "value": "sellTokenAddress"
                                            },
                                            "id": 10684,
                                            "name": "Identifier",
                                            "src": "6300:16:34"
                                          }
                                        ],
                                        "id": 10685,
                                        "name": "IndexAccess",
                                        "src": "6284:33:34"
                                      }
                                    ],
                                    "id": 10686,
                                    "name": "MemberAccess",
                                    "src": "6284:37:34"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10668,
                                      "type": "uint256",
                                      "value": "i"
                                    },
                                    "id": 10687,
                                    "name": "Identifier",
                                    "src": "6322:1:34"
                                  }
                                ],
                                "id": 10688,
                                "name": "FunctionCall",
                                "src": "6284:40:34"
                              }
                            ],
                            "id": 10689,
                            "name": "VariableDeclarationStatement",
                            "src": "6262:62:34"
                          },
                          {
                            "attributes": {
                              "assignments": [
                                10691
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "router",
                                  "scope": 10725,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "contract IUniswapV2RouterMin",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "contractScope": null,
                                      "name": "IUniswapV2RouterMin",
                                      "referencedDeclaration": 54261,
                                      "type": "contract IUniswapV2RouterMin"
                                    },
                                    "id": 10690,
                                    "name": "UserDefinedTypeName",
                                    "src": "6332:19:34"
                                  }
                                ],
                                "id": 10691,
                                "name": "VariableDeclaration",
                                "src": "6332:26:34"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "contract IUniswapV2RouterMin",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 54261,
                                      "type": "type(contract IUniswapV2RouterMin)",
                                      "value": "IUniswapV2RouterMin"
                                    },
                                    "id": 10692,
                                    "name": "Identifier",
                                    "src": "6361:19:34"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10682,
                                      "type": "address",
                                      "value": "poolAddress"
                                    },
                                    "id": 10693,
                                    "name": "Identifier",
                                    "src": "6381:11:34"
                                  }
                                ],
                                "id": 10694,
                                "name": "FunctionCall",
                                "src": "6361:32:34"
                              }
                            ],
                            "id": 10695,
                            "name": "VariableDeclarationStatement",
                            "src": "6332:61:34"
                          },
                          {
                            "attributes": {
                              "assignments": [
                                10697
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "wouldGet",
                                  "scope": 10725,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "uint256",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 10696,
                                    "name": "ElementaryTypeName",
                                    "src": "6615:7:34"
                                  }
                                ],
                                "id": 10697,
                                "name": "VariableDeclaration",
                                "src": "6615:16:34"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "uint256[] memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "getAmountsOut",
                                          "referencedDeclaration": 54260,
                                          "type": "function (uint256,address[] memory) view external returns (uint256[] memory)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 10691,
                                              "type": "contract IUniswapV2RouterMin",
                                              "value": "router"
                                            },
                                            "id": 10698,
                                            "name": "Identifier",
                                            "src": "6634:6:34"
                                          }
                                        ],
                                        "id": 10699,
                                        "name": "MemberAccess",
                                        "src": "6634:20:34"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 10603,
                                          "type": "uint256",
                                          "value": "amount"
                                        },
                                        "id": 10700,
                                        "name": "Identifier",
                                        "src": "6655:6:34"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 10646,
                                          "type": "address[] memory",
                                          "value": "path"
                                        },
                                        "id": 10701,
                                        "name": "Identifier",
                                        "src": "6663:4:34"
                                      }
                                    ],
                                    "id": 10702,
                                    "name": "FunctionCall",
                                    "src": "6634:34:34"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "31",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 1",
                                      "value": "1"
                                    },
                                    "id": 10703,
                                    "name": "Literal",
                                    "src": "6669:1:34"
                                  }
                                ],
                                "id": 10704,
                                "name": "IndexAccess",
                                "src": "6634:37:34"
                              }
                            ],
                            "id": 10705,
                            "name": "VariableDeclarationStatement",
                            "src": "6615:56:34"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10355,
                                      "type": "function (address,address,uint256)",
                                      "value": "ReceivedQuote"
                                    },
                                    "id": 10706,
                                    "name": "Identifier",
                                    "src": "6685:13:34"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10599,
                                      "type": "address",
                                      "value": "sellTokenAddress"
                                    },
                                    "id": 10707,
                                    "name": "Identifier",
                                    "src": "6699:16:34"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10682,
                                      "type": "address",
                                      "value": "poolAddress"
                                    },
                                    "id": 10708,
                                    "name": "Identifier",
                                    "src": "6717:11:34"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10697,
                                      "type": "uint256",
                                      "value": "wouldGet"
                                    },
                                    "id": 10709,
                                    "name": "Identifier",
                                    "src": "6730:8:34"
                                  }
                                ],
                                "id": 10710,
                                "name": "FunctionCall",
                                "src": "6685:54:34"
                              }
                            ],
                            "id": 10711,
                            "name": "EmitStatement",
                            "src": "6680:59:34"
                          },
                          {
                            "attributes": {
                              "falseBody": null
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": ">",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10697,
                                      "type": "uint256",
                                      "value": "wouldGet"
                                    },
                                    "id": 10712,
                                    "name": "Identifier",
                                    "src": "6751:8:34"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10640,
                                      "type": "uint256",
                                      "value": "bestRouterQuote"
                                    },
                                    "id": 10713,
                                    "name": "Identifier",
                                    "src": "6762:15:34"
                                  }
                                ],
                                "id": 10714,
                                "name": "BinaryOperation",
                                "src": "6751:26:34"
                              },
                              {
                                "children": [
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 10640,
                                              "type": "uint256",
                                              "value": "bestRouterQuote"
                                            },
                                            "id": 10715,
                                            "name": "Identifier",
                                            "src": "6789:15:34"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 10697,
                                              "type": "uint256",
                                              "value": "wouldGet"
                                            },
                                            "id": 10716,
                                            "name": "Identifier",
                                            "src": "6807:8:34"
                                          }
                                        ],
                                        "id": 10717,
                                        "name": "Assignment",
                                        "src": "6789:26:34"
                                      }
                                    ],
                                    "id": 10718,
                                    "name": "ExpressionStatement",
                                    "src": "6789:26:34"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "contract IUniswapV2RouterMin"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 10637,
                                              "type": "contract IUniswapV2RouterMin",
                                              "value": "bestRouter"
                                            },
                                            "id": 10719,
                                            "name": "Identifier",
                                            "src": "6825:10:34"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 10691,
                                              "type": "contract IUniswapV2RouterMin",
                                              "value": "router"
                                            },
                                            "id": 10720,
                                            "name": "Identifier",
                                            "src": "6838:6:34"
                                          }
                                        ],
                                        "id": 10721,
                                        "name": "Assignment",
                                        "src": "6825:19:34"
                                      }
                                    ],
                                    "id": 10722,
                                    "name": "ExpressionStatement",
                                    "src": "6825:19:34"
                                  }
                                ],
                                "id": 10723,
                                "name": "Block",
                                "src": "6779:74:34"
                              }
                            ],
                            "id": 10724,
                            "name": "IfStatement",
                            "src": "6747:106:34"
                          }
                        ],
                        "id": 10725,
                        "name": "Block",
                        "src": "6254:605:34"
                      }
                    ],
                    "id": 10726,
                    "name": "ForStatement",
                    "src": "6176:683:34"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_8e922fdd17f0dca5c801efce65fb6d53726ba6a56278781a761dc52d89a28b6b",
                                  "typeString": "literal_string \"Can't exchange with zero quote\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59219,
                                59220
                              ],
                              "referencedDeclaration": 59220,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 10727,
                            "name": "Identifier",
                            "src": "6865:7:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10640,
                                  "type": "uint256",
                                  "value": "bestRouterQuote"
                                },
                                "id": 10728,
                                "name": "Identifier",
                                "src": "6873:15:34"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 10729,
                                "name": "Literal",
                                "src": "6892:1:34"
                              }
                            ],
                            "id": 10730,
                            "name": "BinaryOperation",
                            "src": "6873:20:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "43616e27742065786368616e67652077697468207a65726f2071756f7465",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Can't exchange with zero quote\"",
                              "value": "Can't exchange with zero quote"
                            },
                            "id": 10731,
                            "name": "Literal",
                            "src": "6895:32:34"
                          }
                        ],
                        "id": 10732,
                        "name": "FunctionCall",
                        "src": "6865:63:34"
                      }
                    ],
                    "id": 10733,
                    "name": "ExpressionStatement",
                    "src": "6865:63:34"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        10735
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "minAmount",
                          "scope": 10803,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 10734,
                            "name": "ElementaryTypeName",
                            "src": "6935:7:34"
                          }
                        ],
                        "id": 10735,
                        "name": "VariableDeclaration",
                        "src": "6935:17:34"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "30",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "number",
                          "type": "int_const 0",
                          "value": "0"
                        },
                        "id": 10736,
                        "name": "Literal",
                        "src": "6955:1:34"
                      }
                    ],
                    "id": 10737,
                    "name": "VariableDeclarationStatement",
                    "src": "6935:21:34"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10735,
                              "type": "uint256",
                              "value": "minAmount"
                            },
                            "id": 10738,
                            "name": "Identifier",
                            "src": "6962:9:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54261",
                                      "typeString": "contract IUniswapV2RouterMin"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10597,
                                  "type": "function (address,uint256,uint256,contract IUniswapV2RouterMin) view returns (uint256)",
                                  "value": "calculateAllMinAmount"
                                },
                                "id": 10739,
                                "name": "Identifier",
                                "src": "6974:21:34"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10599,
                                  "type": "address",
                                  "value": "sellTokenAddress"
                                },
                                "id": 10740,
                                "name": "Identifier",
                                "src": "6996:16:34"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10605,
                                  "type": "uint256",
                                  "value": "maxSlippage"
                                },
                                "id": 10741,
                                "name": "Identifier",
                                "src": "7014:11:34"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10603,
                                  "type": "uint256",
                                  "value": "amount"
                                },
                                "id": 10742,
                                "name": "Identifier",
                                "src": "7027:6:34"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10637,
                                  "type": "contract IUniswapV2RouterMin",
                                  "value": "bestRouter"
                                },
                                "id": 10743,
                                "name": "Identifier",
                                "src": "7035:10:34"
                              }
                            ],
                            "id": 10744,
                            "name": "FunctionCall",
                            "src": "6974:72:34"
                          }
                        ],
                        "id": 10745,
                        "name": "Assignment",
                        "src": "6962:84:34"
                      }
                    ],
                    "id": 10746,
                    "name": "ExpressionStatement",
                    "src": "6962:84:34"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "approve",
                              "referencedDeclaration": 927,
                              "type": "function (address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "contract IERC20",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 955,
                                      "type": "type(contract IERC20)",
                                      "value": "IERC20"
                                    },
                                    "id": 10747,
                                    "name": "Identifier",
                                    "src": "7053:6:34"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10599,
                                      "type": "address",
                                      "value": "sellTokenAddress"
                                    },
                                    "id": 10748,
                                    "name": "Identifier",
                                    "src": "7060:16:34"
                                  }
                                ],
                                "id": 10749,
                                "name": "FunctionCall",
                                "src": "7053:24:34"
                              }
                            ],
                            "id": 10750,
                            "name": "MemberAccess",
                            "src": "7053:32:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54261",
                                      "typeString": "contract IUniswapV2RouterMin"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)",
                                  "value": "address"
                                },
                                "id": 10751,
                                "name": "ElementaryTypeNameExpression",
                                "src": "7086:7:34"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10637,
                                  "type": "contract IUniswapV2RouterMin",
                                  "value": "bestRouter"
                                },
                                "id": 10752,
                                "name": "Identifier",
                                "src": "7094:10:34"
                              }
                            ],
                            "id": 10753,
                            "name": "FunctionCall",
                            "src": "7086:19:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10603,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 10754,
                            "name": "Identifier",
                            "src": "7107:6:34"
                          }
                        ],
                        "id": 10755,
                        "name": "FunctionCall",
                        "src": "7053:61:34"
                      }
                    ],
                    "id": 10756,
                    "name": "ExpressionStatement",
                    "src": "7053:61:34"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256[] memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "swapExactTokensForTokens",
                              "referencedDeclaration": 54249,
                              "type": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10637,
                                  "type": "contract IUniswapV2RouterMin",
                                  "value": "bestRouter"
                                },
                                "id": 10757,
                                "name": "Identifier",
                                "src": "7120:10:34"
                              }
                            ],
                            "id": 10759,
                            "name": "MemberAccess",
                            "src": "7120:35:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10603,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 10760,
                            "name": "Identifier",
                            "src": "7163:6:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10735,
                              "type": "uint256",
                              "value": "minAmount"
                            },
                            "id": 10761,
                            "name": "Identifier",
                            "src": "7177:9:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10646,
                              "type": "address[] memory",
                              "value": "path"
                            },
                            "id": 10762,
                            "name": "Identifier",
                            "src": "7194:4:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_UniswapFeeHandlerSeller_$10805",
                                      "typeString": "contract UniswapFeeHandlerSeller"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)",
                                  "value": "address"
                                },
                                "id": 10763,
                                "name": "ElementaryTypeNameExpression",
                                "src": "7206:7:34"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 59352,
                                  "type": "contract UniswapFeeHandlerSeller",
                                  "value": "this"
                                },
                                "id": 10764,
                                "name": "Identifier",
                                "src": "7214:4:34"
                              }
                            ],
                            "id": 10765,
                            "name": "FunctionCall",
                            "src": "7206:13:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "+",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "timestamp",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 59206,
                                      "type": "block",
                                      "value": "block"
                                    },
                                    "id": 10766,
                                    "name": "Identifier",
                                    "src": "7227:5:34"
                                  }
                                ],
                                "id": 10767,
                                "name": "MemberAccess",
                                "src": "7227:15:34"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10340,
                                  "type": "uint256",
                                  "value": "MAX_TIMESTAMP_BLOCK_EXCHANGE"
                                },
                                "id": 10768,
                                "name": "Identifier",
                                "src": "7245:28:34"
                              }
                            ],
                            "id": 10769,
                            "name": "BinaryOperation",
                            "src": "7227:46:34"
                          }
                        ],
                        "id": 10770,
                        "name": "FunctionCall",
                        "src": "7120:159:34"
                      }
                    ],
                    "id": 10771,
                    "name": "ExpressionStatement",
                    "src": "7120:159:34"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        10773
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "celoAmount",
                          "scope": 10803,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 10772,
                            "name": "ElementaryTypeName",
                            "src": "7286:7:34"
                          }
                        ],
                        "id": 10773,
                        "name": "VariableDeclaration",
                        "src": "7286:18:34"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "balanceOf",
                              "referencedDeclaration": 900,
                              "type": "function (address) view external returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10632,
                                  "type": "contract IERC20",
                                  "value": "celoToken"
                                },
                                "id": 10774,
                                "name": "Identifier",
                                "src": "7307:9:34"
                              }
                            ],
                            "id": 10775,
                            "name": "MemberAccess",
                            "src": "7307:19:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_UniswapFeeHandlerSeller_$10805",
                                      "typeString": "contract UniswapFeeHandlerSeller"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)",
                                  "value": "address"
                                },
                                "id": 10776,
                                "name": "ElementaryTypeNameExpression",
                                "src": "7327:7:34"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 59352,
                                  "type": "contract UniswapFeeHandlerSeller",
                                  "value": "this"
                                },
                                "id": 10777,
                                "name": "Identifier",
                                "src": "7335:4:34"
                              }
                            ],
                            "id": 10778,
                            "name": "FunctionCall",
                            "src": "7327:13:34"
                          }
                        ],
                        "id": 10779,
                        "name": "FunctionCall",
                        "src": "7307:34:34"
                      }
                    ],
                    "id": 10780,
                    "name": "VariableDeclarationStatement",
                    "src": "7286:55:34"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transfer",
                              "referencedDeclaration": 909,
                              "type": "function (address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10632,
                                  "type": "contract IERC20",
                                  "value": "celoToken"
                                },
                                "id": 10781,
                                "name": "Identifier",
                                "src": "7347:9:34"
                              }
                            ],
                            "id": 10783,
                            "name": "MemberAccess",
                            "src": "7347:18:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 59216,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 10784,
                                "name": "Identifier",
                                "src": "7366:3:34"
                              }
                            ],
                            "id": 10785,
                            "name": "MemberAccess",
                            "src": "7366:10:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10773,
                              "type": "uint256",
                              "value": "celoAmount"
                            },
                            "id": 10786,
                            "name": "Identifier",
                            "src": "7378:10:34"
                          }
                        ],
                        "id": 10787,
                        "name": "FunctionCall",
                        "src": "7347:42:34"
                      }
                    ],
                    "id": 10788,
                    "name": "ExpressionStatement",
                    "src": "7347:42:34"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10359,
                              "type": "function (address)",
                              "value": "RouterUsed"
                            },
                            "id": 10789,
                            "name": "Identifier",
                            "src": "7400:10:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54261",
                                      "typeString": "contract IUniswapV2RouterMin"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)",
                                  "value": "address"
                                },
                                "id": 10790,
                                "name": "ElementaryTypeNameExpression",
                                "src": "7411:7:34"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10637,
                                  "type": "contract IUniswapV2RouterMin",
                                  "value": "bestRouter"
                                },
                                "id": 10791,
                                "name": "Identifier",
                                "src": "7419:10:34"
                              }
                            ],
                            "id": 10792,
                            "name": "FunctionCall",
                            "src": "7411:19:34"
                          }
                        ],
                        "id": 10793,
                        "name": "FunctionCall",
                        "src": "7400:31:34"
                      }
                    ],
                    "id": 10794,
                    "name": "EmitStatement",
                    "src": "7395:36:34"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6044,
                              "type": "function (address,address,uint256)",
                              "value": "TokenSold"
                            },
                            "id": 10795,
                            "name": "Identifier",
                            "src": "7442:9:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10599,
                              "type": "address",
                              "value": "sellTokenAddress"
                            },
                            "id": 10796,
                            "name": "Identifier",
                            "src": "7452:16:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10601,
                              "type": "address",
                              "value": "buyTokenAddress"
                            },
                            "id": 10797,
                            "name": "Identifier",
                            "src": "7470:15:34"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10603,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 10798,
                            "name": "Identifier",
                            "src": "7487:6:34"
                          }
                        ],
                        "id": 10799,
                        "name": "FunctionCall",
                        "src": "7442:52:34"
                      }
                    ],
                    "id": 10800,
                    "name": "EmitStatement",
                    "src": "7437:57:34"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 10609
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 10773,
                          "type": "uint256",
                          "value": "celoAmount"
                        },
                        "id": 10801,
                        "name": "Identifier",
                        "src": "7507:10:34"
                      }
                    ],
                    "id": 10802,
                    "name": "Return",
                    "src": "7500:17:34"
                  }
                ],
                "id": 10803,
                "name": "Block",
                "src": "5473:2049:34"
              }
            ],
            "id": 10804,
            "name": "FunctionDefinition",
            "src": "5308:2214:34"
          }
        ],
        "id": 10805,
        "name": "ContractDefinition",
        "src": "873:6651:34"
      }
    ],
    "id": 10806,
    "name": "SourceUnit",
    "src": "0:7525:34"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.13+commit.5b0b510c.Emscripten.clang"
  },
  "networks": {
    "1101": {
      "events": {},
      "links": {},
      "address": "0x0F3723fB2a7C147357868702164f9beEf54E1E85",
      "transactionHash": "0xad0e568f86c167681e05511586cea27a727a84bbd69c5a7cf7193a17aa542401"
    }
  },
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-11-21T17:25:46.009Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "calculateMinAmount(uint256,uint256,uint256,uint256)": {
        "details": "Calculates the minimum amount of tokens that should be received for the specified  amount with the given mid-price and maximum slippage.",
        "params": {
          "amount": "The amount of tokens to be exchanged.",
          "maxSlippage": "The maximum slippage percentage as a fraction of the mid-price.",
          "midPriceDenominator": "The denominator of the mid-price for the token pair.",
          "midPriceNumerator": "The numerator of the mid-price for the token pair."
        },
        "return": "The minimum amount of tokens that should be received as a uint256 value."
      },
      "constructor": {
        "params": {
          "test": "Set to true to skip implementation initialisation."
        }
      },
      "getRoutersForToken(address)": {
        "params": {
          "token": "The address of the token to query."
        },
        "return": "An array of all the allowed router."
      },
      "getVersionNumber()": {
        "return": "Storage version of the contract.Major version of the contract.Minor version of the contract.Patch version of the contract."
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removeRouter(address,address)": {
        "params": {
          "router": "Address of the router to remove.",
          "token": "Address of the token."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setMinimumReports(address,uint256)": {
        "params": {
          "newMininumReports": "The new update minimum number of reports required."
        }
      },
      "setRegistry(address)": {
        "params": {
          "registryAddress": "The address of a registry contract for routing to other contracts."
        }
      },
      "setRouter(address,address)": {
        "params": {
          "router": "The new router.",
          "token": "Address of the token to set."
        }
      },
      "transfer(address,uint256,address)": {
        "params": {
          "amount": "The amount of tokens to transfer.",
          "to": "The address of the recipient to transfer the tokens to.",
          "token": "The address of the token to transfer."
        },
        "return": "A boolean indicating whether the transfer was successful or not."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "constructor": "Sets initialized == true on implementation contracts.",
      "getRoutersForToken(address)": {
        "notice": "Get the list of routers for a token."
      },
      "getVersionNumber()": {
        "notice": "Returns the storage, major, minor, and patch version of the contract."
      },
      "removeRouter(address,address)": {
        "notice": "Allows owner to remove a router for a token."
      },
      "setMinimumReports(address,uint256)": {
        "notice": "Allows owner to set the minimum number of reports required."
      },
      "setRegistry(address)": {
        "notice": "Updates the address pointing to a Registry contract."
      },
      "setRouter(address,address)": {
        "notice": "Allows owner to set the router for a token."
      },
      "transfer(address,uint256,address)": {
        "notice": "Allows owner to transfer tokens of this contract. It's meant for governance to  trigger use cases not contemplated in this contract."
      }
    }
  }
}