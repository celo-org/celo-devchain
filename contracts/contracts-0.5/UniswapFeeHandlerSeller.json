{
  "contractName": "UniswapFeeHandlerSeller",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "test",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minimumReports",
          "type": "uint256"
        }
      ],
      "name": "MinimumReportsSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "name": "OracleAddressSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokneAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "router",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quote",
          "type": "uint256"
        }
      ],
      "name": "ReceivedQuote",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "RegistrySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "RouterAddressRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "RouterAddressSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "RouterUsed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "soldTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "boughtTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenSold",
      "type": "event"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "midPriceNumerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "midPriceDenominator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxSlippage",
          "type": "uint256"
        }
      ],
      "name": "calculateMinAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "getOracleAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_registryAddress",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "tokenAddresses",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "newMininumReports",
          "type": "uint256[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "minimumReports",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "oracleAddresses",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract IRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "newMininumReports",
          "type": "uint256"
        }
      ],
      "name": "setMinimumReports",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_oracleAddress",
          "type": "address"
        }
      ],
      "name": "setOracleAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "setRouter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "removeRouter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sellTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "buyTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxSlippage",
          "type": "uint256"
        }
      ],
      "name": "sell",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getRoutersForToken",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVersionNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.13+commit.5b0b510c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"test\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minimumReports\",\"type\":\"uint256\"}],\"name\":\"MinimumReportsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"OracleAddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokneAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quote\",\"type\":\"uint256\"}],\"name\":\"ReceivedQuote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"RegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"RouterAddressRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"RouterAddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"RouterUsed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"soldTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"boughtTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenSold\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"midPriceNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"midPriceDenominator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSlippage\",\"type\":\"uint256\"}],\"name\":\"calculateMinAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"getOracleAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getRoutersForToken\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVersionNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registryAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"newMininumReports\",\"type\":\"uint256[]\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minimumReports\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"oracleAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract IRegistry\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"removeRouter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSlippage\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newMininumReports\",\"type\":\"uint256\"}],\"name\":\"setMinimumReports\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oracleAddress\",\"type\":\"address\"}],\"name\":\"setOracleAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"setRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"setRouter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"calculateMinAmount(uint256,uint256,uint256,uint256)\":{\"details\":\"Calculates the minimum amount of tokens that should be received for the specified  amount with the given mid-price and maximum slippage.\",\"params\":{\"amount\":\"The amount of tokens to be exchanged.\",\"maxSlippage\":\"The maximum slippage percentage as a fraction of the mid-price.\",\"midPriceDenominator\":\"The denominator of the mid-price for the token pair.\",\"midPriceNumerator\":\"The numerator of the mid-price for the token pair.\"},\"return\":\"The minimum amount of tokens that should be received as a uint256 value.\"},\"constructor\":{\"params\":{\"test\":\"Set to true to skip implementation initialisation.\"}},\"getRoutersForToken(address)\":{\"params\":{\"token\":\"The address of the token to query.\"},\"return\":\"An array of all the allowed router.\"},\"getVersionNumber()\":{\"return\":\"Storage version of the contract.Major version of the contract.Minor version of the contract.Patch version of the contract.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeRouter(address,address)\":{\"params\":{\"router\":\"Address of the router to remove.\",\"token\":\"Address of the token.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setMinimumReports(address,uint256)\":{\"params\":{\"newMininumReports\":\"The new update minimum number of reports required.\"}},\"setRegistry(address)\":{\"params\":{\"registryAddress\":\"The address of a registry contract for routing to other contracts.\"}},\"setRouter(address,address)\":{\"params\":{\"router\":\"The new router.\",\"token\":\"Address of the token to set.\"}},\"transfer(address,uint256,address)\":{\"params\":{\"amount\":\"The amount of tokens to transfer.\",\"to\":\"The address of the recipient to transfer the tokens to.\",\"token\":\"The address of the token to transfer.\"},\"return\":\"A boolean indicating whether the transfer was successful or not.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"constructor\":\"Sets initialized == true on implementation contracts.\",\"getRoutersForToken(address)\":{\"notice\":\"Get the list of routers for a token.\"},\"getVersionNumber()\":{\"notice\":\"Returns the storage, major, minor, and patch version of the contract.\"},\"removeRouter(address,address)\":{\"notice\":\"Allows owner to remove a router for a token.\"},\"setMinimumReports(address,uint256)\":{\"notice\":\"Allows owner to set the minimum number of reports required.\"},\"setRegistry(address)\":{\"notice\":\"Updates the address pointing to a Registry contract.\"},\"setRouter(address,address)\":{\"notice\":\"Allows owner to set the router for a token.\"},\"transfer(address,uint256,address)\":{\"notice\":\"Allows owner to transfer tokens of this contract. It's meant for governance to  trigger use cases not contemplated in this contract.\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/common/UniswapFeeHandlerSeller.sol\":\"UniswapFeeHandlerSeller\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\ncontract Context {\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\n    // an instance of this contract, which should be used via inheritance.\\n    constructor () internal { }\\n    // solhint-disable-previous-line no-empty-blocks\\n\\n    function _msgSender() internal view returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\"},\"openzeppelin-solidity/contracts/math/Math.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a >= b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow, so we distribute\\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\\n    }\\n}\\n\",\"keccak256\":\"0x4b5aa451e4e8801478708f94b118a7821c0500d676255eaf89fc78c14856ce4e\"},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\"},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\nimport \\\"../GSN/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(isOwner(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the caller is the current owner.\\n     */\\n    function isOwner() public view returns (bool) {\\n        return _msgSender() == _owner;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     */\\n    function _transferOwnership(address newOwner) internal {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\"},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\\n * the optional functions; to access them see {ERC20Detailed}.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\"},\"openzeppelin-solidity/contracts/utils/EnumerableSet.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * As of v2.5.0, only `address` sets are supported.\\n *\\n * Include with `using EnumerableSet for EnumerableSet.AddressSet;`.\\n *\\n * _Available since v2.5.0._\\n *\\n * @author Alberto Cuesta Ca\\u00f1ada\\n */\\nlibrary EnumerableSet {\\n\\n    struct AddressSet {\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping (address => uint256) index;\\n        address[] values;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     * Returns false if the value was already in the set.\\n     */\\n    function add(AddressSet storage set, address value)\\n        internal\\n        returns (bool)\\n    {\\n        if (!contains(set, value)){\\n            set.index[value] = set.values.push(value);\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     * Returns false if the value was not present in the set.\\n     */\\n    function remove(AddressSet storage set, address value)\\n        internal\\n        returns (bool)\\n    {\\n        if (contains(set, value)){\\n            uint256 toDeleteIndex = set.index[value] - 1;\\n            uint256 lastIndex = set.values.length - 1;\\n\\n            // If the element we're deleting is the last one, we can just remove it without doing a swap\\n            if (lastIndex != toDeleteIndex) {\\n                address lastValue = set.values[lastIndex];\\n\\n                // Move the last value to the index where the deleted value is\\n                set.values[toDeleteIndex] = lastValue;\\n                // Update the index for the moved value\\n                set.index[lastValue] = toDeleteIndex + 1; // All indexes are 1-based\\n            }\\n\\n            // Delete the index entry for the deleted value\\n            delete set.index[value];\\n\\n            // Delete the old entry for the moved value\\n            set.values.pop();\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value)\\n        internal\\n        view\\n        returns (bool)\\n    {\\n        return set.index[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns an array with all values in the set. O(N).\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n\\n     * WARNING: This function may run out of gas on large sets: use {length} and\\n     * {get} instead in these cases.\\n     */\\n    function enumerate(AddressSet storage set)\\n        internal\\n        view\\n        returns (address[] memory)\\n    {\\n        address[] memory output = new address[](set.values.length);\\n        for (uint256 i; i < set.values.length; i++){\\n            output[i] = set.values[i];\\n        }\\n        return output;\\n    }\\n\\n    /**\\n     * @dev Returns the number of elements on the set. O(1).\\n     */\\n    function length(AddressSet storage set)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        return set.values.length;\\n    }\\n\\n   /** @dev Returns the element stored at position `index` in the set. O(1).\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function get(AddressSet storage set, uint256 index)\\n        internal\\n        view\\n        returns (address)\\n    {\\n        return set.values[index];\\n    }\\n}\\n\",\"keccak256\":\"0xcce1d35afae7905e2fd76ff67c3fe866091e223c50133527c302a31ffce9a5d7\"},\"project:/contracts-0.8/common/interfaces/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.5.13 <0.9.0;\\n\\n/// Possibly not final version\\ninterface IOracle {\\n  function getExchangeRate(\\n    address token\\n  ) external view returns (uint256 numerator, uint256 denominator);\\n}\\n\",\"keccak256\":\"0xabf489c01ce86008d0aff7b1f8d31da44acd585c8dd44b8cd2895b633149cbe9\"},\"project:/contracts/common/FeeHandlerSeller.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\nimport \\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\\";\\nimport \\\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\\";\\nimport \\\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\\\";\\n\\nimport \\\"./UsingRegistry.sol\\\";\\nimport \\\"../common/FixidityLib.sol\\\";\\nimport \\\"../common/Initializable.sol\\\";\\nimport \\\"../common/interfaces/ICeloVersionedContract.sol\\\";\\n\\n// Abstract class for a FeeHandlerSeller, as defined in CIP-52\\n// https://github.com/celo-org/celo-proposals/blob/master/CIPs/cip-0052.md\\ncontract FeeHandlerSeller is Ownable, Initializable, UsingRegistry, ICeloVersionedContract {\\n  using SafeMath for uint256;\\n  using FixidityLib for FixidityLib.Fraction;\\n\\n  // Address of the token\\n  // Minimal number of reports in SortedOracles contract\\n  mapping(address => uint256) public minimumReports;\\n  mapping(address => address) public oracleAddresses;\\n\\n  event MinimumReportsSet(address tokenAddress, uint256 minimumReports);\\n  event TokenSold(address soldTokenAddress, address boughtTokenAddress, uint256 amount);\\n  event OracleAddressSet(address _token, address _oracle);\\n\\n  function initialize(\\n    address _registryAddress,\\n    address[] calldata tokenAddresses,\\n    uint256[] calldata newMininumReports\\n  ) external initializer {\\n    _transferOwnership(msg.sender);\\n    setRegistry(_registryAddress);\\n\\n    for (uint256 i = 0; i < tokenAddresses.length; i++) {\\n      _setMinimumReports(tokenAddresses[i], newMininumReports[i]);\\n    }\\n  }\\n\\n  /**\\n  * @notice Allows owner to transfer tokens of this contract. It's meant for governance to \\n    trigger use cases not contemplated in this contract.\\n    @param token The address of the token to transfer.\\n    @param amount The amount of tokens to transfer.\\n    @param to The address of the recipient to transfer the tokens to.\\n    @return A boolean indicating whether the transfer was successful or not.\\n  */\\n  function transfer(address token, uint256 amount, address to) external onlyOwner returns (bool) {\\n    return IERC20(token).transfer(to, amount);\\n  }\\n\\n  /**\\n   * @notice Allows owner to set the minimum number of reports required.\\n   * @param newMininumReports The new update minimum number of reports required.\\n   */\\n  function setMinimumReports(address tokenAddress, uint256 newMininumReports) public onlyOwner {\\n    _setMinimumReports(tokenAddress, newMininumReports);\\n  }\\n\\n  /**\\n    @dev Calculates the minimum amount of tokens that should be received for the specified \\n    amount with the given mid-price and maximum slippage.\\n    @param midPriceNumerator The numerator of the mid-price for the token pair.\\n    @param midPriceDenominator The denominator of the mid-price for the token pair.\\n    @param amount The amount of tokens to be exchanged.\\n    @param maxSlippage The maximum slippage percentage as a fraction of the mid-price.\\n    @return The minimum amount of tokens that should be received as a uint256 value.\\n  */\\n  function calculateMinAmount(\\n    uint256 midPriceNumerator,\\n    uint256 midPriceDenominator,\\n    uint256 amount,\\n    uint256 maxSlippage // as fraction\\n  ) public pure returns (uint256) {\\n    FixidityLib.Fraction memory maxSlippageFraction = FixidityLib.wrap(maxSlippage);\\n\\n    FixidityLib.Fraction memory price = FixidityLib.newFixedFraction(\\n      midPriceNumerator,\\n      midPriceDenominator\\n    );\\n    FixidityLib.Fraction memory amountFraction = FixidityLib.newFixed(amount);\\n    FixidityLib.Fraction memory totalAmount = price.multiply(amountFraction);\\n\\n    return\\n      totalAmount\\n        .subtract(price.multiply(maxSlippageFraction).multiply(amountFraction))\\n        .fromFixed();\\n  }\\n\\n  function _setMinimumReports(address tokenAddress, uint256 newMininumReports) internal {\\n    minimumReports[tokenAddress] = newMininumReports;\\n    emit MinimumReportsSet(tokenAddress, newMininumReports);\\n  }\\n\\n  function setOracleAddress(address _tokenAddress, address _oracleAddress) external onlyOwner {\\n    oracleAddresses[_tokenAddress] = _oracleAddress;\\n    emit OracleAddressSet(_tokenAddress, _oracleAddress);\\n  }\\n\\n  function getOracleAddress(address _tokenAddress) public view returns (address) {\\n    address oracleAddress = oracleAddresses[_tokenAddress];\\n    if (oracleAddress != address(0)) {\\n      return oracleAddress;\\n    }\\n\\n    return address(getSortedOracles());\\n  }\\n}\\n\",\"keccak256\":\"0x36750edcfd9a52a34f69460bbaa67441060178a76dded7243ca2df38283b5f01\"},\"project:/contracts/common/FixidityLib.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\n/**\\n * @title FixidityLib\\n * @author Gadi Guy, Alberto Cuesta Canada\\n * @notice This library provides fixed point arithmetic with protection against\\n * overflow.\\n * All operations are done with uint256 and the operands must have been created\\n * with any of the newFrom* functions, which shift the comma digits() to the\\n * right and check for limits, or with wrap() which expects a number already\\n * in the internal representation of a fraction.\\n * When using this library be sure to use maxNewFixed() as the upper limit for\\n * creation of fixed point numbers.\\n * @dev All contained functions are pure and thus marked internal to be inlined\\n * on consuming contracts at compile time for gas efficiency.\\n */\\nlibrary FixidityLib {\\n  struct Fraction {\\n    uint256 value;\\n  }\\n\\n  uint256 private constant FIXED1_UINT = 1000000000000000000000000;\\n\\n  /**\\n   * @notice Number of positions that the comma is shifted to the right.\\n   */\\n  function digits() internal pure returns (uint8) {\\n    return 24;\\n  }\\n\\n  /**\\n   * @notice This is 1 in the fixed point units used in this library.\\n   * @dev Test fixed1() equals 10^digits()\\n   * Hardcoded to 24 digits.\\n   */\\n  function fixed1() internal pure returns (Fraction memory) {\\n    return Fraction(FIXED1_UINT);\\n  }\\n\\n  /**\\n   * @notice Wrap a uint256 that represents a 24-decimal fraction in a Fraction\\n   * struct.\\n   * @param x Number that already represents a 24-decimal fraction.\\n   * @return A Fraction struct with contents x.\\n   */\\n  function wrap(uint256 x) internal pure returns (Fraction memory) {\\n    return Fraction(x);\\n  }\\n\\n  /**\\n   * @notice Unwraps the uint256 inside of a Fraction struct.\\n   */\\n  function unwrap(Fraction memory x) internal pure returns (uint256) {\\n    return x.value;\\n  }\\n\\n  /**\\n   * @notice The amount of decimals lost on each multiplication operand.\\n   * @dev Test mulPrecision() equals sqrt(fixed1)\\n   */\\n  function mulPrecision() internal pure returns (uint256) {\\n    return 1000000000000;\\n  }\\n\\n  /**\\n   * @notice Maximum value that can be converted to fixed point. Optimize for deployment.\\n   * @dev\\n   * Test maxNewFixed() equals maxUint256() / fixed1()\\n   */\\n  function maxNewFixed() internal pure returns (uint256) {\\n    return 115792089237316195423570985008687907853269984665640564;\\n  }\\n\\n  /**\\n   * @notice Converts a uint256 to fixed point Fraction\\n   * @dev Test newFixed(0) returns 0\\n   * Test newFixed(1) returns fixed1()\\n   * Test newFixed(maxNewFixed()) returns maxNewFixed() * fixed1()\\n   * Test newFixed(maxNewFixed()+1) fails\\n   */\\n  function newFixed(uint256 x) internal pure returns (Fraction memory) {\\n    require(x <= maxNewFixed(), \\\"can't create fixidity number larger than maxNewFixed()\\\");\\n    return Fraction(x * FIXED1_UINT);\\n  }\\n\\n  /**\\n   * @notice Converts a uint256 in the fixed point representation of this\\n   * library to a non decimal. All decimal digits will be truncated.\\n   */\\n  function fromFixed(Fraction memory x) internal pure returns (uint256) {\\n    return x.value / FIXED1_UINT;\\n  }\\n\\n  /**\\n   * @notice Converts two uint256 representing a fraction to fixed point units,\\n   * equivalent to multiplying dividend and divisor by 10^digits().\\n   * @param numerator numerator must be <= maxNewFixed()\\n   * @param denominator denominator must be <= maxNewFixed() and denominator can't be 0\\n   * @dev\\n   * Test newFixedFraction(1,0) fails\\n   * Test newFixedFraction(0,1) returns 0\\n   * Test newFixedFraction(1,1) returns fixed1()\\n   * Test newFixedFraction(1,fixed1()) returns 1\\n   */\\n  function newFixedFraction(\\n    uint256 numerator,\\n    uint256 denominator\\n  ) internal pure returns (Fraction memory) {\\n    Fraction memory convertedNumerator = newFixed(numerator);\\n    Fraction memory convertedDenominator = newFixed(denominator);\\n    return divide(convertedNumerator, convertedDenominator);\\n  }\\n\\n  /**\\n   * @notice Returns the integer part of a fixed point number.\\n   * @dev\\n   * Test integer(0) returns 0\\n   * Test integer(fixed1()) returns fixed1()\\n   * Test integer(newFixed(maxNewFixed())) returns maxNewFixed()*fixed1()\\n   */\\n  function integer(Fraction memory x) internal pure returns (Fraction memory) {\\n    return Fraction((x.value / FIXED1_UINT) * FIXED1_UINT); // Can't overflow\\n  }\\n\\n  /**\\n   * @notice Returns the fractional part of a fixed point number.\\n   * In the case of a negative number the fractional is also negative.\\n   * @dev\\n   * Test fractional(0) returns 0\\n   * Test fractional(fixed1()) returns 0\\n   * Test fractional(fixed1()-1) returns 10^24-1\\n   */\\n  function fractional(Fraction memory x) internal pure returns (Fraction memory) {\\n    return Fraction(x.value - (x.value / FIXED1_UINT) * FIXED1_UINT); // Can't overflow\\n  }\\n\\n  /**\\n   * @notice x+y.\\n   * @dev The maximum value that can be safely used as an addition operator is defined as\\n   * maxFixedAdd = maxUint256()-1 / 2, or\\n   * 57896044618658097711785492504343953926634992332820282019728792003956564819967.\\n   * Test add(maxFixedAdd,maxFixedAdd) equals maxFixedAdd + maxFixedAdd\\n   * Test add(maxFixedAdd+1,maxFixedAdd+1) throws\\n   */\\n  function add(Fraction memory x, Fraction memory y) internal pure returns (Fraction memory) {\\n    uint256 z = x.value + y.value;\\n    require(z >= x.value, \\\"add overflow detected\\\");\\n    return Fraction(z);\\n  }\\n\\n  /**\\n   * @notice x-y.\\n   * @dev\\n   * Test subtract(6, 10) fails\\n   */\\n  function subtract(Fraction memory x, Fraction memory y) internal pure returns (Fraction memory) {\\n    require(x.value >= y.value, \\\"substraction underflow detected\\\");\\n    return Fraction(x.value - y.value);\\n  }\\n\\n  /**\\n   * @notice x*y. If any of the operators is higher than the max multiplier value it\\n   * might overflow.\\n   * @dev The maximum value that can be safely used as a multiplication operator\\n   * (maxFixedMul) is calculated as sqrt(maxUint256()*fixed1()),\\n   * or 340282366920938463463374607431768211455999999999999\\n   * Test multiply(0,0) returns 0\\n   * Test multiply(maxFixedMul,0) returns 0\\n   * Test multiply(0,maxFixedMul) returns 0\\n   * Test multiply(fixed1()/mulPrecision(),fixed1()*mulPrecision()) returns fixed1()\\n   * Test multiply(maxFixedMul,maxFixedMul) is around maxUint256()\\n   * Test multiply(maxFixedMul+1,maxFixedMul+1) fails\\n   */\\n  function multiply(Fraction memory x, Fraction memory y) internal pure returns (Fraction memory) {\\n    if (x.value == 0 || y.value == 0) return Fraction(0);\\n    if (y.value == FIXED1_UINT) return x;\\n    if (x.value == FIXED1_UINT) return y;\\n\\n    // Separate into integer and fractional parts\\n    // x = x1 + x2, y = y1 + y2\\n    uint256 x1 = integer(x).value / FIXED1_UINT;\\n    uint256 x2 = fractional(x).value;\\n    uint256 y1 = integer(y).value / FIXED1_UINT;\\n    uint256 y2 = fractional(y).value;\\n\\n    // (x1 + x2) * (y1 + y2) = (x1 * y1) + (x1 * y2) + (x2 * y1) + (x2 * y2)\\n    uint256 x1y1 = x1 * y1;\\n    if (x1 != 0) require(x1y1 / x1 == y1, \\\"overflow x1y1 detected\\\");\\n\\n    // x1y1 needs to be multiplied back by fixed1\\n    // solium-disable-next-line mixedcase\\n    uint256 fixed_x1y1 = x1y1 * FIXED1_UINT;\\n    if (x1y1 != 0) require(fixed_x1y1 / x1y1 == FIXED1_UINT, \\\"overflow x1y1 * fixed1 detected\\\");\\n    x1y1 = fixed_x1y1;\\n\\n    uint256 x2y1 = x2 * y1;\\n    if (x2 != 0) require(x2y1 / x2 == y1, \\\"overflow x2y1 detected\\\");\\n\\n    uint256 x1y2 = x1 * y2;\\n    if (x1 != 0) require(x1y2 / x1 == y2, \\\"overflow x1y2 detected\\\");\\n\\n    x2 = x2 / mulPrecision();\\n    y2 = y2 / mulPrecision();\\n    uint256 x2y2 = x2 * y2;\\n    if (x2 != 0) require(x2y2 / x2 == y2, \\\"overflow x2y2 detected\\\");\\n\\n    // result = fixed1() * x1 * y1 + x1 * y2 + x2 * y1 + x2 * y2 / fixed1();\\n    Fraction memory result = Fraction(x1y1);\\n    result = add(result, Fraction(x2y1)); // Add checks for overflow\\n    result = add(result, Fraction(x1y2)); // Add checks for overflow\\n    result = add(result, Fraction(x2y2)); // Add checks for overflow\\n    return result;\\n  }\\n\\n  /**\\n   * @notice 1/x\\n   * @dev\\n   * Test reciprocal(0) fails\\n   * Test reciprocal(fixed1()) returns fixed1()\\n   * Test reciprocal(fixed1()*fixed1()) returns 1 // Testing how the fractional is truncated\\n   * Test reciprocal(1+fixed1()*fixed1()) returns 0 // Testing how the fractional is truncated\\n   * Test reciprocal(newFixedFraction(1, 1e24)) returns newFixed(1e24)\\n   */\\n  function reciprocal(Fraction memory x) internal pure returns (Fraction memory) {\\n    require(x.value != 0, \\\"can't call reciprocal(0)\\\");\\n    return Fraction((FIXED1_UINT * FIXED1_UINT) / x.value); // Can't overflow\\n  }\\n\\n  /**\\n   * @notice x/y. If the dividend is higher than the max dividend value, it\\n   * might overflow. You can use multiply(x,reciprocal(y)) instead.\\n   * @dev The maximum value that can be safely used as a dividend (maxNewFixed) is defined as\\n   * divide(maxNewFixed,newFixedFraction(1,fixed1())) is around maxUint256().\\n   * This yields the value 115792089237316195423570985008687907853269984665640564.\\n   * Test maxNewFixed equals maxUint256()/fixed1()\\n   * Test divide(maxNewFixed,1) equals maxNewFixed*(fixed1)\\n   * Test divide(maxNewFixed+1,multiply(mulPrecision(),mulPrecision())) throws\\n   * Test divide(fixed1(),0) fails\\n   * Test divide(maxNewFixed,1) = maxNewFixed*(10^digits())\\n   * Test divide(maxNewFixed+1,1) throws\\n   */\\n  function divide(Fraction memory x, Fraction memory y) internal pure returns (Fraction memory) {\\n    require(y.value != 0, \\\"can't divide by 0\\\");\\n    uint256 X = x.value * FIXED1_UINT;\\n    require(X / FIXED1_UINT == x.value, \\\"overflow at divide\\\");\\n    return Fraction(X / y.value);\\n  }\\n\\n  /**\\n   * @notice x > y\\n   */\\n  function gt(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value > y.value;\\n  }\\n\\n  /**\\n   * @notice x >= y\\n   */\\n  function gte(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value >= y.value;\\n  }\\n\\n  /**\\n   * @notice x < y\\n   */\\n  function lt(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value < y.value;\\n  }\\n\\n  /**\\n   * @notice x <= y\\n   */\\n  function lte(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value <= y.value;\\n  }\\n\\n  /**\\n   * @notice x == y\\n   */\\n  function equals(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value == y.value;\\n  }\\n\\n  /**\\n   * @notice x <= 1\\n   */\\n  function isProperFraction(Fraction memory x) internal pure returns (bool) {\\n    return lte(x, fixed1());\\n  }\\n}\\n\",\"keccak256\":\"0x546944b106cf70ad6f793e71dffd41733bec3e03ca820a3d08213fc795c042b0\"},\"project:/contracts/common/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\n/**\\n * @title Used with proxied contracts that have an `initialize` function.\\n * @notice Ensures the `initialize` function:\\n *         - gets called only once\\n *         - cannot be called on the logic contract.\\n */\\ncontract Initializable {\\n  bool public initialized;\\n\\n  /**\\n   * @notice Ensures the initializer function cannot be called more than once.\\n   */\\n  modifier initializer() {\\n    require(!initialized, \\\"contract already initialized\\\");\\n    initialized = true;\\n    _;\\n  }\\n\\n  /**\\n   * @notice By default, ensures that the `initialize` function cannot be called\\n   * on the logic contract.\\n   * @param testingDeployment When set to true, allows the `initialize` function\\n   * to be called, which is useful in testing when not setting up with a Proxy.\\n   */\\n  constructor(bool testingDeployment) public {\\n    if (!testingDeployment) {\\n      initialized = true;\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x8de2ab8706668982998c5a995bdc3d8ff20a1ec8519bf49cec9e464f62c57bb9\"},\"project:/contracts/common/UniswapFeeHandlerSeller.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\nimport \\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\\";\\nimport \\\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"openzeppelin-solidity/contracts/utils/EnumerableSet.sol\\\";\\nimport \\\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\\";\\nimport \\\"openzeppelin-solidity/contracts/math/Math.sol\\\";\\n\\nimport \\\"./UsingRegistry.sol\\\";\\n\\nimport \\\"../common/interfaces/IFeeHandlerSeller.sol\\\";\\nimport \\\"../stability/interfaces/ISortedOracles.sol\\\";\\nimport \\\"../../contracts-0.8/common/interfaces/IOracle.sol\\\";\\nimport \\\"../common/FixidityLib.sol\\\";\\nimport \\\"../common/Initializable.sol\\\";\\nimport \\\"./FeeHandlerSeller.sol\\\";\\n\\nimport \\\"../uniswap/interfaces/IUniswapV2RouterMin.sol\\\";\\nimport \\\"../uniswap/interfaces/IUniswapV2FactoryMin.sol\\\";\\n\\n// An implementation of FeeHandlerSeller supporting interfaces compatible with\\n// Uniswap V2 API\\n// See https://github.com/celo-org/celo-proposals/blob/master/CIPs/cip-0052.md\\ncontract UniswapFeeHandlerSeller is IFeeHandlerSeller, FeeHandlerSeller {\\n  using SafeMath for uint256;\\n  using FixidityLib for FixidityLib.Fraction;\\n  using EnumerableSet for EnumerableSet.AddressSet;\\n\\n  uint256 constant MAX_TIMESTAMP_BLOCK_EXCHANGE = 20;\\n  uint256 constant MAX_NUMBER_ROUTERS_PER_TOKEN = 3;\\n  mapping(address => EnumerableSet.AddressSet) private routerAddresses;\\n\\n  event ReceivedQuote(address indexed tokneAddress, address indexed router, uint256 quote);\\n  event RouterUsed(address router);\\n  event RouterAddressSet(address token, address router);\\n  event RouterAddressRemoved(address token, address router);\\n\\n  /**\\n   * @notice Sets initialized == true on implementation contracts.\\n   * @param test Set to true to skip implementation initialisation.\\n   */\\n  constructor(bool test) public Initializable(test) {}\\n\\n  // without this line the contract can't receive native Celo transfers\\n  function() external payable {}\\n\\n  /**\\n   * @notice Allows owner to set the router for a token.\\n   * @param token Address of the token to set.\\n   * @param router The new router.\\n   */\\n  function setRouter(address token, address router) external onlyOwner {\\n    _setRouter(token, router);\\n  }\\n\\n  /**\\n   * @notice Allows owner to remove a router for a token.\\n   * @param token Address of the token.\\n   * @param router Address of the router to remove.\\n   */\\n  function removeRouter(address token, address router) external onlyOwner {\\n    routerAddresses[token].remove(router);\\n    emit RouterAddressRemoved(token, router);\\n  }\\n\\n  // This function explicitly defines few variables because it was getting error \\\"stack too deep\\\"\\n  function sell(\\n    address sellTokenAddress,\\n    address buyTokenAddress,\\n    uint256 amount,\\n    uint256 maxSlippage // as fraction,\\n  ) external returns (uint256) {\\n    require(\\n      buyTokenAddress == registry.getAddressForOrDie(CELO_TOKEN_REGISTRY_ID),\\n      \\\"Buy token can only be CELO token\\\"\\n    );\\n\\n    require(\\n      routerAddresses[sellTokenAddress].values.length > 0,\\n      \\\"routerAddresses should be non empty\\\"\\n    );\\n\\n    // An improvement to this function would be to allow the user to pass a path as argument\\n    // and if it generates a better outcome that the ones enabled that gets used\\n    // and the user gets a reward\\n\\n    IERC20 celoToken = getCeloToken();\\n\\n    IUniswapV2RouterMin bestRouter;\\n    uint256 bestRouterQuote = 0;\\n\\n    address[] memory path = new address[](2);\\n\\n    path[0] = sellTokenAddress;\\n    path[1] = address(celoToken);\\n\\n    for (uint256 i = 0; i < routerAddresses[sellTokenAddress].values.length; i++) {\\n      address poolAddress = routerAddresses[sellTokenAddress].get(i);\\n      IUniswapV2RouterMin router = IUniswapV2RouterMin(poolAddress);\\n\\n      // Using the second return value becuase it's the last argument,\\n      // the previous values show how many tokens are exchanged in each path\\n      // so the first value would be equivalent to balanceToBurn\\n      uint256 wouldGet = router.getAmountsOut(amount, path)[1];\\n\\n      emit ReceivedQuote(sellTokenAddress, poolAddress, wouldGet);\\n      if (wouldGet > bestRouterQuote) {\\n        bestRouterQuote = wouldGet;\\n        bestRouter = router;\\n      }\\n    }\\n\\n    require(bestRouterQuote != 0, \\\"Can't exchange with zero quote\\\");\\n\\n    uint256 minAmount = 0;\\n    minAmount = calculateAllMinAmount(sellTokenAddress, maxSlippage, amount, bestRouter);\\n\\n    IERC20(sellTokenAddress).approve(address(bestRouter), amount);\\n    bestRouter.swapExactTokensForTokens(\\n      amount,\\n      minAmount,\\n      path,\\n      address(this),\\n      block.timestamp + MAX_TIMESTAMP_BLOCK_EXCHANGE\\n    );\\n\\n    uint256 celoAmount = celoToken.balanceOf(address(this));\\n    celoToken.transfer(msg.sender, celoAmount);\\n    emit RouterUsed(address(bestRouter));\\n    emit TokenSold(sellTokenAddress, buyTokenAddress, amount);\\n    return celoAmount;\\n  }\\n\\n  /**\\n   * @notice Get the list of routers for a token.\\n   * @param token The address of the token to query.\\n   * @return An array of all the allowed router.\\n   */\\n  function getRoutersForToken(address token) external view returns (address[] memory) {\\n    return routerAddresses[token].values;\\n  }\\n\\n  /**\\n   * @notice Returns the storage, major, minor, and patch version of the contract.\\n   * @return Storage version of the contract.\\n   * @return Major version of the contract.\\n   * @return Minor version of the contract.\\n   * @return Patch version of the contract.\\n   */\\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256) {\\n    return (2, 0, 0, 0);\\n  }\\n\\n  function _setRouter(address token, address router) private {\\n    require(router != address(0), \\\"Router can't be address zero\\\");\\n    routerAddresses[token].add(router);\\n    require(\\n      routerAddresses[token].values.length <= MAX_NUMBER_ROUTERS_PER_TOKEN,\\n      \\\"Max number of routers reached\\\"\\n    );\\n    emit RouterAddressSet(token, router);\\n  }\\n\\n  /**\\n  * @dev Calculates the minimum amount of tokens that can be received for a given amount of sell tokens, \\n          taking into account the slippage and the rates of the sell token and CELO token on the Uniswap V2 pair.\\n  * @param sellTokenAddress The address of the sell token.\\n  * @param maxSlippage The maximum slippage allowed.\\n  * @param amount The amount of sell tokens to be traded.\\n  * @param bestRouter The Uniswap V2 router with the best price.\\n  * @return The minimum amount of tokens that can be received.\\n  */\\n  function calculateAllMinAmount(\\n    address sellTokenAddress,\\n    uint256 maxSlippage,\\n    uint256 amount,\\n    IUniswapV2RouterMin bestRouter\\n  ) private view returns (uint256) {\\n    address _oracleAddress = getOracleAddress(sellTokenAddress);\\n\\n    uint256 minReports = minimumReports[sellTokenAddress];\\n\\n    IOracle oracle = IOracle(_oracleAddress);\\n\\n    uint256 minimalSortedOracles = 0;\\n    // if minimumReports for this token is zero, assume the check is not needed\\n    if (minReports > 0) {\\n      ISortedOracles sortedOracles = ISortedOracles(_oracleAddress);\\n      require(\\n        sortedOracles.numRates(sellTokenAddress) >= minReports,\\n        \\\"Number of reports for token not enough\\\"\\n      );\\n\\n      (uint256 rateNumerator, uint256 rateDenominator) = oracle.getExchangeRate(sellTokenAddress);\\n\\n      minimalSortedOracles = calculateMinAmount(\\n        rateNumerator,\\n        rateDenominator,\\n        amount,\\n        maxSlippage\\n      );\\n    }\\n\\n    IERC20 celoToken = getCeloToken();\\n    address pair = IUniswapV2FactoryMin(bestRouter.factory()).getPair(\\n      sellTokenAddress,\\n      address(celoToken)\\n    );\\n    uint256 minAmountPair = calculateMinAmount(\\n      IERC20(sellTokenAddress).balanceOf(pair),\\n      celoToken.balanceOf(pair),\\n      amount,\\n      maxSlippage\\n    );\\n\\n    return Math.max(minAmountPair, minimalSortedOracles);\\n  }\\n}\\n\",\"keccak256\":\"0x908498d1181a62c25ef2122361400a9f0a3f19dd5f380cae1910bc088d024db5\"},\"project:/contracts/common/UsingRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity ^0.5.13;\\n\\nimport \\\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\\";\\nimport \\\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\\\";\\n\\nimport \\\"./interfaces/IAccounts.sol\\\";\\nimport \\\"./interfaces/IEpochManager.sol\\\";\\nimport \\\"./interfaces/IFeeCurrencyWhitelist.sol\\\";\\nimport \\\"./interfaces/IFreezer.sol\\\";\\nimport \\\"./interfaces/IRegistry.sol\\\";\\nimport \\\"./interfaces/ICeloUnreleasedTreasury.sol\\\";\\n\\nimport \\\"../governance/interfaces/IElection.sol\\\";\\nimport \\\"../governance/interfaces/IEpochRewards.sol\\\";\\nimport \\\"../governance/interfaces/IGovernance.sol\\\";\\nimport \\\"../governance/interfaces/ILockedGold.sol\\\";\\nimport \\\"../governance/interfaces/ILockedCelo.sol\\\";\\nimport \\\"../governance/interfaces/IValidators.sol\\\";\\n\\nimport \\\"../identity/interfaces/IRandom.sol\\\";\\nimport \\\"../identity/interfaces/IAttestations.sol\\\";\\n\\nimport \\\"../../lib/mento-core/contracts/interfaces/IExchange.sol\\\";\\nimport \\\"../../lib/mento-core/contracts/interfaces/IReserve.sol\\\";\\nimport \\\"../../lib/mento-core/contracts/interfaces/IStableToken.sol\\\";\\nimport \\\"../stability/interfaces/ISortedOracles.sol\\\";\\n\\ncontract UsingRegistry is Ownable {\\n  // solhint-disable state-visibility\\n  bytes32 constant ACCOUNTS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Accounts\\\"));\\n  bytes32 constant ATTESTATIONS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Attestations\\\"));\\n  bytes32 constant DOWNTIME_SLASHER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"DowntimeSlasher\\\"));\\n  bytes32 constant DOUBLE_SIGNING_SLASHER_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"DoubleSigningSlasher\\\"));\\n  bytes32 constant ELECTION_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Election\\\"));\\n  bytes32 constant EXCHANGE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Exchange\\\"));\\n  bytes32 constant FEE_CURRENCY_WHITELIST_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"FeeCurrencyWhitelist\\\"));\\n  bytes32 constant FREEZER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Freezer\\\"));\\n  bytes32 constant GOLD_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"GoldToken\\\"));\\n  bytes32 constant GOVERNANCE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Governance\\\"));\\n  bytes32 constant GOVERNANCE_SLASHER_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"GovernanceSlasher\\\"));\\n  bytes32 constant LOCKED_GOLD_REGISTRY_ID = keccak256(abi.encodePacked(\\\"LockedGold\\\"));\\n  bytes32 constant RESERVE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Reserve\\\"));\\n  bytes32 constant RANDOM_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Random\\\"));\\n  bytes32 constant SORTED_ORACLES_REGISTRY_ID = keccak256(abi.encodePacked(\\\"SortedOracles\\\"));\\n  bytes32 constant STABLE_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"StableToken\\\"));\\n  bytes32 constant VALIDATORS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Validators\\\"));\\n\\n  bytes32 constant CELO_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"CeloToken\\\"));\\n  bytes32 constant LOCKED_CELO_REGISTRY_ID = keccak256(abi.encodePacked(\\\"LockedCelo\\\"));\\n  bytes32 constant CELO_UNRELEASED_TREASURY_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"CeloUnreleasedTreasury\\\"));\\n  bytes32 constant EPOCH_REWARDS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"EpochRewards\\\"));\\n  bytes32 constant EPOCH_MANAGER_ENABLER_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"EpochManagerEnabler\\\"));\\n  bytes32 constant EPOCH_MANAGER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"EpochManager\\\"));\\n  // solhint-enable state-visibility\\n\\n  IRegistry public registry;\\n\\n  event RegistrySet(address indexed registryAddress);\\n\\n  modifier onlyRegisteredContract(bytes32 identifierHash) {\\n    require(registry.getAddressForOrDie(identifierHash) == msg.sender, \\\"only registered contract\\\");\\n    _;\\n  }\\n\\n  modifier onlyRegisteredContracts(bytes32[] memory identifierHashes) {\\n    require(registry.isOneOf(identifierHashes, msg.sender), \\\"only registered contracts\\\");\\n    _;\\n  }\\n\\n  /**\\n   * @notice Updates the address pointing to a Registry contract.\\n   * @param registryAddress The address of a registry contract for routing to other contracts.\\n   */\\n  function setRegistry(address registryAddress) public onlyOwner {\\n    require(registryAddress != address(0), \\\"Cannot register the null address\\\");\\n    registry = IRegistry(registryAddress);\\n    emit RegistrySet(registryAddress);\\n  }\\n\\n  function getAccounts() internal view returns (IAccounts) {\\n    return IAccounts(registry.getAddressForOrDie(ACCOUNTS_REGISTRY_ID));\\n  }\\n\\n  function getAttestations() internal view returns (IAttestations) {\\n    return IAttestations(registry.getAddressForOrDie(ATTESTATIONS_REGISTRY_ID));\\n  }\\n\\n  function getElection() internal view returns (IElection) {\\n    return IElection(registry.getAddressForOrDie(ELECTION_REGISTRY_ID));\\n  }\\n\\n  function getExchange() internal view returns (IExchange) {\\n    return IExchange(registry.getAddressForOrDie(EXCHANGE_REGISTRY_ID));\\n  }\\n\\n  function getFeeCurrencyWhitelistRegistry() internal view returns (IFeeCurrencyWhitelist) {\\n    return IFeeCurrencyWhitelist(registry.getAddressForOrDie(FEE_CURRENCY_WHITELIST_REGISTRY_ID));\\n  }\\n\\n  function getFreezer() internal view returns (IFreezer) {\\n    return IFreezer(registry.getAddressForOrDie(FREEZER_REGISTRY_ID));\\n  }\\n\\n  function getGoldToken() internal view returns (IERC20) {\\n    return IERC20(registry.getAddressForOrDie(GOLD_TOKEN_REGISTRY_ID));\\n  }\\n  function getCeloToken() internal view returns (IERC20) {\\n    return IERC20(registry.getAddressForOrDie(CELO_TOKEN_REGISTRY_ID));\\n  }\\n\\n  function getGovernance() internal view returns (IGovernance) {\\n    return IGovernance(registry.getAddressForOrDie(GOVERNANCE_REGISTRY_ID));\\n  }\\n\\n  function getLockedGold() internal view returns (ILockedGold) {\\n    return ILockedGold(registry.getAddressForOrDie(LOCKED_GOLD_REGISTRY_ID));\\n  }\\n  function getLockedCelo() internal view returns (ILockedCelo) {\\n    return ILockedCelo(registry.getAddressForOrDie(LOCKED_CELO_REGISTRY_ID));\\n  }\\n\\n  function getRandom() internal view returns (IRandom) {\\n    return IRandom(registry.getAddressForOrDie(RANDOM_REGISTRY_ID));\\n  }\\n\\n  function getReserve() internal view returns (IReserve) {\\n    return IReserve(registry.getAddressForOrDie(RESERVE_REGISTRY_ID));\\n  }\\n\\n  function getSortedOracles() internal view returns (ISortedOracles) {\\n    return ISortedOracles(registry.getAddressForOrDie(SORTED_ORACLES_REGISTRY_ID));\\n  }\\n\\n  function getStableToken() internal view returns (IStableToken) {\\n    return IStableToken(registry.getAddressForOrDie(STABLE_TOKEN_REGISTRY_ID));\\n  }\\n\\n  function getValidators() internal view returns (IValidators) {\\n    return IValidators(registry.getAddressForOrDie(VALIDATORS_REGISTRY_ID));\\n  }\\n\\n  function getCeloUnreleasedTreasury() internal view returns (ICeloUnreleasedTreasury) {\\n    return\\n      ICeloUnreleasedTreasury(registry.getAddressForOrDie(CELO_UNRELEASED_TREASURY_REGISTRY_ID));\\n  }\\n\\n  function getEpochRewards() internal view returns (IEpochRewards) {\\n    return IEpochRewards(registry.getAddressForOrDie(EPOCH_REWARDS_REGISTRY_ID));\\n  }\\n\\n  function getEpochManager() internal view returns (IEpochManager) {\\n    return IEpochManager(registry.getAddressForOrDie(EPOCH_MANAGER_REGISTRY_ID));\\n  }\\n}\\n\",\"keccak256\":\"0x222b1e45ff35146f456cde2a44ab2990aaa303c8df848934a78f87af2776ccda\"},\"project:/contracts/common/interfaces/IAccounts.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IAccounts {\\n  function setAccountDataEncryptionKey(bytes calldata) external;\\n  function setMetadataURL(string calldata) external;\\n  function setName(string calldata) external;\\n  function setWalletAddress(address, uint8, bytes32, bytes32) external;\\n  function setAccount(string calldata, bytes calldata, address, uint8, bytes32, bytes32) external;\\n\\n  function authorizeVoteSigner(address, uint8, bytes32, bytes32) external;\\n  function authorizeValidatorSigner(address, uint8, bytes32, bytes32) external;\\n  function authorizeValidatorSignerWithPublicKey(\\n    address,\\n    uint8,\\n    bytes32,\\n    bytes32,\\n    bytes calldata\\n  ) external;\\n  function authorizeValidatorSignerWithKeys(\\n    address,\\n    uint8,\\n    bytes32,\\n    bytes32,\\n    bytes calldata,\\n    bytes calldata,\\n    bytes calldata\\n  ) external;\\n  function authorizeAttestationSigner(address, uint8, bytes32, bytes32) external;\\n  function setEip712DomainSeparator() external;\\n  function createAccount() external returns (bool);\\n\\n  function setPaymentDelegation(address, uint256) external;\\n\\n  function isAccount(address) external view returns (bool);\\n  function voteSignerToAccount(address) external view returns (address);\\n  function validatorSignerToAccount(address) external view returns (address);\\n  function attestationSignerToAccount(address) external view returns (address);\\n  function signerToAccount(address) external view returns (address);\\n  function getAttestationSigner(address) external view returns (address);\\n  function getValidatorSigner(address) external view returns (address);\\n  function getVoteSigner(address) external view returns (address);\\n  function hasAuthorizedVoteSigner(address) external view returns (bool);\\n  function hasAuthorizedValidatorSigner(address) external view returns (bool);\\n  function hasAuthorizedAttestationSigner(address) external view returns (bool);\\n\\n  function batchGetMetadataURL(\\n    address[] calldata\\n  ) external view returns (uint256[] memory, bytes memory);\\n\\n  function getDataEncryptionKey(address) external view returns (bytes memory);\\n  function getWalletAddress(address) external view returns (address);\\n  function getMetadataURL(address) external view returns (string memory);\\n\\n  function getName(address) external view returns (string memory);\\n\\n  function getPaymentDelegation(address) external view returns (address, uint256);\\n  function isSigner(address, address, bytes32) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xd316739cfeeed50b89bd45a4596abf71fac174f10c2a24dbf352a53b2bab2dc1\"},\"project:/contracts/common/interfaces/ICeloUnreleasedTreasury.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ICeloUnreleasedTreasury {\\n  /**\\n   * @notice Releases the Celo to the specified address.\\n   * @param to The address to release the amount to.\\n   * @param amount The amount to release.\\n   */\\n  function release(address to, uint256 amount) external;\\n\\n  function getRemainingBalanceToRelease() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x41f4cda8fd14ba24261d9e6ef9c2f62ac15432ac78107e74045d2a880b50df82\"},\"project:/contracts/common/interfaces/ICeloVersionedContract.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ICeloVersionedContract {\\n  /**\\n   * @notice Returns the storage, major, minor, and patch version of the contract.\\n   * @return Storage version of the contract.\\n   * @return Major version of the contract.\\n   * @return Minor version of the contract.\\n   * @return Patch version of the contract.\\n   */\\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256);\\n}\\n\",\"keccak256\":\"0x3ce622e646f0bd7cce110045bf6cde1fd84242e9c8ee73a27e56956f0b1fb128\"},\"project:/contracts/common/interfaces/IEpochManager.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IEpochManager {\\n  function initializeSystem(\\n    uint256 firstEpochNumber,\\n    uint256 firstEpochBlock,\\n    address[] calldata firstElected\\n  ) external;\\n  function startNextEpochProcess() external;\\n  function finishNextEpochProcess(\\n    address[] calldata groups,\\n    address[] calldata lessers,\\n    address[] calldata greaters\\n  ) external;\\n  function setToProcessGroups() external;\\n  function processGroup(address group, address lesser, address greater) external;\\n  function sendValidatorPayment(address) external;\\n  function getCurrentEpoch() external view returns (uint256, uint256, uint256, uint256);\\n  function getEpochByNumber(\\n    uint256 epochNumber\\n  ) external view returns (uint256, uint256, uint256, uint256);\\n  function getEpochByBlockNumber(\\n    uint256 blockNumber\\n  ) external view returns (uint256, uint256, uint256, uint256);\\n  function getEpochNumberOfBlock(uint256) external view returns (uint256);\\n  function getCurrentEpochNumber() external view returns (uint256);\\n  function numberOfElectedInCurrentSet() external view returns (uint256);\\n  function getElectedAccounts() external view returns (address[] memory);\\n  function getElectedAccountByIndex(uint256 index) external view returns (address);\\n  function getElectedSigners() external view returns (address[] memory);\\n  function getElectedSignerByIndex(uint256 index) external view returns (address);\\n  function epochDuration() external view returns (uint256);\\n  function firstKnownEpoch() external view returns (uint256);\\n  function getEpochProcessingState()\\n    external\\n    view\\n    returns (uint256, uint256, uint256, uint256, uint256);\\n  function systemAlreadyInitialized() external view returns (bool);\\n  function isBlocked() external view returns (bool);\\n  function isTimeForNextEpoch() external view returns (bool);\\n  function isOnEpochProcess() external view returns (bool);\\n  function getFirstBlockAtEpoch(uint256) external view returns (uint256);\\n  function getLastBlockAtEpoch(uint256) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xc019958b7b5281fbfcd3c31b49d6ab29192ab4138de175a404bf0c17cccf9350\"},\"project:/contracts/common/interfaces/IFeeCurrencyWhitelist.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IFeeCurrencyWhitelist {\\n  function initialize() external;\\n  function addToken(address) external;\\n  function getWhitelist() external view returns (address[] memory);\\n}\\n\",\"keccak256\":\"0xa732071c691bf1ba84774ac5301fa5b18e1ecf6ea6f6210ecac00f5130341621\"},\"project:/contracts/common/interfaces/IFeeHandlerSeller.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IFeeHandlerSeller {\\n  function sell(\\n    address sellTokenAddress,\\n    address buyTokenAddress,\\n    uint256 amount,\\n    uint256 minAmount\\n  ) external returns (uint256);\\n  // in case some funds need to be returned or moved to another contract\\n  function transfer(address token, uint256 amount, address to) external returns (bool);\\n}\\n\",\"keccak256\":\"0x24e5784f088d67578e1ea00a118e0fc2e79cf610fc89d0ca7a3f23bc33a0da4e\"},\"project:/contracts/common/interfaces/IFreezer.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IFreezer {\\n  function freeze(address target) external;\\n  function unfreeze(address target) external;\\n  function isFrozen(address) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x31cee67b005413c61d6aa90d2899e6a37257cd4c026d8422249b397131a10755\"},\"project:/contracts/common/interfaces/IRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IRegistry {\\n  function setAddressFor(string calldata, address) external;\\n  function getAddressForOrDie(bytes32) external view returns (address);\\n  function getAddressFor(bytes32) external view returns (address);\\n  function getAddressForStringOrDie(string calldata identifier) external view returns (address);\\n  function getAddressForString(string calldata identifier) external view returns (address);\\n  function isOneOf(bytes32[] calldata, address) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x7737cbda6f3519bf6a4108e07b2c991a655e8731a4c040a3681e9629cfc4b52d\"},\"project:/contracts/governance/interfaces/IElection.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IElection {\\n  function vote(address, uint256, address, address) external returns (bool);\\n  function activate(address) external returns (bool);\\n  function revokeActive(address, uint256, address, address, uint256) external returns (bool);\\n  function revokeAllActive(address, address, address, uint256) external returns (bool);\\n  function revokePending(address, uint256, address, address, uint256) external returns (bool);\\n  function markGroupIneligible(address) external;\\n  function markGroupEligible(address, address, address) external;\\n  function allowedToVoteOverMaxNumberOfGroups(address) external returns (bool);\\n  function forceDecrementVotes(\\n    address,\\n    uint256,\\n    address[] calldata,\\n    address[] calldata,\\n    uint256[] calldata\\n  ) external returns (uint256);\\n  function setAllowedToVoteOverMaxNumberOfGroups(bool flag) external;\\n\\n  // only owner\\n  function setElectableValidators(uint256, uint256) external returns (bool);\\n  function setMaxNumGroupsVotedFor(uint256) external returns (bool);\\n  function setElectabilityThreshold(uint256) external returns (bool);\\n\\n  // only VM\\n  function distributeEpochRewards(address, uint256, address, address) external;\\n\\n  // view functions\\n  function electValidatorSigners() external view returns (address[] memory);\\n  function electValidatorAccounts() external view returns (address[] memory);\\n  function electNValidatorSigners(uint256, uint256) external view returns (address[] memory);\\n  function electNValidatorAccounts(uint256, uint256) external view returns (address[] memory);\\n  function getElectableValidators() external view returns (uint256, uint256);\\n  function getElectabilityThreshold() external view returns (uint256);\\n  function getNumVotesReceivable(address) external view returns (uint256);\\n  function getTotalVotes() external view returns (uint256);\\n  function getActiveVotes() external view returns (uint256);\\n  function getTotalVotesByAccount(address) external view returns (uint256);\\n  function getPendingVotesForGroupByAccount(address, address) external view returns (uint256);\\n  function getActiveVotesForGroupByAccount(address, address) external view returns (uint256);\\n  function getTotalVotesForGroupByAccount(address, address) external view returns (uint256);\\n  function getActiveVoteUnitsForGroupByAccount(address, address) external view returns (uint256);\\n  function getTotalVotesForGroup(address) external view returns (uint256);\\n  function getActiveVotesForGroup(address) external view returns (uint256);\\n  function getPendingVotesForGroup(address) external view returns (uint256);\\n  function getGroupEligibility(address) external view returns (bool);\\n  function getGroupEpochRewards(\\n    address,\\n    uint256,\\n    uint256[] calldata\\n  ) external view returns (uint256);\\n  function getGroupEpochRewardsBasedOnScore(\\n    address group,\\n    uint256 totalEpochRewards,\\n    uint256 groupScore\\n  ) external view returns (uint256);\\n  function getGroupsVotedForByAccount(address) external view returns (address[] memory);\\n  function getEligibleValidatorGroups() external view returns (address[] memory);\\n  function getTotalVotesForEligibleValidatorGroups()\\n    external\\n    view\\n    returns (address[] memory, uint256[] memory);\\n  function getCurrentValidatorSigners() external view returns (address[] memory);\\n  function canReceiveVotes(address, uint256) external view returns (bool);\\n  function hasActivatablePendingVotes(address, address) external view returns (bool);\\n  function validatorSignerAddressFromCurrentSet(uint256 index) external view returns (address);\\n  function numberValidatorsInCurrentSet() external view returns (uint256);\\n  function owner() external view returns (address);\\n}\\n\",\"keccak256\":\"0x598e1f22422d01cd2feccff34c5c276c388209058d7fab3d770e25fa8dec9e59\"},\"project:/contracts/governance/interfaces/IEpochRewards.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IEpochRewards {\\n  function updateTargetVotingYield() external;\\n  function isReserveLow() external view returns (bool);\\n  function calculateTargetEpochRewards() external view returns (uint256, uint256, uint256, uint256);\\n  function getTargetVotingYieldParameters() external view returns (uint256, uint256, uint256);\\n  function getRewardsMultiplierParameters() external view returns (uint256, uint256, uint256);\\n  function getCommunityRewardFraction() external view returns (uint256);\\n  function getCarbonOffsettingFraction() external view returns (uint256);\\n  function getTargetVotingGoldFraction() external view returns (uint256);\\n  function getRewardsMultiplier() external view returns (uint256);\\n  function carbonOffsettingPartner() external view returns (address);\\n}\\n\",\"keccak256\":\"0xfa534a0dc188ffd55595c6edb28b2e4ac9f036022a644b3a61e6a12097e14788\"},\"project:/contracts/governance/interfaces/IGovernance.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IGovernance {\\n  function removeVotesWhenRevokingDelegatedVotes(\\n    address account,\\n    uint256 maxAmountAllowed\\n  ) external;\\n  function votePartially(\\n    uint256 proposalId,\\n    uint256 index,\\n    uint256 yesVotes,\\n    uint256 noVotes,\\n    uint256 abstainVotes\\n  ) external returns (bool);\\n\\n  function setConstitution(address destination, bytes4 functionId, uint256 threshold) external;\\n\\n  function isVoting(address) external view returns (bool);\\n  function getAmountOfGoldUsedForVoting(address account) external view returns (uint256);\\n\\n  function getProposal(\\n    uint256 proposalId\\n  ) external view returns (address, uint256, uint256, uint256, string memory, uint256, bool);\\n\\n  function getReferendumStageDuration() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x8780295e0ecffc9870c59ed17fd4f50902117227157dd060db19d2ebbaaf3d2b\"},\"project:/contracts/governance/interfaces/ILockedCelo.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ILockedCelo {\\n  function lock() external payable;\\n  function incrementNonvotingAccountBalance(address, uint256) external;\\n  function decrementNonvotingAccountBalance(address, uint256) external;\\n\\n  function unlock(uint256) external;\\n  function relock(uint256, uint256) external;\\n  function withdraw(uint256) external;\\n  function slash(\\n    address account,\\n    uint256 penalty,\\n    address reporter,\\n    uint256 reward,\\n    address[] calldata lessers,\\n    address[] calldata greaters,\\n    uint256[] calldata indices\\n  ) external;\\n  function addSlasher(string calldata slasherIdentifier) external;\\n\\n  function getAccountNonvotingLockedGold(address account) external view returns (uint256);\\n  function getAccountTotalLockedCelo(address) external view returns (uint256);\\n  function getTotalLockedCelo() external view returns (uint256);\\n  function getPendingWithdrawals(\\n    address\\n  ) external view returns (uint256[] memory, uint256[] memory);\\n  function getPendingWithdrawal(\\n    address account,\\n    uint256 index\\n  ) external view returns (uint256, uint256);\\n  function getTotalPendingWithdrawals(address) external view returns (uint256);\\n  function isSlasher(address) external view returns (bool);\\n\\n  function getAccountTotalDelegatedFraction(address account) external view returns (uint256);\\n\\n  function getAccountTotalGovernanceVotingPower(address account) external view returns (uint256);\\n  function unlockingPeriod() external view returns (uint256);\\n  function getAccountNonvotingLockedCelo(address account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x41cd5970ccc5612c9cd9cdf89a299a3cff0d8984d0b16ffad14da7670424920b\"},\"project:/contracts/governance/interfaces/ILockedGold.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ILockedGold {\\n  function lock() external payable;\\n  function incrementNonvotingAccountBalance(address, uint256) external;\\n  function decrementNonvotingAccountBalance(address, uint256) external;\\n\\n  function unlock(uint256) external;\\n  function relock(uint256, uint256) external;\\n  function withdraw(uint256) external;\\n  function slash(\\n    address account,\\n    uint256 penalty,\\n    address reporter,\\n    uint256 reward,\\n    address[] calldata lessers,\\n    address[] calldata greaters,\\n    uint256[] calldata indices\\n  ) external;\\n  function addSlasher(string calldata slasherIdentifier) external;\\n\\n  function getAccountTotalLockedGold(address) external view returns (uint256);\\n  function getTotalLockedGold() external view returns (uint256);\\n  function getPendingWithdrawals(\\n    address\\n  ) external view returns (uint256[] memory, uint256[] memory);\\n  function getPendingWithdrawal(\\n    address account,\\n    uint256 index\\n  ) external view returns (uint256, uint256);\\n  function getTotalPendingWithdrawals(address) external view returns (uint256);\\n  function isSlasher(address) external view returns (bool);\\n\\n  function getAccountTotalDelegatedFraction(address account) external view returns (uint256);\\n\\n  function getAccountTotalGovernanceVotingPower(address account) external view returns (uint256);\\n  function unlockingPeriod() external view returns (uint256);\\n  function getAccountNonvotingLockedGold(address account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x4ab7ee32f3cbac55e91ef1087ba3e8bbdd784833faa2b9b7e1d66ff662800227\"},\"project:/contracts/governance/interfaces/IValidators.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IValidators {\\n  function registerValidator(\\n    bytes calldata,\\n    bytes calldata,\\n    bytes calldata\\n  ) external returns (bool);\\n  function registerValidatorNoBls(bytes calldata ecdsaPublicKey) external returns (bool);\\n  function deregisterValidator(uint256) external returns (bool);\\n  function affiliate(address) external returns (bool);\\n  function deaffiliate() external returns (bool);\\n  function updateBlsPublicKey(bytes calldata, bytes calldata) external returns (bool);\\n  function registerValidatorGroup(uint256) external returns (bool);\\n  function deregisterValidatorGroup(uint256) external returns (bool);\\n  function addMember(address) external returns (bool);\\n  function addFirstMember(address, address, address) external returns (bool);\\n  function removeMember(address) external returns (bool);\\n  function reorderMember(address, address, address) external returns (bool);\\n  function updateCommission() external;\\n  function setNextCommissionUpdate(uint256) external;\\n  function resetSlashingMultiplier() external;\\n\\n  // only owner\\n  function setCommissionUpdateDelay(uint256) external;\\n  function setMaxGroupSize(uint256) external returns (bool);\\n  function setMembershipHistoryLength(uint256) external returns (bool);\\n  function setValidatorScoreParameters(uint256, uint256) external returns (bool);\\n  function setGroupLockedGoldRequirements(uint256, uint256) external returns (bool);\\n  function setValidatorLockedGoldRequirements(uint256, uint256) external returns (bool);\\n  function setSlashingMultiplierResetPeriod(uint256) external;\\n  function setDowntimeGracePeriod(uint256 value) external;\\n\\n  // only registered contract\\n  function updateEcdsaPublicKey(address, address, bytes calldata) external returns (bool);\\n  function updatePublicKeys(\\n    address,\\n    address,\\n    bytes calldata,\\n    bytes calldata,\\n    bytes calldata\\n  ) external returns (bool);\\n  function mintStableToEpochManager(uint256 amount) external;\\n\\n  // only VM\\n  function updateValidatorScoreFromSigner(address, uint256) external;\\n  function distributeEpochPaymentsFromSigner(address, uint256) external returns (uint256);\\n\\n  // only slasher\\n  function forceDeaffiliateIfValidator(address) external;\\n  function halveSlashingMultiplier(address) external;\\n\\n  // view functions\\n  function maxGroupSize() external view returns (uint256);\\n  function downtimeGracePeriod() external view returns (uint256);\\n  function getCommissionUpdateDelay() external view returns (uint256);\\n  function getValidatorScoreParameters() external view returns (uint256, uint256);\\n  function getMembershipHistory(\\n    address\\n  ) external view returns (uint256[] memory, address[] memory, uint256, uint256);\\n  function calculateEpochScore(uint256) external view returns (uint256);\\n  function calculateGroupEpochScore(uint256[] calldata) external view returns (uint256);\\n  function getAccountLockedGoldRequirement(address) external view returns (uint256);\\n  function meetsAccountLockedGoldRequirements(address) external view returns (bool);\\n  function getValidatorBlsPublicKeyFromSigner(address) external view returns (bytes memory);\\n  function getValidator(\\n    address account\\n  ) external view returns (bytes memory, bytes memory, address, uint256, address);\\n  function getValidatorsGroup(address account) external view returns (address affiliation);\\n  function getValidatorGroup(\\n    address\\n  )\\n    external\\n    view\\n    returns (address[] memory, uint256, uint256, uint256, uint256[] memory, uint256, uint256);\\n  function getGroupNumMembers(address) external view returns (uint256);\\n  function getTopGroupValidators(address, uint256) external view returns (address[] memory);\\n  function getTopGroupValidatorsAccounts(address, uint256) external view returns (address[] memory);\\n  function getGroupsNumMembers(\\n    address[] calldata accounts\\n  ) external view returns (uint256[] memory);\\n  function getNumRegisteredValidators() external view returns (uint256);\\n  function groupMembershipInEpoch(address, uint256, uint256) external view returns (address);\\n\\n  function getValidatorLockedGoldRequirements() external view returns (uint256, uint256);\\n  function getGroupLockedGoldRequirements() external view returns (uint256, uint256);\\n  function getRegisteredValidators() external view returns (address[] memory);\\n  function getRegisteredValidatorGroups() external view returns (address[] memory);\\n  function isValidatorGroup(address) external view returns (bool);\\n  function isValidator(address) external view returns (bool);\\n  function getValidatorGroupSlashingMultiplier(address) external view returns (uint256);\\n  function getMembershipInLastEpoch(address) external view returns (address);\\n  function getMembershipInLastEpochFromSigner(address) external view returns (address);\\n  function computeEpochReward(\\n    address account,\\n    uint256 score,\\n    uint256 maxPayment\\n  ) external view returns (uint256);\\n  function getMembershipHistoryLength() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x78a09c1b3e80fbb1a8fd907575a71e181d100a09d999ea5c032140efbeeeb90f\"},\"project:/contracts/identity/interfaces/IAttestations.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IAttestations {\\n  function revoke(bytes32, uint256) external;\\n  function withdraw(address) external;\\n\\n  // only owner\\n  function setAttestationRequestFee(address, uint256) external;\\n  function setAttestationExpiryBlocks(uint256) external;\\n  function setSelectIssuersWaitBlocks(uint256) external;\\n  function setMaxAttestations(uint256) external;\\n\\n  // view functions\\n  function getUnselectedRequest(bytes32, address) external view returns (uint32, uint32, address);\\n  function getAttestationIssuers(bytes32, address) external view returns (address[] memory);\\n  function getAttestationStats(bytes32, address) external view returns (uint32, uint32);\\n  function batchGetAttestationStats(\\n    bytes32[] calldata\\n  ) external view returns (uint256[] memory, address[] memory, uint64[] memory, uint64[] memory);\\n  function getAttestationState(\\n    bytes32,\\n    address,\\n    address\\n  ) external view returns (uint8, uint32, address);\\n  function getCompletableAttestations(\\n    bytes32,\\n    address\\n  ) external view returns (uint32[] memory, address[] memory, uint256[] memory, bytes memory);\\n  function getAttestationRequestFee(address) external view returns (uint256);\\n  function getMaxAttestations() external view returns (uint256);\\n  function validateAttestationCode(\\n    bytes32,\\n    address,\\n    uint8,\\n    bytes32,\\n    bytes32\\n  ) external view returns (address);\\n  function lookupAccountsForIdentifier(bytes32) external view returns (address[] memory);\\n  function requireNAttestationsRequested(bytes32, address, uint32) external view;\\n}\\n\",\"keccak256\":\"0x6afd5f303e153798b15448e0206ed5e645b6e2f2e46762cb17c5b665e256cdb2\"},\"project:/contracts/identity/interfaces/IRandom.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IRandom {\\n  function revealAndCommit(bytes32, bytes32, address) external;\\n  function randomnessBlockRetentionWindow() external view returns (uint256);\\n  function random() external view returns (bytes32);\\n  function getBlockRandomness(uint256) external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xdb545530be6397d23692e4465f4514cf3c87c1d4f553323964694818c375c08d\"},\"project:/contracts/stability/interfaces/ISortedOracles.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ISortedOracles {\\n  function addOracle(address, address) external;\\n  function removeOracle(address, address, uint256) external;\\n  function report(address, uint256, address, address) external;\\n  function removeExpiredReports(address, uint256) external;\\n  function isOldestReportExpired(address token) external view returns (bool, address);\\n  function numRates(address) external view returns (uint256);\\n  function medianRate(address) external view returns (uint256, uint256);\\n  function numTimestamps(address) external view returns (uint256);\\n  function medianTimestamp(address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xc9d69b608b060effe4a0b246e7fad096b524b848aa51d8f4eccad36c1aa0479d\"},\"project:/contracts/uniswap/interfaces/IUniswapV2FactoryMin.sol\":{\"content\":\"pragma solidity >=0.5.0;\\n\\ninterface IUniswapV2FactoryMin {\\n  function getPair(address tokenA, address tokenB) external view returns (address pair);\\n}\\n\",\"keccak256\":\"0x2ab073e0725236442e0cc8c412f5fac5a504192ae57b2f6510b72a9e22171aa8\"},\"project:/contracts/uniswap/interfaces/IUniswapV2RouterMin.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\ninterface IUniswapV2RouterMin {\\n  function swapExactTokensForTokens(\\n    uint256 amountIn,\\n    uint256 amountOutMin,\\n    address[] calldata path,\\n    address to,\\n    uint256 deadline\\n  ) external returns (uint256[] memory amounts);\\n  function getAmountsOut(\\n    uint256 amountIn,\\n    address[] calldata path\\n  ) external view returns (uint256[] memory amounts);\\n  function factory() external pure returns (address);\\n}\\n\",\"keccak256\":\"0x4001f9772fc42aa21b09a3b6dfa5492f28bbd98b71b77468e82f7f5698c76c56\"},\"project:/lib/mento-core/contracts/interfaces/IExchange.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\ninterface IExchange {\\n    function buy(\\n        uint256,\\n        uint256,\\n        bool\\n    ) external returns (uint256);\\n\\n    function sell(\\n        uint256,\\n        uint256,\\n        bool\\n    ) external returns (uint256);\\n\\n    function exchange(\\n        uint256,\\n        uint256,\\n        bool\\n    ) external returns (uint256);\\n\\n    function setUpdateFrequency(uint256) external;\\n\\n    function getBuyTokenAmount(uint256, bool) external view returns (uint256);\\n\\n    function getSellTokenAmount(uint256, bool) external view returns (uint256);\\n\\n    function getBuyAndSellBuckets(bool) external view returns (uint256, uint256);\\n}\\n\",\"keccak256\":\"0x320488022d1066ac81797b9e7a3dc303d1c8e9a48597972d4686e00f9554ade9\"},\"project:/lib/mento-core/contracts/interfaces/IReserve.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\ninterface IReserve {\\n    function setTobinTaxStalenessThreshold(uint256) external;\\n\\n    function addToken(address) external returns (bool);\\n\\n    function removeToken(address, uint256) external returns (bool);\\n\\n    function transferGold(address payable, uint256) external returns (bool);\\n\\n    function transferExchangeGold(address payable, uint256) external returns (bool);\\n\\n    function getReserveGoldBalance() external view returns (uint256);\\n\\n    function getUnfrozenReserveGoldBalance() external view returns (uint256);\\n\\n    function getOrComputeTobinTax() external returns (uint256, uint256);\\n\\n    function getTokens() external view returns (address[] memory);\\n\\n    function getReserveRatio() external view returns (uint256);\\n\\n    function addExchangeSpender(address) external;\\n\\n    function removeExchangeSpender(address, uint256) external;\\n\\n    function addSpender(address) external;\\n\\n    function removeSpender(address) external;\\n}\\n\",\"keccak256\":\"0x9162b458dc21fe7e6cfc5d4722b3db3001b1c54ecdcefa703ff9d902084150b7\"},\"project:/lib/mento-core/contracts/interfaces/IStableToken.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\n/**\\n * @title This interface describes the functions specific to Celo Stable Tokens, and in the\\n * absence of interface inheritance is intended as a companion to IERC20.sol and ICeloToken.sol.\\n */\\ninterface IStableToken {\\n    function mint(address, uint256) external returns (bool);\\n\\n    function burn(uint256) external returns (bool);\\n\\n    function setInflationParameters(uint256, uint256) external;\\n\\n    function valueToUnits(uint256) external view returns (uint256);\\n\\n    function unitsToValue(uint256) external view returns (uint256);\\n\\n    function getInflationParameters()\\n        external\\n        view\\n        returns (\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256\\n        );\\n\\n    // NOTE: duplicated with IERC20.sol, remove once interface inheritance is supported.\\n    function balanceOf(address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xcb6440c9b161b26a5b062e6c74d6fd1ed9736f292161c757406a9c39e942d20a\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162003bfb38038062003bfb833981810160405260208110156200003757600080fd5b81019080805190602001909291905050508060006200005b6200012360201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350806200011b576001600060146101000a81548160ff0219169083151502179055505b50506200012b565b600033905090565b613ac0806200013b6000396000f3fe60806040526004361061011f5760003560e01c806371eb125e116100a0578063a91ee0dc11610064578063a91ee0dc146106f8578063dbba0f0114610749578063e4187b13146107dc578063f2fde38b14610849578063ff1d57521461089a5761011f565b806371eb125e1461051957806373f0a070146105aa5780637b1039991461061b5780638da5cb5b146106725780638f32d59b146106c95761011f565b806346093b0e116100e757806346093b0e1461035b5780634e008cdb146103cc57806354255be0146104315780635448217314610471578063715018a6146105025761011f565b80630c2fef1414610121578063158ef93e146101c75780632f257aa0146101f657806331de7d151461025157806341d68b8f146102ea575b005b34801561012d57600080fd5b506101706004803603602081101561014457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610995565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156101b3578082015181840152602081019050610198565b505050509050019250505060405180910390f35b3480156101d357600080fd5b506101dc610a65565b604051808215151515815260200191505060405180910390f35b34801561020257600080fd5b5061024f6004803603604081101561021957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a78565b005b34801561025d57600080fd5b506102d46004803603608081101561027457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610b00565b6040518082815260200191505060405180910390f35b3480156102f657600080fd5b506103596004803603604081101561030d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061165d565b005b34801561036757600080fd5b506103ca6004803603604081101561037e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116e5565b005b3480156103d857600080fd5b5061041b600480360360208110156103ef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611878565b6040518082815260200191505060405180910390f35b34801561043d57600080fd5b50610446611890565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b34801561047d57600080fd5b506104c06004803603602081101561049457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118b7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561050e57600080fd5b5061051761196a565b005b34801561052557600080fd5b506105686004803603602081101561053c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611aa3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105b657600080fd5b50610619600480360360408110156105cd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ad6565b005b34801561062757600080fd5b50610630611c3d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561067e57600080fd5b50610687611c63565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106d557600080fd5b506106de611c8c565b604051808215151515815260200191505060405180910390f35b34801561070457600080fd5b506107476004803603602081101561071b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611cea565b005b34801561075557600080fd5b506107c26004803603606081101561076c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e8e565b604051808215151515815260200191505060405180910390f35b3480156107e857600080fd5b50610833600480360360808110156107ff57600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190505050611fd5565b6040518082815260200191505060405180910390f35b34801561085557600080fd5b506108986004803603602081101561086c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061207b565b005b3480156108a657600080fd5b50610993600480360360608110156108bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156108fa57600080fd5b82018360208201111561090c57600080fd5b8035906020019184602083028401116401000000008311171561092e57600080fd5b90919293919293908035906020019064010000000081111561094f57600080fd5b82018360208201111561096157600080fd5b8035906020019184602083028401116401000000008311171561098357600080fd5b9091929391929390505050612101565b005b6060600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805480602002602001604051908101604052809291908181526020018280548015610a5957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610a0f575b50505050509050919050565b600060149054906101000a900460ff1681565b610a80611c8c565b610af2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610afc828261221b565b5050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f43656c6f546f6b656e00000000000000000000000000000000000000000000008152506009019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610bbb57600080fd5b505afa158015610bcf573d6000803e3d6000fd5b505050506040513d6020811015610be557600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610c96576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f42757920746f6b656e2063616e206f6e6c792062652043454c4f20746f6b656e81525060200191505060405180910390fd5b6000600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054905011610d34576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806139e76023913960400191505060405180910390fd5b6000610d3e6122ce565b90506000806000905060606002604051908082528060200260200182016040528015610d795781602001602082028038833980820191505090505b5090508881600081518110610d8a57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508381600181518110610dd257fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008090505b600460008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805490508110156110c4576000610eb282600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206123c990919063ffffffff16565b9050600081905060008173ffffffffffffffffffffffffffffffffffffffff1663d06ca61f8c876040518363ffffffff1660e01b81526004018083815260200180602001828103825283818151815260200191508051906020019060200280838360005b83811015610f31578082015181840152602081019050610f16565b50505050905001935050505060006040518083038186803b158015610f5557600080fd5b505afa158015610f69573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015610f9357600080fd5b8101908080516040519392919084640100000000821115610fb357600080fd5b83820191506020820185811115610fc957600080fd5b8251866020820283011164010000000082111715610fe657600080fd5b8083526020830192505050908051906020019060200280838360005b8381101561101d578082015181840152602081019050611002565b5050505090500160405250505060018151811061103657fe5b602002602001015190508273ffffffffffffffffffffffffffffffffffffffff168d73ffffffffffffffffffffffffffffffffffffffff167fba55c28acee19777ec6c603117b386d3e3b39886c0d3d53bc244be24ee6e7c84836040518082815260200191505060405180910390a3858111156110b4578095508196505b5050508080600101915050610e12565b50600082141561113c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f43616e27742065786368616e67652077697468207a65726f2071756f7465000081525060200191505060405180910390fd5b600080905061114d8a888a8761240d565b90508973ffffffffffffffffffffffffffffffffffffffff1663095ea7b3858a6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156111d657600080fd5b505af11580156111ea573d6000803e3d6000fd5b505050506040513d602081101561120057600080fd5b8101908080519060200190929190505050508373ffffffffffffffffffffffffffffffffffffffff166338ed173989838530601442016040518663ffffffff1660e01b815260040180868152602001858152602001806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b838110156112cc5780820151818401526020810190506112b1565b505050509050019650505050505050600060405180830381600087803b1580156112f557600080fd5b505af1158015611309573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561133357600080fd5b810190808051604051939291908464010000000082111561135357600080fd5b8382019150602082018581111561136957600080fd5b825186602082028301116401000000008211171561138657600080fd5b8083526020830192505050908051906020019060200280838360005b838110156113bd5780820151818401526020810190506113a2565b505050509050016040525050505060008573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561144a57600080fd5b505afa15801561145e573d6000803e3d6000fd5b505050506040513d602081101561147457600080fd5b810190808051906020019092919050505090508573ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561150e57600080fd5b505af1158015611522573d6000803e3d6000fd5b505050506040513d602081101561153857600080fd5b8101908080519060200190929190505050507f59afd9b3bf745a06d8739721397432b9f161243cee13868b9d6d6fca05b6e55185604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a17fd4cffd6979677853b45a7a17f455188a434e975ba474c5a2613c94beacea537a8b8b8b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1809650505050505050949350505050565b611665611c8c565b6116d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6116e18282612976565b5050565b6116ed611c8c565b61175f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f11036f54cd547b7d6eaa445a70d763cbd382f60946bd893bbd9aa75a88a971af8282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b60026020528060005260406000206000915090505481565b60008060008060026000806000839350829250819150809050935093509350935090919293565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146119595780915050611965565b611961612bc2565b9150505b919050565b611972611c8c565b6119e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611ade611c8c565b611b50576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611ba181600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612cbd90919063ffffffff16565b507f044c4b00bcc14b6c00430f73b8bc07f33aecb2387c7b188142d6d497342de89a8282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611cce612eab565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b611cf2611c8c565b611d64576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611e07576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f43616e6e6f7420726567697374657220746865206e756c6c206164647265737381525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b60405160405180910390a250565b6000611e98611c8c565b611f0a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611f9157600080fd5b505af1158015611fa5573d6000803e3d6000fd5b505050506040513d6020811015611fbb57600080fd5b810190808051906020019092919050505090509392505050565b6000611fdf6139d3565b611fe883612eb3565b9050611ff26139d3565b611ffc8787612ed1565b90506120066139d3565b61200f86612f13565b90506120196139d3565b61202c8284612f9d90919063ffffffff16565b905061206d6120686120598461204b8888612f9d90919063ffffffff16565b612f9d90919063ffffffff16565b836133fc90919063ffffffff16565b6134a3565b945050505050949350505050565b612083611c8c565b6120f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6120fe816134c4565b50565b600060149054906101000a900460ff1615612184576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f636f6e747261637420616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff0219169083151502179055506121a8336134c4565b6121b185611cea565b60008090505b84849050811015612213576122068585838181106121d157fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff168484848181106121fa57fe5b9050602002013561221b565b80806001019150506121b7565b505050505050565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f03cc7dddcb89dd90027bd8fa62d09d1b5c49ce5d20f8c9bb6bdeaaa62ea1718b8282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f43656c6f546f6b656e00000000000000000000000000000000000000000000008152506009019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561238957600080fd5b505afa15801561239d573d6000803e3d6000fd5b505050506040513d60208110156123b357600080fd5b8101908080519060200190929190505050905090565b60008260010182815481106123da57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b600080612419866118b7565b90506000600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600082905060008090506000831115612661576000849050838173ffffffffffffffffffffffffffffffffffffffff1663bbc66a948c6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156124f557600080fd5b505afa158015612509573d6000803e3d6000fd5b505050506040513d602081101561251f57600080fd5b81019080805190602001909291905050501015612587576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180613a666026913960400191505060405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1663efb7601d8d6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b15801561260657600080fd5b505afa15801561261a573d6000803e3d6000fd5b505050506040513d604081101561263057600080fd5b8101908080519060200190929190805190602001909291905050509150915061265b82828c8e611fd5565b93505050505b600061266b6122ce565b905060008773ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b1580156126b557600080fd5b505afa1580156126c9573d6000803e3d6000fd5b505050506040513d60208110156126df57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1663e6a439058c846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b1580156127a057600080fd5b505afa1580156127b4573d6000803e3d6000fd5b505050506040513d60208110156127ca57600080fd5b8101908080519060200190929190505050905060006129598c73ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561285f57600080fd5b505afa158015612873573d6000803e3d6000fd5b505050506040513d602081101561288957600080fd5b81019080805190602001909291905050508473ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561291757600080fd5b505afa15801561292b573d6000803e3d6000fd5b505050506040513d602081101561294157600080fd5b81019080805190602001909291905050508c8e611fd5565b90506129658185613608565b975050505050505050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612a19576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f526f757465722063616e27742062652061646472657373207a65726f0000000081525060200191505060405180910390fd5b612a6a81600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061362290919063ffffffff16565b506003600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805490501115612b27576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4d6178206e756d626572206f6620726f7574657273207265616368656400000081525060200191505060405180910390fd5b7fb3cbb74e835466bdbf8838b1acb70fa4a8b73e1a00cd5bacb9f68cf4dfc79cf38282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f536f727465644f7261636c657300000000000000000000000000000000000000815250600d019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015612c7d57600080fd5b505afa158015612c91573d6000803e3d6000fd5b505050506040513d6020811015612ca757600080fd5b8101908080519060200190929190505050905090565b6000612cc983836136f2565b15612ea057600060018460000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054039050600060018560010180549050039050818114612e0e576000856001018281548110612d3e57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905080866001018481548110612d7b57fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600183018660000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b8460000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905584600101805480612e6057fe5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055600192505050612ea5565b600090505b92915050565b600033905090565b612ebb6139d3565b6040518060200160405280838152509050919050565b612ed96139d3565b612ee16139d3565b612eea84612f13565b9050612ef46139d3565b612efd84612f13565b9050612f098282613741565b9250505092915050565b612f1b6139d3565b612f2361388a565b821115612f7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526036815260200180613a306036913960400191505060405180910390fd5b604051806020016040528069d3c21bcecceda100000084028152509050919050565b612fa56139d3565b600083600001511480612fbc575060008260000151145b15612fd8576040518060200160405280600081525090506133f6565b69d3c21bcecceda100000082600001511415612ff6578290506133f6565b69d3c21bcecceda100000083600001511415613014578190506133f6565b600069d3c21bcecceda100000061302a856138a9565b600001518161303557fe5b0490506000613043856138e0565b600001519050600069d3c21bcecceda100000061305f866138a9565b600001518161306a57fe5b0490506000613078866138e0565b600001519050600082850290506000851461310c578285828161309757fe5b041461310b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783179312064657465637465640000000000000000000081525060200191505060405180910390fd5b5b600069d3c21bcecceda100000082029050600082146131ae5769d3c21bcecceda100000082828161313957fe5b04146131ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f6f766572666c6f772078317931202a206669786564312064657465637465640081525060200191505060405180910390fd5b5b809150600084860290506000861461323f57848682816131ca57fe5b041461323e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783279312064657465637465640000000000000000000081525060200191505060405180910390fd5b5b60008488029050600088146132cd578488828161325857fe5b04146132cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783179322064657465637465640000000000000000000081525060200191505060405180910390fd5b5b6132d561391d565b87816132dd57fe5b0496506132e861391d565b85816132f057fe5b0494506000858802905060008814613381578588828161330c57fe5b0414613380576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783279322064657465637465640000000000000000000081525060200191505060405180910390fd5b5b6133896139d3565b60405180602001604052808781525090506133b28160405180602001604052808781525061392a565b90506133cc8160405180602001604052808681525061392a565b90506133e68160405180602001604052808581525061392a565b9050809a50505050505050505050505b92915050565b6134046139d3565b816000015183600001511015613482576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f737562737472616374696f6e20756e646572666c6f772064657465637465640081525060200191505060405180910390fd5b60405180602001604052808360000151856000015103815250905092915050565b600069d3c21bcecceda10000008260000151816134bc57fe5b049050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561354a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180613a0a6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081831015613618578161361a565b825b905092915050565b600061362e83836136f2565b6136e757826001018290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600190506136ec565b600090505b92915050565b6000808360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415905092915050565b6137496139d3565b6000826000015114156137c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f63616e277420646976696465206279203000000000000000000000000000000081525060200191505060405180910390fd5b600069d3c21bcecceda10000008460000151029050836000015169d3c21bcecceda100000082816137f157fe5b0414613865576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6f766572666c6f7720617420646976696465000000000000000000000000000081525060200191505060405180910390fd5b60405180602001604052808460000151838161387d57fe5b0481525091505092915050565b60007601357c299a88ea76a58924d52ce4f26a85af186c2b9e74905090565b6138b16139d3565b604051806020016040528069d3c21bcecceda1000000808560000151816138d457fe5b04028152509050919050565b6138e86139d3565b604051806020016040528069d3c21bcecceda10000008085600001518161390b57fe5b04028460000151038152509050919050565b600064e8d4a51000905090565b6139326139d3565b60008260000151846000015101905083600001518110156139bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f616464206f766572666c6f77206465746563746564000000000000000000000081525060200191505060405180910390fd5b60405180602001604052808281525091505092915050565b604051806020016040528060008152509056fe726f757465724164647265737365732073686f756c64206265206e6f6e20656d7074794f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737363616e277420637265617465206669786964697479206e756d626572206c6172676572207468616e206d61784e6577466978656428294e756d626572206f66207265706f72747320666f7220746f6b656e206e6f7420656e6f756768a265627a7a72315820ceba364f39e8c04b8480272e00ae6da6660d3626faef40eb2a1f89de506e587564736f6c634300050d0032",
  "deployedBytecode": "0x60806040526004361061011f5760003560e01c806371eb125e116100a0578063a91ee0dc11610064578063a91ee0dc146106f8578063dbba0f0114610749578063e4187b13146107dc578063f2fde38b14610849578063ff1d57521461089a5761011f565b806371eb125e1461051957806373f0a070146105aa5780637b1039991461061b5780638da5cb5b146106725780638f32d59b146106c95761011f565b806346093b0e116100e757806346093b0e1461035b5780634e008cdb146103cc57806354255be0146104315780635448217314610471578063715018a6146105025761011f565b80630c2fef1414610121578063158ef93e146101c75780632f257aa0146101f657806331de7d151461025157806341d68b8f146102ea575b005b34801561012d57600080fd5b506101706004803603602081101561014457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610995565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156101b3578082015181840152602081019050610198565b505050509050019250505060405180910390f35b3480156101d357600080fd5b506101dc610a65565b604051808215151515815260200191505060405180910390f35b34801561020257600080fd5b5061024f6004803603604081101561021957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a78565b005b34801561025d57600080fd5b506102d46004803603608081101561027457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610b00565b6040518082815260200191505060405180910390f35b3480156102f657600080fd5b506103596004803603604081101561030d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061165d565b005b34801561036757600080fd5b506103ca6004803603604081101561037e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116e5565b005b3480156103d857600080fd5b5061041b600480360360208110156103ef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611878565b6040518082815260200191505060405180910390f35b34801561043d57600080fd5b50610446611890565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b34801561047d57600080fd5b506104c06004803603602081101561049457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118b7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561050e57600080fd5b5061051761196a565b005b34801561052557600080fd5b506105686004803603602081101561053c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611aa3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105b657600080fd5b50610619600480360360408110156105cd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ad6565b005b34801561062757600080fd5b50610630611c3d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561067e57600080fd5b50610687611c63565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106d557600080fd5b506106de611c8c565b604051808215151515815260200191505060405180910390f35b34801561070457600080fd5b506107476004803603602081101561071b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611cea565b005b34801561075557600080fd5b506107c26004803603606081101561076c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e8e565b604051808215151515815260200191505060405180910390f35b3480156107e857600080fd5b50610833600480360360808110156107ff57600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190505050611fd5565b6040518082815260200191505060405180910390f35b34801561085557600080fd5b506108986004803603602081101561086c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061207b565b005b3480156108a657600080fd5b50610993600480360360608110156108bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156108fa57600080fd5b82018360208201111561090c57600080fd5b8035906020019184602083028401116401000000008311171561092e57600080fd5b90919293919293908035906020019064010000000081111561094f57600080fd5b82018360208201111561096157600080fd5b8035906020019184602083028401116401000000008311171561098357600080fd5b9091929391929390505050612101565b005b6060600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805480602002602001604051908101604052809291908181526020018280548015610a5957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610a0f575b50505050509050919050565b600060149054906101000a900460ff1681565b610a80611c8c565b610af2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610afc828261221b565b5050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f43656c6f546f6b656e00000000000000000000000000000000000000000000008152506009019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610bbb57600080fd5b505afa158015610bcf573d6000803e3d6000fd5b505050506040513d6020811015610be557600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610c96576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f42757920746f6b656e2063616e206f6e6c792062652043454c4f20746f6b656e81525060200191505060405180910390fd5b6000600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054905011610d34576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806139e76023913960400191505060405180910390fd5b6000610d3e6122ce565b90506000806000905060606002604051908082528060200260200182016040528015610d795781602001602082028038833980820191505090505b5090508881600081518110610d8a57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508381600181518110610dd257fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008090505b600460008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805490508110156110c4576000610eb282600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206123c990919063ffffffff16565b9050600081905060008173ffffffffffffffffffffffffffffffffffffffff1663d06ca61f8c876040518363ffffffff1660e01b81526004018083815260200180602001828103825283818151815260200191508051906020019060200280838360005b83811015610f31578082015181840152602081019050610f16565b50505050905001935050505060006040518083038186803b158015610f5557600080fd5b505afa158015610f69573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015610f9357600080fd5b8101908080516040519392919084640100000000821115610fb357600080fd5b83820191506020820185811115610fc957600080fd5b8251866020820283011164010000000082111715610fe657600080fd5b8083526020830192505050908051906020019060200280838360005b8381101561101d578082015181840152602081019050611002565b5050505090500160405250505060018151811061103657fe5b602002602001015190508273ffffffffffffffffffffffffffffffffffffffff168d73ffffffffffffffffffffffffffffffffffffffff167fba55c28acee19777ec6c603117b386d3e3b39886c0d3d53bc244be24ee6e7c84836040518082815260200191505060405180910390a3858111156110b4578095508196505b5050508080600101915050610e12565b50600082141561113c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f43616e27742065786368616e67652077697468207a65726f2071756f7465000081525060200191505060405180910390fd5b600080905061114d8a888a8761240d565b90508973ffffffffffffffffffffffffffffffffffffffff1663095ea7b3858a6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156111d657600080fd5b505af11580156111ea573d6000803e3d6000fd5b505050506040513d602081101561120057600080fd5b8101908080519060200190929190505050508373ffffffffffffffffffffffffffffffffffffffff166338ed173989838530601442016040518663ffffffff1660e01b815260040180868152602001858152602001806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b838110156112cc5780820151818401526020810190506112b1565b505050509050019650505050505050600060405180830381600087803b1580156112f557600080fd5b505af1158015611309573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561133357600080fd5b810190808051604051939291908464010000000082111561135357600080fd5b8382019150602082018581111561136957600080fd5b825186602082028301116401000000008211171561138657600080fd5b8083526020830192505050908051906020019060200280838360005b838110156113bd5780820151818401526020810190506113a2565b505050509050016040525050505060008573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561144a57600080fd5b505afa15801561145e573d6000803e3d6000fd5b505050506040513d602081101561147457600080fd5b810190808051906020019092919050505090508573ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561150e57600080fd5b505af1158015611522573d6000803e3d6000fd5b505050506040513d602081101561153857600080fd5b8101908080519060200190929190505050507f59afd9b3bf745a06d8739721397432b9f161243cee13868b9d6d6fca05b6e55185604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a17fd4cffd6979677853b45a7a17f455188a434e975ba474c5a2613c94beacea537a8b8b8b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1809650505050505050949350505050565b611665611c8c565b6116d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6116e18282612976565b5050565b6116ed611c8c565b61175f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f11036f54cd547b7d6eaa445a70d763cbd382f60946bd893bbd9aa75a88a971af8282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b60026020528060005260406000206000915090505481565b60008060008060026000806000839350829250819150809050935093509350935090919293565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146119595780915050611965565b611961612bc2565b9150505b919050565b611972611c8c565b6119e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611ade611c8c565b611b50576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611ba181600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612cbd90919063ffffffff16565b507f044c4b00bcc14b6c00430f73b8bc07f33aecb2387c7b188142d6d497342de89a8282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611cce612eab565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b611cf2611c8c565b611d64576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611e07576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f43616e6e6f7420726567697374657220746865206e756c6c206164647265737381525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b60405160405180910390a250565b6000611e98611c8c565b611f0a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611f9157600080fd5b505af1158015611fa5573d6000803e3d6000fd5b505050506040513d6020811015611fbb57600080fd5b810190808051906020019092919050505090509392505050565b6000611fdf6139d3565b611fe883612eb3565b9050611ff26139d3565b611ffc8787612ed1565b90506120066139d3565b61200f86612f13565b90506120196139d3565b61202c8284612f9d90919063ffffffff16565b905061206d6120686120598461204b8888612f9d90919063ffffffff16565b612f9d90919063ffffffff16565b836133fc90919063ffffffff16565b6134a3565b945050505050949350505050565b612083611c8c565b6120f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6120fe816134c4565b50565b600060149054906101000a900460ff1615612184576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f636f6e747261637420616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff0219169083151502179055506121a8336134c4565b6121b185611cea565b60008090505b84849050811015612213576122068585838181106121d157fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff168484848181106121fa57fe5b9050602002013561221b565b80806001019150506121b7565b505050505050565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f03cc7dddcb89dd90027bd8fa62d09d1b5c49ce5d20f8c9bb6bdeaaa62ea1718b8282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f43656c6f546f6b656e00000000000000000000000000000000000000000000008152506009019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561238957600080fd5b505afa15801561239d573d6000803e3d6000fd5b505050506040513d60208110156123b357600080fd5b8101908080519060200190929190505050905090565b60008260010182815481106123da57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b600080612419866118b7565b90506000600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600082905060008090506000831115612661576000849050838173ffffffffffffffffffffffffffffffffffffffff1663bbc66a948c6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156124f557600080fd5b505afa158015612509573d6000803e3d6000fd5b505050506040513d602081101561251f57600080fd5b81019080805190602001909291905050501015612587576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180613a666026913960400191505060405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1663efb7601d8d6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b15801561260657600080fd5b505afa15801561261a573d6000803e3d6000fd5b505050506040513d604081101561263057600080fd5b8101908080519060200190929190805190602001909291905050509150915061265b82828c8e611fd5565b93505050505b600061266b6122ce565b905060008773ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b1580156126b557600080fd5b505afa1580156126c9573d6000803e3d6000fd5b505050506040513d60208110156126df57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1663e6a439058c846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b1580156127a057600080fd5b505afa1580156127b4573d6000803e3d6000fd5b505050506040513d60208110156127ca57600080fd5b8101908080519060200190929190505050905060006129598c73ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561285f57600080fd5b505afa158015612873573d6000803e3d6000fd5b505050506040513d602081101561288957600080fd5b81019080805190602001909291905050508473ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561291757600080fd5b505afa15801561292b573d6000803e3d6000fd5b505050506040513d602081101561294157600080fd5b81019080805190602001909291905050508c8e611fd5565b90506129658185613608565b975050505050505050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612a19576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f526f757465722063616e27742062652061646472657373207a65726f0000000081525060200191505060405180910390fd5b612a6a81600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061362290919063ffffffff16565b506003600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805490501115612b27576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4d6178206e756d626572206f6620726f7574657273207265616368656400000081525060200191505060405180910390fd5b7fb3cbb74e835466bdbf8838b1acb70fa4a8b73e1a00cd5bacb9f68cf4dfc79cf38282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f536f727465644f7261636c657300000000000000000000000000000000000000815250600d019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015612c7d57600080fd5b505afa158015612c91573d6000803e3d6000fd5b505050506040513d6020811015612ca757600080fd5b8101908080519060200190929190505050905090565b6000612cc983836136f2565b15612ea057600060018460000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054039050600060018560010180549050039050818114612e0e576000856001018281548110612d3e57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905080866001018481548110612d7b57fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600183018660000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b8460000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905584600101805480612e6057fe5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055600192505050612ea5565b600090505b92915050565b600033905090565b612ebb6139d3565b6040518060200160405280838152509050919050565b612ed96139d3565b612ee16139d3565b612eea84612f13565b9050612ef46139d3565b612efd84612f13565b9050612f098282613741565b9250505092915050565b612f1b6139d3565b612f2361388a565b821115612f7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526036815260200180613a306036913960400191505060405180910390fd5b604051806020016040528069d3c21bcecceda100000084028152509050919050565b612fa56139d3565b600083600001511480612fbc575060008260000151145b15612fd8576040518060200160405280600081525090506133f6565b69d3c21bcecceda100000082600001511415612ff6578290506133f6565b69d3c21bcecceda100000083600001511415613014578190506133f6565b600069d3c21bcecceda100000061302a856138a9565b600001518161303557fe5b0490506000613043856138e0565b600001519050600069d3c21bcecceda100000061305f866138a9565b600001518161306a57fe5b0490506000613078866138e0565b600001519050600082850290506000851461310c578285828161309757fe5b041461310b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783179312064657465637465640000000000000000000081525060200191505060405180910390fd5b5b600069d3c21bcecceda100000082029050600082146131ae5769d3c21bcecceda100000082828161313957fe5b04146131ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f6f766572666c6f772078317931202a206669786564312064657465637465640081525060200191505060405180910390fd5b5b809150600084860290506000861461323f57848682816131ca57fe5b041461323e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783279312064657465637465640000000000000000000081525060200191505060405180910390fd5b5b60008488029050600088146132cd578488828161325857fe5b04146132cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783179322064657465637465640000000000000000000081525060200191505060405180910390fd5b5b6132d561391d565b87816132dd57fe5b0496506132e861391d565b85816132f057fe5b0494506000858802905060008814613381578588828161330c57fe5b0414613380576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783279322064657465637465640000000000000000000081525060200191505060405180910390fd5b5b6133896139d3565b60405180602001604052808781525090506133b28160405180602001604052808781525061392a565b90506133cc8160405180602001604052808681525061392a565b90506133e68160405180602001604052808581525061392a565b9050809a50505050505050505050505b92915050565b6134046139d3565b816000015183600001511015613482576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f737562737472616374696f6e20756e646572666c6f772064657465637465640081525060200191505060405180910390fd5b60405180602001604052808360000151856000015103815250905092915050565b600069d3c21bcecceda10000008260000151816134bc57fe5b049050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561354a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180613a0a6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081831015613618578161361a565b825b905092915050565b600061362e83836136f2565b6136e757826001018290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600190506136ec565b600090505b92915050565b6000808360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415905092915050565b6137496139d3565b6000826000015114156137c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f63616e277420646976696465206279203000000000000000000000000000000081525060200191505060405180910390fd5b600069d3c21bcecceda10000008460000151029050836000015169d3c21bcecceda100000082816137f157fe5b0414613865576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6f766572666c6f7720617420646976696465000000000000000000000000000081525060200191505060405180910390fd5b60405180602001604052808460000151838161387d57fe5b0481525091505092915050565b60007601357c299a88ea76a58924d52ce4f26a85af186c2b9e74905090565b6138b16139d3565b604051806020016040528069d3c21bcecceda1000000808560000151816138d457fe5b04028152509050919050565b6138e86139d3565b604051806020016040528069d3c21bcecceda10000008085600001518161390b57fe5b04028460000151038152509050919050565b600064e8d4a51000905090565b6139326139d3565b60008260000151846000015101905083600001518110156139bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f616464206f766572666c6f77206465746563746564000000000000000000000081525060200191505060405180910390fd5b60405180602001604052808281525091505092915050565b604051806020016040528060008152509056fe726f757465724164647265737365732073686f756c64206265206e6f6e20656d7074794f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737363616e277420637265617465206669786964697479206e756d626572206c6172676572207468616e206d61784e6577466978656428294e756d626572206f66207265706f72747320666f7220746f6b656e206e6f7420656e6f756768a265627a7a72315820ceba364f39e8c04b8480272e00ae6da6660d3626faef40eb2a1f89de506e587564736f6c634300050d0032",
  "sourceMap": "933:6772:39:-;;;1712:52;8:9:-1;5:2;;;30:1;27;20:12;5:2;1712:52:39;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1712:52:39;;;;;;;;;;;;;;;;1756:4;698:17:4;718:12;:10;;;:12;;:::i;:::-;698:32;;749:9;740:6;;:18;;;;;;;;;;;;;;;;;;806:9;773:43;;802:1;773:43;;;;;;;;;;;;664:159;896:17:28;891:57;;937:4;923:11;;:18;;;;;;;;;;;;;;;;;;891:57;842:110;1712:52:39;933:6772;;788:96:0;833:15;867:10;860:17;;788:96;:::o;933:6772:39:-;;;;;;;",
  "deployedSourceMap": "933:6772:39:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4946:131;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4946:131:39;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4946:131:39;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4946:131:39;;;;;;;;;;;;;;;;;319:23:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;319:23:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2201:155:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2201:155:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2201:155:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2564:2214:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2564:2214:39;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2564:2214:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2025:105;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2025:105:39;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2025:105:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3821:208:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3821:208:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3821:208:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;772:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;772:49:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;772:49:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5354:117:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5354:117:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4033:258:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4033:258:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4033:258:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1684:137:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1684:137:4;;;:::i;:::-;;825:50:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;825:50:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;825:50:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2296:166:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2296:166:39;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2296:166:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3352:25:41;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3352:25:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;899:77:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;899:77:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1250:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1250:92:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3956:230:41;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3956:230:41;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3956:230:41;;;;;;;;;;;;;;;;;;;:::i;:::-;;1884:147:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1884:147:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1884:147:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2913:694;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2913:694:23;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2913:694:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1970:107:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1970:107:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1970:107:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;1102:364:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1102:364:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1102:364:23;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1102:364:23;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1102:364:23;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;1102:364:23;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1102:364:23;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1102:364:23;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;1102:364:23;;;;;;;;;;;;:::i;:::-;;4946:131:39;5012:16;5043:15;:22;5059:5;5043:22;;;;;;;;;;;;;;;:29;;5036:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4946:131;;;:::o;319:23:28:-;;;;;;;;;;;;;:::o;2201:155:23:-;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2300:51:23;2319:12;2333:17;2300:18;:51::i;:::-;2201:155;;:::o;2564:2214:39:-;2720:7;2769:8;;;;;;;;;;;:27;;;2780:29:41;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2780:29:41;;;2770:40;;;;;;2769:51:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2769:51:39;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2769:51:39;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2769:51:39;;;;;;;;;;;;;;;;2750:70;;:15;:70;;;2735:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2940:1;2890:15;:33;2906:16;2890:33;;;;;;;;;;;;;;;:40;;:47;;;;:51;2875:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3208:16;3227:14;:12;:14::i;:::-;3208:33;;3248:30;3284:23;3310:1;3284:27;;3318:21;3356:1;3342:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;3342:16:39;;;;3318:40;;3375:16;3365:4;3370:1;3365:7;;;;;;;;;;;;;:26;;;;;;;;;;;3415:9;3397:4;3402:1;3397:7;;;;;;;;;;;;;:28;;;;;;;;;;;3437:9;3449:1;3437:13;;3432:683;3456:15;:33;3472:16;3456:33;;;;;;;;;;;;;;;:40;;:47;;;;3452:1;:51;3432:683;;;3518:19;3540:40;3578:1;3540:15;:33;3556:16;3540:33;;;;;;;;;;;;;;;:37;;:40;;;;:::i;:::-;3518:62;;3588:26;3637:11;3588:61;;3871:16;3890:6;:20;;;3911:6;3919:4;3890:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3890:34:39;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3890:34:39;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3890:34:39;;;;;;39:16:-1;36:1;17:17;2:54;3890:34:39;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3890:34:39;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;385:12;380:3;373:25;421:4;416:3;412:14;405:21;;0:433;;3890:34:39;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3890:34:39;;;;;;;;;;;3925:1;3890:37;;;;;;;;;;;;;;3871:56;;3973:11;3941:54;;3955:16;3941:54;;;3986:8;3941:54;;;;;;;;;;;;;;;;;;4018:15;4007:8;:26;4003:106;;;4063:8;4045:26;;4094:6;4081:19;;4003:106;3432:683;;;3505:3;;;;;;;3432:683;;;;4148:1;4129:15;:20;;4121:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4191:17;4211:1;4191:21;;4230:72;4252:16;4270:11;4283:6;4291:10;4230:21;:72::i;:::-;4218:84;;4316:16;4309:32;;;4350:10;4363:6;4309:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4309:61:39;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4309:61:39;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4309:61:39;;;;;;;;;;;;;;;;;4376:10;:35;;;4419:6;4433:9;4450:4;4470;1186:2;4483:15;:46;4376:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4376:159:39;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4376:159:39;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4376:159:39;;;;;;39:16:-1;36:1;17:17;2:54;4376:159:39;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4376:159:39;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;385:12;380:3;373:25;421:4;416:3;412:14;405:21;;0:433;;4376:159:39;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4376:159:39;;;;;;;;;;;;4542:18;4563:9;:19;;;4591:4;4563:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4563:34:39;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4563:34:39;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4563:34:39;;;;;;;;;;;;;;;;4542:55;;4603:9;:18;;;4622:10;4634;4603:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4603:42:39;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4603:42:39;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4603:42:39;;;;;;;;;;;;;;;;;4656:31;4675:10;4656:31;;;;;;;;;;;;;;;;;;;;;;4698:52;4708:16;4726:15;4743:6;4698:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4763:10;4756:17;;;;;;;;2564:2214;;;;;;:::o;2025:105::-;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2100:25:39;2111:5;2118:6;2100:10;:25::i;:::-;2025:105;;:::o;3821:208:23:-;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3952:14:23;3919:15;:30;3935:13;3919:30;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;3977;3994:13;4009:14;3977:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3821:208;;:::o;772:49::-;;;;;;;;;;;;;;;;;:::o;5354:117:39:-;5405:7;5414;5423;5432;5455:1;5458;5461;5464;5447:19;;;;;;;;;;;;;;;;;;;;5354:117;;;;:::o;4033:258:23:-;4103:7;4118:21;4142:15;:30;4158:13;4142:30;;;;;;;;;;;;;;;;;;;;;;;;;4118:54;;4207:1;4182:27;;:13;:27;;;4178:68;;4226:13;4219:20;;;;;4178:68;4267:18;:16;:18::i;:::-;4252:34;;;4033:258;;;;:::o;1684:137:4:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:1;1745:40;;1766:6;;;;;;;;;;;1745:40;;;;;;;;;;;;1812:1;1795:6;;:19;;;;;;;;;;;;;;;;;;1684:137::o;825:50:23:-;;;;;;;;;;;;;;;;;;;;;;:::o;2296:166:39:-;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2374:37:39;2404:6;2374:15;:22;2390:5;2374:22;;;;;;;;;;;;;;;:29;;:37;;;;:::i;:::-;;2422:35;2443:5;2450:6;2422:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2296:166;;:::o;3352:25:41:-;;;;;;;;;;;;;:::o;899:77:4:-;937:7;963:6;;;;;;;;;;;956:13;;899:77;:::o;1250:92::-;1290:4;1329:6;;;;;;;;;;;1313:22;;:12;:10;:12::i;:::-;:22;;;1306:29;;1250:92;:::o;3956:230:41:-;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4060:1:41;4033:29;;:15;:29;;;;4025:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4126:15;4105:8;;:37;;;;;;;;;;;;;;;;;;4165:15;4153:28;;;;;;;;;;;;3956:230;:::o;1884:147:23:-;1973:4;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1999:5:23;1992:22;;;2015:2;2019:6;1992:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1992:34:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1992:34:23;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1992:34:23;;;;;;;;;;;;;;;;1985:41;;1884:147;;;;;:::o;2913:694::-;3090:7;3105:47;;:::i;:::-;3155:29;3172:11;3155:16;:29::i;:::-;3105:79;;3191:33;;:::i;:::-;3227:86;3263:17;3288:19;3227:28;:86::i;:::-;3191:122;;3319:42;;:::i;:::-;3364:28;3385:6;3364:20;:28::i;:::-;3319:73;;3398:39;;:::i;:::-;3440:30;3455:14;3440:5;:14;;:30;;;;:::i;:::-;3398:72;;3490:112;:91;3520:60;3565:14;3520:35;3535:19;3520:5;:14;;:35;;;;:::i;:::-;:44;;:60;;;;:::i;:::-;3490:11;:29;;:91;;;;:::i;:::-;:110;:112::i;:::-;3477:125;;;;;;2913:694;;;;;;:::o;1970:107:4:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;1102:364:23:-;476:11:28;;;;;;;;;;;475:12;467:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;540:4;526:11;;:18;;;;;;;;;;;;;;;;;;1264:30:23;1283:10;1264:18;:30::i;:::-;1300:29;1312:16;1300:11;:29::i;:::-;1341:9;1353:1;1341:13;;1336:126;1360:14;;:21;;1356:1;:25;1336:126;;;1396:59;1415:14;;1430:1;1415:17;;;;;;;;;;;;;;;1434;;1452:1;1434:20;;;;;;;;;;;;;1396:18;:59::i;:::-;1383:3;;;;;;;1336:126;;;;1102:364;;;;;:::o;3611:206::-;3734:17;3703:14;:28;3718:12;3703:28;;;;;;;;;;;;;;;:48;;;;3762:50;3780:12;3794:17;3762:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;3611:206;;:::o;5229:132:41:-;5276:6;5304:8;;;;;;;;;;;:27;;;2780:29;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2780:29:41;;;2770:40;;;;;;5304:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5304:51:41;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5304:51:41;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5304:51:41;;;;;;;;;;;;;;;;5290:66;;5229:132;:::o;3795:153:9:-;3894:7;3924:3;:10;;3935:5;3924:17;;;;;;;;;;;;;;;;;;;;;;;;;3917:24;;3795:153;;;;:::o;6355:1348:39:-;6523:7;6538:22;6563:34;6580:16;6563;:34::i;:::-;6538:59;;6604:18;6625:14;:32;6640:16;6625:32;;;;;;;;;;;;;;;;6604:53;;6664:14;6689;6664:40;;6711:28;6742:1;6711:32;;6846:1;6833:10;:14;6829:476;;;6857:28;6903:14;6857:61;;6987:10;6943:13;:22;;;6966:16;6943:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6943:40:39;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6943:40:39;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6943:40:39;;;;;;;;;;;;;;;;:54;;6926:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7065:21;7088:23;7115:6;:22;;;7138:16;7115:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7115:40:39;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7115:40:39;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7115:40:39;;;;;;;;;;;;;;;;;;;;;;;;;7064:91;;;;7187:111;7215:13;7238:15;7263:6;7279:11;7187:18;:111::i;:::-;7164:134;;6829:476;;;;7311:16;7330:14;:12;:14::i;:::-;7311:33;;7350:12;7386:10;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7386:20:39;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7386:20:39;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7386:20:39;;;;;;;;;;;;;;;;7365:50;;;7423:16;7455:9;7365:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7365:106:39;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7365:106:39;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7365:106:39;;;;;;;;;;;;;;;;7350:121;;7477:21;7501:138;7534:16;7527:34;;;7562:4;7527:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7527:40:39;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7527:40:39;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7527:40:39;;;;;;;;;;;;;;;;7575:9;:19;;;7595:4;7575:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7575:25:39;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7575:25:39;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7575:25:39;;;;;;;;;;;;;;;;7608:6;7622:11;7501:18;:138::i;:::-;7477:162;;7653:45;7662:13;7677:20;7653:8;:45::i;:::-;7646:52;;;;;;;;;6355:1348;;;;;;:::o;5475:347::-;5566:1;5548:20;;:6;:20;;;;5540:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5607:34;5634:6;5607:15;:22;5623:5;5607:22;;;;;;;;;;;;;;;:26;;:34;;;;:::i;:::-;;1240:1;5662:15;:22;5678:5;5662:22;;;;;;;;;;;;;;;:29;;:36;;;;:68;;5647:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5786:31;5803:5;5810:6;5786:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5475:347;;:::o;6073:156:41:-;6124:14;6168:8;;;;;;;;;;;:27;;;2512:33;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2512:33:41;;;2502:44;;;;;;6168:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6168:55:41;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6168:55:41;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6168:55:41;;;;;;;;;;;;;;;;6146:78;;6073:156;:::o;1325:1019:9:-;1414:4;1438:20;1447:3;1452:5;1438:8;:20::i;:::-;1434:904;;;1473:21;1516:1;1497:3;:9;;:16;1507:5;1497:16;;;;;;;;;;;;;;;;:20;1473:44;;1531:17;1571:1;1551:3;:10;;:17;;;;:21;1531:41;;1709:13;1696:9;:26;1692:382;;1742:17;1762:3;:10;;1773:9;1762:21;;;;;;;;;;;;;;;;;;;;;;;;;1742:41;;1909:9;1881:3;:10;;1892:13;1881:25;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;2031:1;2015:13;:17;1992:3;:9;;:20;2002:9;1992:20;;;;;;;;;;;;;;;:40;;;;1692:382;;2155:3;:9;;:16;2165:5;2155:16;;;;;;;;;;;;;;;2148:23;;;2242:3;:10;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:4;2273:11;;;;;;1434:904;2322:5;2315:12;;1325:1019;;;;;:::o;788:96:0:-;833:15;867:10;860:17;;788:96;:::o;1552:94:24:-;1600:15;;:::i;:::-;1630:11;;;;;;;;1639:1;1630:11;;;1623:18;;1552:94;;;:::o;3565:312::-;3666:15;;:::i;:::-;3689:34;;:::i;:::-;3726:19;3735:9;3726:8;:19::i;:::-;3689:56;;3751:36;;:::i;:::-;3790:21;3799:11;3790:8;:21::i;:::-;3751:60;;3824:48;3831:18;3851:20;3824:6;:48::i;:::-;3817:55;;;;3565:312;;;;:::o;2597:203::-;2649:15;;:::i;:::-;2685:13;:11;:13::i;:::-;2680:1;:18;;2672:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2770:25;;;;;;;;889;2779:1;:15;2770:25;;;2763:32;;2597:203;;;:::o;6254:1636::-;6333:15;;:::i;:::-;6371:1;6360;:7;;;:12;:28;;;;6387:1;6376;:7;;;:12;6360:28;6356:52;;;6397:11;;;;;;;;6406:1;6397:11;;;6390:18;;;;6356:52;889:25;6418:1;:7;;;:22;6414:36;;;6449:1;6442:8;;;;6414:36;889:25;6460:1;:7;;;:22;6456:36;;;6491:1;6484:8;;;;6456:36;6581:10;889:25;6594:10;6602:1;6594:7;:10::i;:::-;:16;;;:30;;;;;;6581:43;;6630:10;6643:13;6654:1;6643:10;:13::i;:::-;:19;;;6630:32;;6668:10;889:25;6681:10;6689:1;6681:7;:10::i;:::-;:16;;;:30;;;;;;6668:43;;6717:10;6730:13;6741:1;6730:10;:13::i;:::-;:19;;;6717:32;;6833:12;6853:2;6848;:7;6833:22;;6871:1;6865:2;:7;6861:63;;6895:2;6889;6882:4;:9;;;;;;:15;6874:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6861:63;7023:18;889:25;7044:4;:18;7023:39;;7080:1;7072:4;:9;7068:91;;889:25;7104:4;7091:10;:17;;;;;;:32;7083:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7068:91;7172:10;7165:17;;7189:12;7209:2;7204;:7;7189:22;;7227:1;7221:2;:7;7217:63;;7251:2;7245;7238:4;:9;;;;;;:15;7230:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7217:63;7287:12;7307:2;7302;:7;7287:22;;7325:1;7319:2;:7;7315:63;;7349:2;7343;7336:4;:9;;;;;;:15;7328:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7315:63;7395:14;:12;:14::i;:::-;7390:2;:19;;;;;;7385:24;;7425:14;:12;:14::i;:::-;7420:2;:19;;;;;;7415:24;;7445:12;7465:2;7460;:7;7445:22;;7483:1;7477:2;:7;7473:63;;7507:2;7501;7494:4;:9;;;;;;:15;7486:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7473:63;7620:22;;:::i;:::-;7645:14;;;;;;;;7654:4;7645:14;;;7620:39;;7674:27;7678:6;7686:14;;;;;;;;7695:4;7686:14;;;7674:3;:27::i;:::-;7665:36;;7743:27;7747:6;7755:14;;;;;;;;7764:4;7755:14;;;7743:3;:27::i;:::-;7734:36;;7812:27;7816:6;7824:14;;;;;;;;7833:4;7824:14;;;7812:3;:27::i;:::-;7803:36;;7879:6;7872:13;;;;;;;;;;;;6254:1636;;;;;:::o;5389:209::-;5468:15;;:::i;:::-;5510:1;:7;;;5499:1;:7;;;:18;;5491:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5566:27;;;;;;;;5585:1;:7;;;5575:1;:7;;;:17;5566:27;;;5559:34;;5389:209;;;;:::o;2959:109::-;3020:7;889:25;3042:1;:7;;;:21;;;;;;3035:28;;2959:109;;;:::o;2178:225:4:-;2271:1;2251:22;;:8;:22;;;;2243:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:8;2331:38;;2352:6;;;;;;;;;;;2331:38;;;;;;;;;;;;2388:8;2379:6;;:17;;;;;;;;;;;;;;;;;;2178:225;:::o;182:105:2:-;240:7;271:1;266;:6;;:14;;279:1;266:14;;;275:1;266:14;259:21;;182:105;;;;:::o;923:272:9:-;1009:4;1034:20;1043:3;1048:5;1034:8;:20::i;:::-;1029:160;;1088:3;:10;;1104:5;1088:22;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1088:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1069:3;:9;;:16;1079:5;1069:16;;;;;;;;;;;;;;;:41;;;;1131:4;1124:11;;;;1029:160;1173:5;1166:12;;923:272;;;;;:::o;2425:159::-;2529:4;2576:1;2556:3;:9;;:16;2566:5;2556:16;;;;;;;;;;;;;;;;:21;;2549:28;;2425:159;;;;:::o;9228:283:24:-;9305:15;;:::i;:::-;9347:1;9336;:7;;;:12;;9328:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9376:9;889:25;9388:1;:7;;;:21;9376:33;;9442:1;:7;;;889:25;9423:1;:15;;;;;;:26;9415:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9485:21;;;;;;;;9498:1;:7;;;9494:1;:11;;;;;;9485:21;;;9478:28;;;9228:283;;;;:::o;2213:127::-;2259:7;2281:54;2274:61;;2213:127;:::o;4116:159::-;4175:15;;:::i;:::-;4205:47;;;;;;;;889:25;;4215:1;:7;;;:21;;;;;;4214:37;4205:47;;;4198:54;;4116:159;;;:::o;4562:172::-;4624:15;;:::i;:::-;4654:57;;;;;;;;889:25;;4674:1;:7;;;:21;;;;;;4673:37;4663:1;:7;;;:47;4654:57;;;4647:64;;4562:172;;;:::o;1955:87::-;2002:7;2024:13;2017:20;;1955:87;:::o;5106:207::-;5180:15;;:::i;:::-;5203:9;5225:1;:7;;;5215:1;:7;;;:17;5203:29;;5251:1;:7;;;5246:1;:12;;5238:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5297:11;;;;;;;;5306:1;5297:11;;;5290:18;;;5106:207;;;;:::o;933:6772:39:-;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.13;\n\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\";\nimport \"openzeppelin-solidity/contracts/utils/EnumerableSet.sol\";\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"openzeppelin-solidity/contracts/math/Math.sol\";\n\nimport \"./UsingRegistry.sol\";\n\nimport \"../common/interfaces/IFeeHandlerSeller.sol\";\nimport \"../stability/interfaces/ISortedOracles.sol\";\nimport \"../../contracts-0.8/common/interfaces/IOracle.sol\";\nimport \"../common/FixidityLib.sol\";\nimport \"../common/Initializable.sol\";\nimport \"./FeeHandlerSeller.sol\";\n\nimport \"../uniswap/interfaces/IUniswapV2RouterMin.sol\";\nimport \"../uniswap/interfaces/IUniswapV2FactoryMin.sol\";\n\n// An implementation of FeeHandlerSeller supporting interfaces compatible with\n// Uniswap V2 API\n// See https://github.com/celo-org/celo-proposals/blob/master/CIPs/cip-0052.md\ncontract UniswapFeeHandlerSeller is IFeeHandlerSeller, FeeHandlerSeller {\n  using SafeMath for uint256;\n  using FixidityLib for FixidityLib.Fraction;\n  using EnumerableSet for EnumerableSet.AddressSet;\n\n  uint256 constant MAX_TIMESTAMP_BLOCK_EXCHANGE = 20;\n  uint256 constant MAX_NUMBER_ROUTERS_PER_TOKEN = 3;\n  mapping(address => EnumerableSet.AddressSet) private routerAddresses;\n\n  event ReceivedQuote(address indexed tokneAddress, address indexed router, uint256 quote);\n  event RouterUsed(address router);\n  event RouterAddressSet(address token, address router);\n  event RouterAddressRemoved(address token, address router);\n\n  /**\n   * @notice Sets initialized == true on implementation contracts.\n   * @param test Set to true to skip implementation initialisation.\n   */\n  constructor(bool test) public Initializable(test) {}\n\n  // without this line the contract can't receive native Celo transfers\n  function() external payable {}\n\n  /**\n   * @notice Allows owner to set the router for a token.\n   * @param token Address of the token to set.\n   * @param router The new router.\n   */\n  function setRouter(address token, address router) external onlyOwner {\n    _setRouter(token, router);\n  }\n\n  /**\n   * @notice Allows owner to remove a router for a token.\n   * @param token Address of the token.\n   * @param router Address of the router to remove.\n   */\n  function removeRouter(address token, address router) external onlyOwner {\n    routerAddresses[token].remove(router);\n    emit RouterAddressRemoved(token, router);\n  }\n\n  // This function explicitly defines few variables because it was getting error \"stack too deep\"\n  function sell(\n    address sellTokenAddress,\n    address buyTokenAddress,\n    uint256 amount,\n    uint256 maxSlippage // as fraction,\n  ) external returns (uint256) {\n    require(\n      buyTokenAddress == registry.getAddressForOrDie(CELO_TOKEN_REGISTRY_ID),\n      \"Buy token can only be CELO token\"\n    );\n\n    require(\n      routerAddresses[sellTokenAddress].values.length > 0,\n      \"routerAddresses should be non empty\"\n    );\n\n    // An improvement to this function would be to allow the user to pass a path as argument\n    // and if it generates a better outcome that the ones enabled that gets used\n    // and the user gets a reward\n\n    IERC20 celoToken = getCeloToken();\n\n    IUniswapV2RouterMin bestRouter;\n    uint256 bestRouterQuote = 0;\n\n    address[] memory path = new address[](2);\n\n    path[0] = sellTokenAddress;\n    path[1] = address(celoToken);\n\n    for (uint256 i = 0; i < routerAddresses[sellTokenAddress].values.length; i++) {\n      address poolAddress = routerAddresses[sellTokenAddress].get(i);\n      IUniswapV2RouterMin router = IUniswapV2RouterMin(poolAddress);\n\n      // Using the second return value becuase it's the last argument,\n      // the previous values show how many tokens are exchanged in each path\n      // so the first value would be equivalent to balanceToBurn\n      uint256 wouldGet = router.getAmountsOut(amount, path)[1];\n\n      emit ReceivedQuote(sellTokenAddress, poolAddress, wouldGet);\n      if (wouldGet > bestRouterQuote) {\n        bestRouterQuote = wouldGet;\n        bestRouter = router;\n      }\n    }\n\n    require(bestRouterQuote != 0, \"Can't exchange with zero quote\");\n\n    uint256 minAmount = 0;\n    minAmount = calculateAllMinAmount(sellTokenAddress, maxSlippage, amount, bestRouter);\n\n    IERC20(sellTokenAddress).approve(address(bestRouter), amount);\n    bestRouter.swapExactTokensForTokens(\n      amount,\n      minAmount,\n      path,\n      address(this),\n      block.timestamp + MAX_TIMESTAMP_BLOCK_EXCHANGE\n    );\n\n    uint256 celoAmount = celoToken.balanceOf(address(this));\n    celoToken.transfer(msg.sender, celoAmount);\n    emit RouterUsed(address(bestRouter));\n    emit TokenSold(sellTokenAddress, buyTokenAddress, amount);\n    return celoAmount;\n  }\n\n  /**\n   * @notice Get the list of routers for a token.\n   * @param token The address of the token to query.\n   * @return An array of all the allowed router.\n   */\n  function getRoutersForToken(address token) external view returns (address[] memory) {\n    return routerAddresses[token].values;\n  }\n\n  /**\n   * @notice Returns the storage, major, minor, and patch version of the contract.\n   * @return Storage version of the contract.\n   * @return Major version of the contract.\n   * @return Minor version of the contract.\n   * @return Patch version of the contract.\n   */\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256) {\n    return (2, 0, 0, 0);\n  }\n\n  function _setRouter(address token, address router) private {\n    require(router != address(0), \"Router can't be address zero\");\n    routerAddresses[token].add(router);\n    require(\n      routerAddresses[token].values.length <= MAX_NUMBER_ROUTERS_PER_TOKEN,\n      \"Max number of routers reached\"\n    );\n    emit RouterAddressSet(token, router);\n  }\n\n  /**\n  * @dev Calculates the minimum amount of tokens that can be received for a given amount of sell tokens, \n          taking into account the slippage and the rates of the sell token and CELO token on the Uniswap V2 pair.\n  * @param sellTokenAddress The address of the sell token.\n  * @param maxSlippage The maximum slippage allowed.\n  * @param amount The amount of sell tokens to be traded.\n  * @param bestRouter The Uniswap V2 router with the best price.\n  * @return The minimum amount of tokens that can be received.\n  */\n  function calculateAllMinAmount(\n    address sellTokenAddress,\n    uint256 maxSlippage,\n    uint256 amount,\n    IUniswapV2RouterMin bestRouter\n  ) private view returns (uint256) {\n    address _oracleAddress = getOracleAddress(sellTokenAddress);\n\n    uint256 minReports = minimumReports[sellTokenAddress];\n\n    IOracle oracle = IOracle(_oracleAddress);\n\n    uint256 minimalSortedOracles = 0;\n    // if minimumReports for this token is zero, assume the check is not needed\n    if (minReports > 0) {\n      ISortedOracles sortedOracles = ISortedOracles(_oracleAddress);\n      require(\n        sortedOracles.numRates(sellTokenAddress) >= minReports,\n        \"Number of reports for token not enough\"\n      );\n\n      (uint256 rateNumerator, uint256 rateDenominator) = oracle.getExchangeRate(sellTokenAddress);\n\n      minimalSortedOracles = calculateMinAmount(\n        rateNumerator,\n        rateDenominator,\n        amount,\n        maxSlippage\n      );\n    }\n\n    IERC20 celoToken = getCeloToken();\n    address pair = IUniswapV2FactoryMin(bestRouter.factory()).getPair(\n      sellTokenAddress,\n      address(celoToken)\n    );\n    uint256 minAmountPair = calculateMinAmount(\n      IERC20(sellTokenAddress).balanceOf(pair),\n      celoToken.balanceOf(pair),\n      amount,\n      maxSlippage\n    );\n\n    return Math.max(minAmountPair, minimalSortedOracles);\n  }\n}\n",
  "sourcePath": "/Users/beaver/Development/temp/celo-monorepo/packages/protocol/contracts/common/UniswapFeeHandlerSeller.sol",
  "ast": {
    "absolutePath": "project:/contracts/common/UniswapFeeHandlerSeller.sol",
    "exportedSymbols": {
      "UniswapFeeHandlerSeller": [
        12361
      ]
    },
    "id": 12362,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11853,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:39"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 11854,
        "nodeType": "ImportDirective",
        "scope": 12362,
        "sourceUnit": 364,
        "src": "26:59:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 11855,
        "nodeType": "ImportDirective",
        "scope": 12362,
        "sourceUnit": 956,
        "src": "86:64:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/utils/EnumerableSet.sol",
        "file": "openzeppelin-solidity/contracts/utils/EnumerableSet.sol",
        "id": 11856,
        "nodeType": "ImportDirective",
        "scope": 12362,
        "sourceUnit": 1466,
        "src": "151:65:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 11857,
        "nodeType": "ImportDirective",
        "scope": 12362,
        "sourceUnit": 482,
        "src": "217:63:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/Math.sol",
        "file": "openzeppelin-solidity/contracts/math/Math.sol",
        "id": 11858,
        "nodeType": "ImportDirective",
        "scope": 12362,
        "sourceUnit": 177,
        "src": "281:55:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/UsingRegistry.sol",
        "file": "./UsingRegistry.sol",
        "id": 11859,
        "nodeType": "ImportDirective",
        "scope": 12362,
        "sourceUnit": 13583,
        "src": "338:29:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/interfaces/IFeeHandlerSeller.sol",
        "file": "../common/interfaces/IFeeHandlerSeller.sol",
        "id": 11860,
        "nodeType": "ImportDirective",
        "scope": 12362,
        "sourceUnit": 14927,
        "src": "369:52:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/stability/interfaces/ISortedOracles.sol",
        "file": "../stability/interfaces/ISortedOracles.sol",
        "id": 11861,
        "nodeType": "ImportDirective",
        "scope": 12362,
        "sourceUnit": 53526,
        "src": "422:52:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts-0.8/common/interfaces/IOracle.sol",
        "file": "../../contracts-0.8/common/interfaces/IOracle.sol",
        "id": 11862,
        "nodeType": "ImportDirective",
        "scope": 12362,
        "sourceUnit": 1643,
        "src": "475:59:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/FixidityLib.sol",
        "file": "../common/FixidityLib.sol",
        "id": 11863,
        "nodeType": "ImportDirective",
        "scope": 12362,
        "sourceUnit": 8745,
        "src": "535:35:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/Initializable.sol",
        "file": "../common/Initializable.sol",
        "id": 11864,
        "nodeType": "ImportDirective",
        "scope": 12362,
        "sourceUnit": 9571,
        "src": "571:37:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/FeeHandlerSeller.sol",
        "file": "./FeeHandlerSeller.sol",
        "id": 11865,
        "nodeType": "ImportDirective",
        "scope": 12362,
        "sourceUnit": 8141,
        "src": "609:32:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/uniswap/interfaces/IUniswapV2RouterMin.sol",
        "file": "../uniswap/interfaces/IUniswapV2RouterMin.sol",
        "id": 11866,
        "nodeType": "ImportDirective",
        "scope": 12362,
        "sourceUnit": 54969,
        "src": "643:55:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/uniswap/interfaces/IUniswapV2FactoryMin.sol",
        "file": "../uniswap/interfaces/IUniswapV2FactoryMin.sol",
        "id": 11867,
        "nodeType": "ImportDirective",
        "scope": 12362,
        "sourceUnit": 54301,
        "src": "699:56:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11868,
              "name": "IFeeHandlerSeller",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14926,
              "src": "969:17:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IFeeHandlerSeller_$14926",
                "typeString": "contract IFeeHandlerSeller"
              }
            },
            "id": 11869,
            "nodeType": "InheritanceSpecifier",
            "src": "969:17:39"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11870,
              "name": "FeeHandlerSeller",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8140,
              "src": "988:16:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FeeHandlerSeller_$8140",
                "typeString": "contract FeeHandlerSeller"
              }
            },
            "id": 11871,
            "nodeType": "InheritanceSpecifier",
            "src": "988:16:39"
          }
        ],
        "contractDependencies": [
          26,
          481,
          8140,
          9570,
          13582,
          14594,
          14926
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 12361,
        "linearizedBaseContracts": [
          12361,
          8140,
          14594,
          13582,
          9570,
          481,
          26,
          14926
        ],
        "name": "UniswapFeeHandlerSeller",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 11874,
            "libraryName": {
              "contractScope": null,
              "id": 11872,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 363,
              "src": "1015:8:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$363",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1009:27:39",
            "typeName": {
              "id": 11873,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1028:7:39",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 11877,
            "libraryName": {
              "contractScope": null,
              "id": 11875,
              "name": "FixidityLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8744,
              "src": "1045:11:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FixidityLib_$8744",
                "typeString": "library FixidityLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1039:43:39",
            "typeName": {
              "contractScope": null,
              "id": 11876,
              "name": "FixidityLib.Fraction",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8145,
              "src": "1061:20:39",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Fraction_$8145_storage_ptr",
                "typeString": "struct FixidityLib.Fraction"
              }
            }
          },
          {
            "id": 11880,
            "libraryName": {
              "contractScope": null,
              "id": 11878,
              "name": "EnumerableSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1465,
              "src": "1091:13:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EnumerableSet_$1465",
                "typeString": "library EnumerableSet"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1085:49:39",
            "typeName": {
              "contractScope": null,
              "id": 11879,
              "name": "EnumerableSet.AddressSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1260,
              "src": "1109:24:39",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$1260_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            }
          },
          {
            "constant": true,
            "id": 11883,
            "name": "MAX_TIMESTAMP_BLOCK_EXCHANGE",
            "nodeType": "VariableDeclaration",
            "scope": 12361,
            "src": "1138:50:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11881,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1138:7:39",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3230",
              "id": 11882,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1186:2:39",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_20_by_1",
                "typeString": "int_const 20"
              },
              "value": "20"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 11886,
            "name": "MAX_NUMBER_ROUTERS_PER_TOKEN",
            "nodeType": "VariableDeclaration",
            "scope": 12361,
            "src": "1192:49:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11884,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1192:7:39",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "33",
              "id": 11885,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1240:1:39",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 11890,
            "name": "routerAddresses",
            "nodeType": "VariableDeclaration",
            "scope": 12361,
            "src": "1245:68:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$1260_storage_$",
              "typeString": "mapping(address => struct EnumerableSet.AddressSet)"
            },
            "typeName": {
              "id": 11889,
              "keyType": {
                "id": 11887,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1253:7:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1245:44:39",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$1260_storage_$",
                "typeString": "mapping(address => struct EnumerableSet.AddressSet)"
              },
              "valueType": {
                "contractScope": null,
                "id": 11888,
                "name": "EnumerableSet.AddressSet",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1260,
                "src": "1264:24:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_AddressSet_$1260_storage_ptr",
                  "typeString": "struct EnumerableSet.AddressSet"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 11898,
            "name": "ReceivedQuote",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11892,
                  "indexed": true,
                  "name": "tokneAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 11898,
                  "src": "1338:28:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11891,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1338:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11894,
                  "indexed": true,
                  "name": "router",
                  "nodeType": "VariableDeclaration",
                  "scope": 11898,
                  "src": "1368:22:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11893,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1368:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11896,
                  "indexed": false,
                  "name": "quote",
                  "nodeType": "VariableDeclaration",
                  "scope": 11898,
                  "src": "1392:13:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11895,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1392:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1337:69:39"
            },
            "src": "1318:89:39"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 11902,
            "name": "RouterUsed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11901,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11900,
                  "indexed": false,
                  "name": "router",
                  "nodeType": "VariableDeclaration",
                  "scope": 11902,
                  "src": "1427:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11899,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1427:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1426:16:39"
            },
            "src": "1410:33:39"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 11908,
            "name": "RouterAddressSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11904,
                  "indexed": false,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 11908,
                  "src": "1469:13:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11903,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1469:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11906,
                  "indexed": false,
                  "name": "router",
                  "nodeType": "VariableDeclaration",
                  "scope": 11908,
                  "src": "1484:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11905,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1484:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1468:31:39"
            },
            "src": "1446:54:39"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 11914,
            "name": "RouterAddressRemoved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11910,
                  "indexed": false,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 11914,
                  "src": "1530:13:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11909,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1530:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11912,
                  "indexed": false,
                  "name": "router",
                  "nodeType": "VariableDeclaration",
                  "scope": 11914,
                  "src": "1545:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11911,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1545:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1529:31:39"
            },
            "src": "1503:58:39"
          },
          {
            "body": {
              "id": 11922,
              "nodeType": "Block",
              "src": "1762:2:39",
              "statements": []
            },
            "documentation": "@notice Sets initialized == true on implementation contracts.\n@param test Set to true to skip implementation initialisation.",
            "id": 11923,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 11919,
                    "name": "test",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11916,
                    "src": "1756:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 11920,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11918,
                  "name": "Initializable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9570,
                  "src": "1742:13:39",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Initializable_$9570_$",
                    "typeString": "type(contract Initializable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1742:19:39"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11916,
                  "name": "test",
                  "nodeType": "VariableDeclaration",
                  "scope": 11923,
                  "src": "1724:9:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11915,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1724:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1723:11:39"
            },
            "returnParameters": {
              "id": 11921,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1762:0:39"
            },
            "scope": 12361,
            "src": "1712:52:39",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11926,
              "nodeType": "Block",
              "src": "1868:2:39",
              "statements": []
            },
            "documentation": null,
            "id": 11927,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11924,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1848:2:39"
            },
            "returnParameters": {
              "id": 11925,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1868:0:39"
            },
            "scope": 12361,
            "src": "1840:30:39",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11941,
              "nodeType": "Block",
              "src": "2094:36:39",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11937,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11929,
                        "src": "2111:5:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11938,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11931,
                        "src": "2118:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11936,
                      "name": "_setRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12243,
                      "src": "2100:10:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 11939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2100:25:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11940,
                  "nodeType": "ExpressionStatement",
                  "src": "2100:25:39"
                }
              ]
            },
            "documentation": "@notice Allows owner to set the router for a token.\n@param token Address of the token to set.\n@param router The new router.",
            "id": 11942,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 11934,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11933,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 414,
                  "src": "2084:9:39",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2084:9:39"
              }
            ],
            "name": "setRouter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11929,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 11942,
                  "src": "2044:13:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11928,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2044:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11931,
                  "name": "router",
                  "nodeType": "VariableDeclaration",
                  "scope": 11942,
                  "src": "2059:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11930,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2059:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2043:31:39"
            },
            "returnParameters": {
              "id": 11935,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2094:0:39"
            },
            "scope": 12361,
            "src": "2025:105:39",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11963,
              "nodeType": "Block",
              "src": "2368:94:39",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11955,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11946,
                        "src": "2404:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 11951,
                          "name": "routerAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11890,
                          "src": "2374:15:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$1260_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                          }
                        },
                        "id": 11953,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 11952,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11944,
                          "src": "2390:5:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2374:22:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$1260_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 11954,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1375,
                      "src": "2374:29:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1260_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$1260_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                      }
                    },
                    "id": 11956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2374:37:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11957,
                  "nodeType": "ExpressionStatement",
                  "src": "2374:37:39"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11959,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11944,
                        "src": "2443:5:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11960,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11946,
                        "src": "2450:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11958,
                      "name": "RouterAddressRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11914,
                      "src": "2422:20:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 11961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2422:35:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11962,
                  "nodeType": "EmitStatement",
                  "src": "2417:40:39"
                }
              ]
            },
            "documentation": "@notice Allows owner to remove a router for a token.\n@param token Address of the token.\n@param router Address of the router to remove.",
            "id": 11964,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 11949,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11948,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 414,
                  "src": "2358:9:39",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2358:9:39"
              }
            ],
            "name": "removeRouter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11944,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 11964,
                  "src": "2318:13:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11943,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2318:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11946,
                  "name": "router",
                  "nodeType": "VariableDeclaration",
                  "scope": 11964,
                  "src": "2333:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11945,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2333:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2317:31:39"
            },
            "returnParameters": {
              "id": 11950,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2368:0:39"
            },
            "scope": 12361,
            "src": "2296:166:39",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12170,
              "nodeType": "Block",
              "src": "2729:2049:39",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 11978,
                          "name": "buyTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11968,
                          "src": "2750:15:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 11981,
                              "name": "CELO_TOKEN_REGISTRY_ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13227,
                              "src": "2797:22:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 11979,
                              "name": "registry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13269,
                              "src": "2769:8:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRegistry_$15065",
                                "typeString": "contract IRegistry"
                              }
                            },
                            "id": 11980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getAddressForOrDie",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15033,
                            "src": "2769:27:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32) view external returns (address)"
                            }
                          },
                          "id": 11982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2769:51:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2750:70:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42757920746f6b656e2063616e206f6e6c792062652043454c4f20746f6b656e",
                        "id": 11984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2828:34:39",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a75bb3e2b27345ee32698656c0ac2ca69e9b58e3ed25d2812034500dcbc5bf0",
                          "typeString": "literal_string \"Buy token can only be CELO token\""
                        },
                        "value": "Buy token can only be CELO token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a75bb3e2b27345ee32698656c0ac2ca69e9b58e3ed25d2812034500dcbc5bf0",
                          "typeString": "literal_string \"Buy token can only be CELO token\""
                        }
                      ],
                      "id": 11977,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59926,
                        59927
                      ],
                      "referencedDeclaration": 59927,
                      "src": "2735:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2735:133:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11986,
                  "nodeType": "ExpressionStatement",
                  "src": "2735:133:39"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 11988,
                                "name": "routerAddresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11890,
                                "src": "2890:15:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$1260_storage_$",
                                  "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                                }
                              },
                              "id": 11990,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 11989,
                                "name": "sellTokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11966,
                                "src": "2906:16:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2890:33:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$1260_storage",
                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                              }
                            },
                            "id": 11991,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "values",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1259,
                            "src": "2890:40:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 11992,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2890:47:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 11993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2940:1:39",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2890:51:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "726f757465724164647265737365732073686f756c64206265206e6f6e20656d707479",
                        "id": 11995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2949:37:39",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_165e0bf8f1f6e56e3848d98e23d10c9a84f2724a3f4accb4951f747933b71c01",
                          "typeString": "literal_string \"routerAddresses should be non empty\""
                        },
                        "value": "routerAddresses should be non empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_165e0bf8f1f6e56e3848d98e23d10c9a84f2724a3f4accb4951f747933b71c01",
                          "typeString": "literal_string \"routerAddresses should be non empty\""
                        }
                      ],
                      "id": 11987,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59926,
                        59927
                      ],
                      "referencedDeclaration": 59927,
                      "src": "2875:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2875:117:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11997,
                  "nodeType": "ExpressionStatement",
                  "src": "2875:117:39"
                },
                {
                  "assignments": [
                    11999
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11999,
                      "name": "celoToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 12170,
                      "src": "3208:16:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$955",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 11998,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 955,
                        "src": "3208:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$955",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12002,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 12000,
                      "name": "getCeloToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13438,
                      "src": "3227:12:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$955_$",
                        "typeString": "function () view returns (contract IERC20)"
                      }
                    },
                    "id": 12001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3227:14:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$955",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3208:33:39"
                },
                {
                  "assignments": [
                    12004
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12004,
                      "name": "bestRouter",
                      "nodeType": "VariableDeclaration",
                      "scope": 12170,
                      "src": "3248:30:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54968",
                        "typeString": "contract IUniswapV2RouterMin"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 12003,
                        "name": "IUniswapV2RouterMin",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 54968,
                        "src": "3248:19:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54968",
                          "typeString": "contract IUniswapV2RouterMin"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12005,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3248:30:39"
                },
                {
                  "assignments": [
                    12007
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12007,
                      "name": "bestRouterQuote",
                      "nodeType": "VariableDeclaration",
                      "scope": 12170,
                      "src": "3284:23:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12006,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3284:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12009,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 12008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3310:1:39",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3284:27:39"
                },
                {
                  "assignments": [
                    12013
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12013,
                      "name": "path",
                      "nodeType": "VariableDeclaration",
                      "scope": 12170,
                      "src": "3318:21:39",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 12011,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3318:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 12012,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3318:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12019,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 12017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3356:1:39",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 12016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3342:13:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 12014,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3346:7:39",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 12015,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3346:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 12018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3342:16:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3318:40:39"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 12020,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12013,
                        "src": "3365:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 12022,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 12021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3370:1:39",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3365:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 12023,
                      "name": "sellTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11966,
                      "src": "3375:16:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3365:26:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 12025,
                  "nodeType": "ExpressionStatement",
                  "src": "3365:26:39"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 12026,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12013,
                        "src": "3397:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 12028,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 12027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3402:1:39",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3397:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 12030,
                          "name": "celoToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11999,
                          "src": "3415:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$955",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$955",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 12029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3407:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 12031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3407:18:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3397:28:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 12033,
                  "nodeType": "ExpressionStatement",
                  "src": "3397:28:39"
                },
                {
                  "body": {
                    "id": 12092,
                    "nodeType": "Block",
                    "src": "3510:605:39",
                    "statements": [
                      {
                        "assignments": [
                          12049
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 12049,
                            "name": "poolAddress",
                            "nodeType": "VariableDeclaration",
                            "scope": 12092,
                            "src": "3518:19:39",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 12048,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3518:7:39",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 12056,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 12054,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12035,
                              "src": "3578:1:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 12050,
                                "name": "routerAddresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11890,
                                "src": "3540:15:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$1260_storage_$",
                                  "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                                }
                              },
                              "id": 12052,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 12051,
                                "name": "sellTokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11966,
                                "src": "3556:16:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3540:33:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$1260_storage",
                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                              }
                            },
                            "id": 12053,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "get",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1464,
                            "src": "3540:37:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1260_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$1260_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
                            }
                          },
                          "id": 12055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3540:40:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3518:62:39"
                      },
                      {
                        "assignments": [
                          12058
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 12058,
                            "name": "router",
                            "nodeType": "VariableDeclaration",
                            "scope": 12092,
                            "src": "3588:26:39",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54968",
                              "typeString": "contract IUniswapV2RouterMin"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 12057,
                              "name": "IUniswapV2RouterMin",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 54968,
                              "src": "3588:19:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54968",
                                "typeString": "contract IUniswapV2RouterMin"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 12062,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 12060,
                              "name": "poolAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12049,
                              "src": "3637:11:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 12059,
                            "name": "IUniswapV2RouterMin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54968,
                            "src": "3617:19:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IUniswapV2RouterMin_$54968_$",
                              "typeString": "type(contract IUniswapV2RouterMin)"
                            }
                          },
                          "id": 12061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3617:32:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54968",
                            "typeString": "contract IUniswapV2RouterMin"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3588:61:39"
                      },
                      {
                        "assignments": [
                          12064
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 12064,
                            "name": "wouldGet",
                            "nodeType": "VariableDeclaration",
                            "scope": 12092,
                            "src": "3871:16:39",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 12063,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3871:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 12072,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 12067,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11970,
                                "src": "3911:6:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 12068,
                                "name": "path",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12013,
                                "src": "3919:4:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 12065,
                                "name": "router",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12058,
                                "src": "3890:6:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54968",
                                  "typeString": "contract IUniswapV2RouterMin"
                                }
                              },
                              "id": 12066,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getAmountsOut",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54962,
                              "src": "3890:20:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                "typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
                              }
                            },
                            "id": 12069,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3890:34:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 12071,
                          "indexExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 12070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3925:1:39",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3890:37:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3871:56:39"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 12074,
                              "name": "sellTokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11966,
                              "src": "3955:16:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 12075,
                              "name": "poolAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12049,
                              "src": "3973:11:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 12076,
                              "name": "wouldGet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12064,
                              "src": "3986:8:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 12073,
                            "name": "ReceivedQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11898,
                            "src": "3941:13:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 12077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3941:54:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12078,
                        "nodeType": "EmitStatement",
                        "src": "3936:59:39"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 12081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 12079,
                            "name": "wouldGet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12064,
                            "src": "4007:8:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 12080,
                            "name": "bestRouterQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12007,
                            "src": "4018:15:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4007:26:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 12091,
                        "nodeType": "IfStatement",
                        "src": "4003:106:39",
                        "trueBody": {
                          "id": 12090,
                          "nodeType": "Block",
                          "src": "4035:74:39",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 12084,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 12082,
                                  "name": "bestRouterQuote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12007,
                                  "src": "4045:15:39",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 12083,
                                  "name": "wouldGet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12064,
                                  "src": "4063:8:39",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4045:26:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 12085,
                              "nodeType": "ExpressionStatement",
                              "src": "4045:26:39"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 12088,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 12086,
                                  "name": "bestRouter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12004,
                                  "src": "4081:10:39",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54968",
                                    "typeString": "contract IUniswapV2RouterMin"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 12087,
                                  "name": "router",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12058,
                                  "src": "4094:6:39",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54968",
                                    "typeString": "contract IUniswapV2RouterMin"
                                  }
                                },
                                "src": "4081:19:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54968",
                                  "typeString": "contract IUniswapV2RouterMin"
                                }
                              },
                              "id": 12089,
                              "nodeType": "ExpressionStatement",
                              "src": "4081:19:39"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 12038,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12035,
                      "src": "3452:1:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 12039,
                            "name": "routerAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11890,
                            "src": "3456:15:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$1260_storage_$",
                              "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                            }
                          },
                          "id": 12041,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 12040,
                            "name": "sellTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11966,
                            "src": "3472:16:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3456:33:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressSet_$1260_storage",
                            "typeString": "struct EnumerableSet.AddressSet storage ref"
                          }
                        },
                        "id": 12042,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "values",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1259,
                        "src": "3456:40:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 12043,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3456:47:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3452:51:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12093,
                  "initializationExpression": {
                    "assignments": [
                      12035
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 12035,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 12093,
                        "src": "3437:9:39",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 12034,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3437:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 12037,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 12036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3449:1:39",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3437:13:39"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 12046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3505:3:39",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 12045,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12035,
                        "src": "3505:1:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 12047,
                    "nodeType": "ExpressionStatement",
                    "src": "3505:3:39"
                  },
                  "nodeType": "ForStatement",
                  "src": "3432:683:39"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 12095,
                          "name": "bestRouterQuote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12007,
                          "src": "4129:15:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 12096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4148:1:39",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4129:20:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e27742065786368616e67652077697468207a65726f2071756f7465",
                        "id": 12098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4151:32:39",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e922fdd17f0dca5c801efce65fb6d53726ba6a56278781a761dc52d89a28b6b",
                          "typeString": "literal_string \"Can't exchange with zero quote\""
                        },
                        "value": "Can't exchange with zero quote"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e922fdd17f0dca5c801efce65fb6d53726ba6a56278781a761dc52d89a28b6b",
                          "typeString": "literal_string \"Can't exchange with zero quote\""
                        }
                      ],
                      "id": 12094,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59926,
                        59927
                      ],
                      "referencedDeclaration": 59927,
                      "src": "4121:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4121:63:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12100,
                  "nodeType": "ExpressionStatement",
                  "src": "4121:63:39"
                },
                {
                  "assignments": [
                    12102
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12102,
                      "name": "minAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 12170,
                      "src": "4191:17:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12101,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4191:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12104,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 12103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4211:1:39",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4191:21:39"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12105,
                      "name": "minAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12102,
                      "src": "4218:9:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 12107,
                          "name": "sellTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11966,
                          "src": "4252:16:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12108,
                          "name": "maxSlippage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11972,
                          "src": "4270:11:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12109,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11970,
                          "src": "4283:6:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12110,
                          "name": "bestRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12004,
                          "src": "4291:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54968",
                            "typeString": "contract IUniswapV2RouterMin"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54968",
                            "typeString": "contract IUniswapV2RouterMin"
                          }
                        ],
                        "id": 12106,
                        "name": "calculateAllMinAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12360,
                        "src": "4230:21:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$_t_contract$_IUniswapV2RouterMin_$54968_$returns$_t_uint256_$",
                          "typeString": "function (address,uint256,uint256,contract IUniswapV2RouterMin) view returns (uint256)"
                        }
                      },
                      "id": 12111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4230:72:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4218:84:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12113,
                  "nodeType": "ExpressionStatement",
                  "src": "4218:84:39"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 12119,
                            "name": "bestRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12004,
                            "src": "4350:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54968",
                              "typeString": "contract IUniswapV2RouterMin"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54968",
                              "typeString": "contract IUniswapV2RouterMin"
                            }
                          ],
                          "id": 12118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4342:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 12120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4342:19:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12121,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11970,
                        "src": "4363:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 12115,
                            "name": "sellTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11966,
                            "src": "4316:16:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 12114,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 955,
                          "src": "4309:6:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$955_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 12116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4309:24:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$955",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 12117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 927,
                      "src": "4309:32:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 12122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4309:61:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12123,
                  "nodeType": "ExpressionStatement",
                  "src": "4309:61:39"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12127,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11970,
                        "src": "4419:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12128,
                        "name": "minAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12102,
                        "src": "4433:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12129,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12013,
                        "src": "4450:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 12131,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60085,
                            "src": "4470:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UniswapFeeHandlerSeller_$12361",
                              "typeString": "contract UniswapFeeHandlerSeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_UniswapFeeHandlerSeller_$12361",
                              "typeString": "contract UniswapFeeHandlerSeller"
                            }
                          ],
                          "id": 12130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4462:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 12132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4462:13:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12133,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59913,
                            "src": "4483:5:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 12134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4483:15:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 12135,
                          "name": "MAX_TIMESTAMP_BLOCK_EXCHANGE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11883,
                          "src": "4501:28:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4483:46:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12124,
                        "name": "bestRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12004,
                        "src": "4376:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54968",
                          "typeString": "contract IUniswapV2RouterMin"
                        }
                      },
                      "id": 12126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swapExactTokensForTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54951,
                      "src": "4376:35:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 12137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4376:159:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 12138,
                  "nodeType": "ExpressionStatement",
                  "src": "4376:159:39"
                },
                {
                  "assignments": [
                    12140
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12140,
                      "name": "celoAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 12170,
                      "src": "4542:18:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12139,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4542:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12147,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 12144,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60085,
                            "src": "4591:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UniswapFeeHandlerSeller_$12361",
                              "typeString": "contract UniswapFeeHandlerSeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_UniswapFeeHandlerSeller_$12361",
                              "typeString": "contract UniswapFeeHandlerSeller"
                            }
                          ],
                          "id": 12143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4583:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 12145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4583:13:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12141,
                        "name": "celoToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11999,
                        "src": "4563:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$955",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 12142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 900,
                      "src": "4563:19:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 12146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4563:34:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4542:55:39"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 12151,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59923,
                          "src": "4622:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4622:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12153,
                        "name": "celoAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12140,
                        "src": "4634:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12148,
                        "name": "celoToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11999,
                        "src": "4603:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$955",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 12150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 909,
                      "src": "4603:18:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 12154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4603:42:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12155,
                  "nodeType": "ExpressionStatement",
                  "src": "4603:42:39"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 12158,
                            "name": "bestRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12004,
                            "src": "4675:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54968",
                              "typeString": "contract IUniswapV2RouterMin"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54968",
                              "typeString": "contract IUniswapV2RouterMin"
                            }
                          ],
                          "id": 12157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4667:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 12159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4667:19:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12156,
                      "name": "RouterUsed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11902,
                      "src": "4656:10:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 12160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4656:31:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12161,
                  "nodeType": "EmitStatement",
                  "src": "4651:36:39"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12163,
                        "name": "sellTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11966,
                        "src": "4708:16:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12164,
                        "name": "buyTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11968,
                        "src": "4726:15:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12165,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11970,
                        "src": "4743:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12162,
                      "name": "TokenSold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7919,
                      "src": "4698:9:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 12166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4698:52:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12167,
                  "nodeType": "EmitStatement",
                  "src": "4693:57:39"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12168,
                    "name": "celoAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12140,
                    "src": "4763:10:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11976,
                  "id": 12169,
                  "nodeType": "Return",
                  "src": "4756:17:39"
                }
              ]
            },
            "documentation": null,
            "id": 12171,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sell",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11966,
                  "name": "sellTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 12171,
                  "src": "2583:24:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11965,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2583:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11968,
                  "name": "buyTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 12171,
                  "src": "2613:23:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11967,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2613:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11970,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 12171,
                  "src": "2642:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11969,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2642:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11972,
                  "name": "maxSlippage",
                  "nodeType": "VariableDeclaration",
                  "scope": 12171,
                  "src": "2662:19:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11971,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2662:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2577:124:39"
            },
            "returnParameters": {
              "id": 11976,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11975,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12171,
                  "src": "2720:7:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11974,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2720:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2719:9:39"
            },
            "scope": 12361,
            "src": "2564:2214:39",
            "stateMutability": "nonpayable",
            "superFunction": 14914,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12184,
              "nodeType": "Block",
              "src": "5030:47:39",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 12179,
                        "name": "routerAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11890,
                        "src": "5043:15:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$1260_storage_$",
                          "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                        }
                      },
                      "id": 12181,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 12180,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12173,
                        "src": "5059:5:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5043:22:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AddressSet_$1260_storage",
                        "typeString": "struct EnumerableSet.AddressSet storage ref"
                      }
                    },
                    "id": 12182,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "values",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1259,
                    "src": "5043:29:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 12178,
                  "id": 12183,
                  "nodeType": "Return",
                  "src": "5036:36:39"
                }
              ]
            },
            "documentation": "@notice Get the list of routers for a token.\n@param token The address of the token to query.\n@return An array of all the allowed router.",
            "id": 12185,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRoutersForToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12173,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 12185,
                  "src": "4974:13:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4974:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4973:15:39"
            },
            "returnParameters": {
              "id": 12178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12177,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12185,
                  "src": "5012:16:39",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12175,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5012:7:39",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 12176,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5012:9:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5011:18:39"
            },
            "scope": 12361,
            "src": "4946:131:39",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12202,
              "nodeType": "Block",
              "src": "5441:30:39",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 12196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5455:1:39",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 12197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5458:1:39",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 12198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5461:1:39",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 12199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5464:1:39",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "id": 12200,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5454:12:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_2_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
                      "typeString": "tuple(int_const 2,int_const 0,int_const 0,int_const 0)"
                    }
                  },
                  "functionReturnParameters": 12195,
                  "id": 12201,
                  "nodeType": "Return",
                  "src": "5447:19:39"
                }
              ]
            },
            "documentation": "@notice Returns the storage, major, minor, and patch version of the contract.\n@return Storage version of the contract.\n@return Major version of the contract.\n@return Minor version of the contract.\n@return Patch version of the contract.",
            "id": 12203,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVersionNumber",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5379:2:39"
            },
            "returnParameters": {
              "id": 12195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12188,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12203,
                  "src": "5405:7:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12187,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5405:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12190,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12203,
                  "src": "5414:7:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12189,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5414:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12192,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12203,
                  "src": "5423:7:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12191,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5423:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12194,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12203,
                  "src": "5432:7:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5432:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5404:36:39"
            },
            "scope": 12361,
            "src": "5354:117:39",
            "stateMutability": "pure",
            "superFunction": 14593,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12242,
              "nodeType": "Block",
              "src": "5534:288:39",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 12215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 12211,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12207,
                          "src": "5548:6:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 12213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5566:1:39",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 12212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5558:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 12214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5558:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5548:20:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "526f757465722063616e27742062652061646472657373207a65726f",
                        "id": 12216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5570:30:39",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7e073122cf0233ae9f99ba80dc2df44411bc03b8e06ae4546f19ee9c47e5c76d",
                          "typeString": "literal_string \"Router can't be address zero\""
                        },
                        "value": "Router can't be address zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7e073122cf0233ae9f99ba80dc2df44411bc03b8e06ae4546f19ee9c47e5c76d",
                          "typeString": "literal_string \"Router can't be address zero\""
                        }
                      ],
                      "id": 12210,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59926,
                        59927
                      ],
                      "referencedDeclaration": 59927,
                      "src": "5540:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5540:61:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12218,
                  "nodeType": "ExpressionStatement",
                  "src": "5540:61:39"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12223,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12207,
                        "src": "5634:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 12219,
                          "name": "routerAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11890,
                          "src": "5607:15:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$1260_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                          }
                        },
                        "id": 12221,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 12220,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12205,
                          "src": "5623:5:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5607:22:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$1260_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 12222,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1294,
                      "src": "5607:26:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1260_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$1260_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                      }
                    },
                    "id": 12224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5607:34:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12225,
                  "nodeType": "ExpressionStatement",
                  "src": "5607:34:39"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 12227,
                                "name": "routerAddresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11890,
                                "src": "5662:15:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$1260_storage_$",
                                  "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                                }
                              },
                              "id": 12229,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 12228,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12205,
                                "src": "5678:5:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5662:22:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$1260_storage",
                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                              }
                            },
                            "id": 12230,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "values",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1259,
                            "src": "5662:29:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 12231,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5662:36:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 12232,
                          "name": "MAX_NUMBER_ROUTERS_PER_TOKEN",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11886,
                          "src": "5702:28:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5662:68:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d6178206e756d626572206f6620726f75746572732072656163686564",
                        "id": 12234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5738:31:39",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b57133d444395eb498ab77bc7d3dc0bf20553812af7305101bcd7fa5a8e8575",
                          "typeString": "literal_string \"Max number of routers reached\""
                        },
                        "value": "Max number of routers reached"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b57133d444395eb498ab77bc7d3dc0bf20553812af7305101bcd7fa5a8e8575",
                          "typeString": "literal_string \"Max number of routers reached\""
                        }
                      ],
                      "id": 12226,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59926,
                        59927
                      ],
                      "referencedDeclaration": 59927,
                      "src": "5647:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5647:128:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12236,
                  "nodeType": "ExpressionStatement",
                  "src": "5647:128:39"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12238,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12205,
                        "src": "5803:5:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12239,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12207,
                        "src": "5810:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12237,
                      "name": "RouterAddressSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11908,
                      "src": "5786:16:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 12240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5786:31:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12241,
                  "nodeType": "EmitStatement",
                  "src": "5781:36:39"
                }
              ]
            },
            "documentation": null,
            "id": 12243,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setRouter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12205,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 12243,
                  "src": "5495:13:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12204,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5495:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12207,
                  "name": "router",
                  "nodeType": "VariableDeclaration",
                  "scope": 12243,
                  "src": "5510:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12206,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5510:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5494:31:39"
            },
            "returnParameters": {
              "id": 12209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5534:0:39"
            },
            "scope": 12361,
            "src": "5475:347:39",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 12359,
              "nodeType": "Block",
              "src": "6532:1171:39",
              "statements": [
                {
                  "assignments": [
                    12257
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12257,
                      "name": "_oracleAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 12359,
                      "src": "6538:22:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 12256,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6538:7:39",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12261,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12259,
                        "name": "sellTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12245,
                        "src": "6580:16:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12258,
                      "name": "getOracleAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8139,
                      "src": "6563:16:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view returns (address)"
                      }
                    },
                    "id": 12260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6563:34:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6538:59:39"
                },
                {
                  "assignments": [
                    12263
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12263,
                      "name": "minReports",
                      "nodeType": "VariableDeclaration",
                      "scope": 12359,
                      "src": "6604:18:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12262,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6604:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12267,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 12264,
                      "name": "minimumReports",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7901,
                      "src": "6625:14:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 12266,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 12265,
                      "name": "sellTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12245,
                      "src": "6640:16:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6625:32:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6604:53:39"
                },
                {
                  "assignments": [
                    12269
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12269,
                      "name": "oracle",
                      "nodeType": "VariableDeclaration",
                      "scope": 12359,
                      "src": "6664:14:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOracle_$1642",
                        "typeString": "contract IOracle"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 12268,
                        "name": "IOracle",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1642,
                        "src": "6664:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOracle_$1642",
                          "typeString": "contract IOracle"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12273,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12271,
                        "name": "_oracleAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12257,
                        "src": "6689:14:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12270,
                      "name": "IOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1642,
                      "src": "6681:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IOracle_$1642_$",
                        "typeString": "type(contract IOracle)"
                      }
                    },
                    "id": 12272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6681:23:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOracle_$1642",
                      "typeString": "contract IOracle"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6664:40:39"
                },
                {
                  "assignments": [
                    12275
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12275,
                      "name": "minimalSortedOracles",
                      "nodeType": "VariableDeclaration",
                      "scope": 12359,
                      "src": "6711:28:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12274,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6711:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12277,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 12276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6742:1:39",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6711:32:39"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 12278,
                      "name": "minReports",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12263,
                      "src": "6833:10:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 12279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6846:1:39",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6833:14:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 12316,
                  "nodeType": "IfStatement",
                  "src": "6829:476:39",
                  "trueBody": {
                    "id": 12315,
                    "nodeType": "Block",
                    "src": "6849:456:39",
                    "statements": [
                      {
                        "assignments": [
                          12282
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 12282,
                            "name": "sortedOracles",
                            "nodeType": "VariableDeclaration",
                            "scope": 12315,
                            "src": "6857:28:39",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISortedOracles_$53525",
                              "typeString": "contract ISortedOracles"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 12281,
                              "name": "ISortedOracles",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 53525,
                              "src": "6857:14:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISortedOracles_$53525",
                                "typeString": "contract ISortedOracles"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 12286,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 12284,
                              "name": "_oracleAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12257,
                              "src": "6903:14:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 12283,
                            "name": "ISortedOracles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53525,
                            "src": "6888:14:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ISortedOracles_$53525_$",
                              "typeString": "type(contract ISortedOracles)"
                            }
                          },
                          "id": 12285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6888:30:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISortedOracles_$53525",
                            "typeString": "contract ISortedOracles"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6857:61:39"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 12293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 12290,
                                    "name": "sellTokenAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12245,
                                    "src": "6966:16:39",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 12288,
                                    "name": "sortedOracles",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12282,
                                    "src": "6943:13:39",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISortedOracles_$53525",
                                      "typeString": "contract ISortedOracles"
                                    }
                                  },
                                  "id": 12289,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "numRates",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 53501,
                                  "src": "6943:22:39",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 12291,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6943:40:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 12292,
                                "name": "minReports",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12263,
                                "src": "6987:10:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6943:54:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4e756d626572206f66207265706f72747320666f7220746f6b656e206e6f7420656e6f756768",
                              "id": 12294,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7007:40:39",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_95b70a67b6f90bd4b4b99001501d6b791eaef597a8ec562443faa4204f719fe0",
                                "typeString": "literal_string \"Number of reports for token not enough\""
                              },
                              "value": "Number of reports for token not enough"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_95b70a67b6f90bd4b4b99001501d6b791eaef597a8ec562443faa4204f719fe0",
                                "typeString": "literal_string \"Number of reports for token not enough\""
                              }
                            ],
                            "id": 12287,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              59926,
                              59927
                            ],
                            "referencedDeclaration": 59927,
                            "src": "6926:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 12295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6926:129:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12296,
                        "nodeType": "ExpressionStatement",
                        "src": "6926:129:39"
                      },
                      {
                        "assignments": [
                          12298,
                          12300
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 12298,
                            "name": "rateNumerator",
                            "nodeType": "VariableDeclaration",
                            "scope": 12315,
                            "src": "7065:21:39",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 12297,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7065:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 12300,
                            "name": "rateDenominator",
                            "nodeType": "VariableDeclaration",
                            "scope": 12315,
                            "src": "7088:23:39",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 12299,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7088:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 12305,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 12303,
                              "name": "sellTokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12245,
                              "src": "7138:16:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 12301,
                              "name": "oracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12269,
                              "src": "7115:6:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IOracle_$1642",
                                "typeString": "contract IOracle"
                              }
                            },
                            "id": 12302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getExchangeRate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1641,
                            "src": "7115:22:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256,uint256)"
                            }
                          },
                          "id": 12304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7115:40:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7064:91:39"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 12313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 12306,
                            "name": "minimalSortedOracles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12275,
                            "src": "7164:20:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 12308,
                                "name": "rateNumerator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12298,
                                "src": "7215:13:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 12309,
                                "name": "rateDenominator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12300,
                                "src": "7238:15:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 12310,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12249,
                                "src": "7263:6:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 12311,
                                "name": "maxSlippage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12247,
                                "src": "7279:11:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 12307,
                              "name": "calculateMinAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8071,
                              "src": "7187:18:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 12312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7187:111:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7164:134:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 12314,
                        "nodeType": "ExpressionStatement",
                        "src": "7164:134:39"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    12318
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12318,
                      "name": "celoToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 12359,
                      "src": "7311:16:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$955",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 12317,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 955,
                        "src": "7311:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$955",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12321,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 12319,
                      "name": "getCeloToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13438,
                      "src": "7330:12:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$955_$",
                        "typeString": "function () view returns (contract IERC20)"
                      }
                    },
                    "id": 12320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7330:14:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$955",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7311:33:39"
                },
                {
                  "assignments": [
                    12323
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12323,
                      "name": "pair",
                      "nodeType": "VariableDeclaration",
                      "scope": 12359,
                      "src": "7350:12:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 12322,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7350:7:39",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12335,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12330,
                        "name": "sellTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12245,
                        "src": "7423:16:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 12332,
                            "name": "celoToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12318,
                            "src": "7455:9:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$955",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$955",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 12331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7447:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 12333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7447:18:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 12325,
                                "name": "bestRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12251,
                                "src": "7386:10:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54968",
                                  "typeString": "contract IUniswapV2RouterMin"
                                }
                              },
                              "id": 12326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "factory",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54967,
                              "src": "7386:18:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                "typeString": "function () pure external returns (address)"
                              }
                            },
                            "id": 12327,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7386:20:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 12324,
                          "name": "IUniswapV2FactoryMin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54300,
                          "src": "7365:20:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV2FactoryMin_$54300_$",
                            "typeString": "type(contract IUniswapV2FactoryMin)"
                          }
                        },
                        "id": 12328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7365:42:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2FactoryMin_$54300",
                          "typeString": "contract IUniswapV2FactoryMin"
                        }
                      },
                      "id": 12329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54299,
                      "src": "7365:50:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_address_$",
                        "typeString": "function (address,address) view external returns (address)"
                      }
                    },
                    "id": 12334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7365:106:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7350:121:39"
                },
                {
                  "assignments": [
                    12337
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12337,
                      "name": "minAmountPair",
                      "nodeType": "VariableDeclaration",
                      "scope": 12359,
                      "src": "7477:21:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12336,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7477:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12352,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 12343,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12323,
                            "src": "7562:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 12340,
                                "name": "sellTokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12245,
                                "src": "7534:16:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 12339,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 955,
                              "src": "7527:6:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$955_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 12341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7527:24:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$955",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 12342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 900,
                          "src": "7527:34:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 12344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7527:40:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 12347,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12323,
                            "src": "7595:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 12345,
                            "name": "celoToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12318,
                            "src": "7575:9:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$955",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 12346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 900,
                          "src": "7575:19:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 12348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7575:25:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12349,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12249,
                        "src": "7608:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12350,
                        "name": "maxSlippage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12247,
                        "src": "7622:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12338,
                      "name": "calculateMinAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8071,
                      "src": "7501:18:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 12351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7501:138:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7477:162:39"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12355,
                        "name": "minAmountPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12337,
                        "src": "7662:13:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12356,
                        "name": "minimalSortedOracles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12275,
                        "src": "7677:20:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12353,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 176,
                        "src": "7653:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$176_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 12354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 126,
                      "src": "7653:8:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 12357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7653:45:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12255,
                  "id": 12358,
                  "nodeType": "Return",
                  "src": "7646:52:39"
                }
              ]
            },
            "documentation": "@dev Calculates the minimum amount of tokens that can be received for a given amount of sell tokens, \ntaking into account the slippage and the rates of the sell token and CELO token on the Uniswap V2 pair.\n@param sellTokenAddress The address of the sell token.\n@param maxSlippage The maximum slippage allowed.\n@param amount The amount of sell tokens to be traded.\n@param bestRouter The Uniswap V2 router with the best price.\n@return The minimum amount of tokens that can be received.",
            "id": 12360,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateAllMinAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12245,
                  "name": "sellTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 12360,
                  "src": "6391:24:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6391:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12247,
                  "name": "maxSlippage",
                  "nodeType": "VariableDeclaration",
                  "scope": 12360,
                  "src": "6421:19:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12246,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6421:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12249,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 12360,
                  "src": "6446:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6446:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12251,
                  "name": "bestRouter",
                  "nodeType": "VariableDeclaration",
                  "scope": 12360,
                  "src": "6466:30:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54968",
                    "typeString": "contract IUniswapV2RouterMin"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12250,
                    "name": "IUniswapV2RouterMin",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 54968,
                    "src": "6466:19:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54968",
                      "typeString": "contract IUniswapV2RouterMin"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6385:115:39"
            },
            "returnParameters": {
              "id": 12255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12254,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12360,
                  "src": "6523:7:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12253,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6523:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6522:9:39"
            },
            "scope": 12361,
            "src": "6355:1348:39",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 12362,
        "src": "933:6772:39"
      }
    ],
    "src": "0:7706:39"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/common/UniswapFeeHandlerSeller.sol",
      "exportedSymbols": {
        "UniswapFeeHandlerSeller": [
          12361
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".13"
          ]
        },
        "id": 11853,
        "name": "PragmaDirective",
        "src": "0:24:39"
      },
      {
        "attributes": {
          "SourceUnit": 364,
          "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
          "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
          "scope": 12362,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 11854,
        "name": "ImportDirective",
        "src": "26:59:39"
      },
      {
        "attributes": {
          "SourceUnit": 956,
          "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
          "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
          "scope": 12362,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 11855,
        "name": "ImportDirective",
        "src": "86:64:39"
      },
      {
        "attributes": {
          "SourceUnit": 1466,
          "absolutePath": "openzeppelin-solidity/contracts/utils/EnumerableSet.sol",
          "file": "openzeppelin-solidity/contracts/utils/EnumerableSet.sol",
          "scope": 12362,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 11856,
        "name": "ImportDirective",
        "src": "151:65:39"
      },
      {
        "attributes": {
          "SourceUnit": 482,
          "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
          "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
          "scope": 12362,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 11857,
        "name": "ImportDirective",
        "src": "217:63:39"
      },
      {
        "attributes": {
          "SourceUnit": 177,
          "absolutePath": "openzeppelin-solidity/contracts/math/Math.sol",
          "file": "openzeppelin-solidity/contracts/math/Math.sol",
          "scope": 12362,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 11858,
        "name": "ImportDirective",
        "src": "281:55:39"
      },
      {
        "attributes": {
          "SourceUnit": 13583,
          "absolutePath": "project:/contracts/common/UsingRegistry.sol",
          "file": "./UsingRegistry.sol",
          "scope": 12362,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 11859,
        "name": "ImportDirective",
        "src": "338:29:39"
      },
      {
        "attributes": {
          "SourceUnit": 14927,
          "absolutePath": "project:/contracts/common/interfaces/IFeeHandlerSeller.sol",
          "file": "../common/interfaces/IFeeHandlerSeller.sol",
          "scope": 12362,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 11860,
        "name": "ImportDirective",
        "src": "369:52:39"
      },
      {
        "attributes": {
          "SourceUnit": 53526,
          "absolutePath": "project:/contracts/stability/interfaces/ISortedOracles.sol",
          "file": "../stability/interfaces/ISortedOracles.sol",
          "scope": 12362,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 11861,
        "name": "ImportDirective",
        "src": "422:52:39"
      },
      {
        "attributes": {
          "SourceUnit": 1643,
          "absolutePath": "project:/contracts-0.8/common/interfaces/IOracle.sol",
          "file": "../../contracts-0.8/common/interfaces/IOracle.sol",
          "scope": 12362,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 11862,
        "name": "ImportDirective",
        "src": "475:59:39"
      },
      {
        "attributes": {
          "SourceUnit": 8745,
          "absolutePath": "project:/contracts/common/FixidityLib.sol",
          "file": "../common/FixidityLib.sol",
          "scope": 12362,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 11863,
        "name": "ImportDirective",
        "src": "535:35:39"
      },
      {
        "attributes": {
          "SourceUnit": 9571,
          "absolutePath": "project:/contracts/common/Initializable.sol",
          "file": "../common/Initializable.sol",
          "scope": 12362,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 11864,
        "name": "ImportDirective",
        "src": "571:37:39"
      },
      {
        "attributes": {
          "SourceUnit": 8141,
          "absolutePath": "project:/contracts/common/FeeHandlerSeller.sol",
          "file": "./FeeHandlerSeller.sol",
          "scope": 12362,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 11865,
        "name": "ImportDirective",
        "src": "609:32:39"
      },
      {
        "attributes": {
          "SourceUnit": 54969,
          "absolutePath": "project:/contracts/uniswap/interfaces/IUniswapV2RouterMin.sol",
          "file": "../uniswap/interfaces/IUniswapV2RouterMin.sol",
          "scope": 12362,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 11866,
        "name": "ImportDirective",
        "src": "643:55:39"
      },
      {
        "attributes": {
          "SourceUnit": 54301,
          "absolutePath": "project:/contracts/uniswap/interfaces/IUniswapV2FactoryMin.sol",
          "file": "../uniswap/interfaces/IUniswapV2FactoryMin.sol",
          "scope": 12362,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 11867,
        "name": "ImportDirective",
        "src": "699:56:39"
      },
      {
        "attributes": {
          "contractDependencies": [
            26,
            481,
            8140,
            9570,
            13582,
            14594,
            14926
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            12361,
            8140,
            14594,
            13582,
            9570,
            481,
            26,
            14926
          ],
          "name": "UniswapFeeHandlerSeller",
          "scope": 12362
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "IFeeHandlerSeller",
                  "referencedDeclaration": 14926,
                  "type": "contract IFeeHandlerSeller"
                },
                "id": 11868,
                "name": "UserDefinedTypeName",
                "src": "969:17:39"
              }
            ],
            "id": 11869,
            "name": "InheritanceSpecifier",
            "src": "969:17:39"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "FeeHandlerSeller",
                  "referencedDeclaration": 8140,
                  "type": "contract FeeHandlerSeller"
                },
                "id": 11870,
                "name": "UserDefinedTypeName",
                "src": "988:16:39"
              }
            ],
            "id": 11871,
            "name": "InheritanceSpecifier",
            "src": "988:16:39"
          },
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "SafeMath",
                  "referencedDeclaration": 363,
                  "type": "library SafeMath"
                },
                "id": 11872,
                "name": "UserDefinedTypeName",
                "src": "1015:8:39"
              },
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 11873,
                "name": "ElementaryTypeName",
                "src": "1028:7:39"
              }
            ],
            "id": 11874,
            "name": "UsingForDirective",
            "src": "1009:27:39"
          },
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "FixidityLib",
                  "referencedDeclaration": 8744,
                  "type": "library FixidityLib"
                },
                "id": 11875,
                "name": "UserDefinedTypeName",
                "src": "1045:11:39"
              },
              {
                "attributes": {
                  "contractScope": null,
                  "name": "FixidityLib.Fraction",
                  "referencedDeclaration": 8145,
                  "type": "struct FixidityLib.Fraction"
                },
                "id": 11876,
                "name": "UserDefinedTypeName",
                "src": "1061:20:39"
              }
            ],
            "id": 11877,
            "name": "UsingForDirective",
            "src": "1039:43:39"
          },
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "EnumerableSet",
                  "referencedDeclaration": 1465,
                  "type": "library EnumerableSet"
                },
                "id": 11878,
                "name": "UserDefinedTypeName",
                "src": "1091:13:39"
              },
              {
                "attributes": {
                  "contractScope": null,
                  "name": "EnumerableSet.AddressSet",
                  "referencedDeclaration": 1260,
                  "type": "struct EnumerableSet.AddressSet"
                },
                "id": 11879,
                "name": "UserDefinedTypeName",
                "src": "1109:24:39"
              }
            ],
            "id": 11880,
            "name": "UsingForDirective",
            "src": "1085:49:39"
          },
          {
            "attributes": {
              "constant": true,
              "name": "MAX_TIMESTAMP_BLOCK_EXCHANGE",
              "scope": 12361,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 11881,
                "name": "ElementaryTypeName",
                "src": "1138:7:39"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "3230",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 20",
                  "value": "20"
                },
                "id": 11882,
                "name": "Literal",
                "src": "1186:2:39"
              }
            ],
            "id": 11883,
            "name": "VariableDeclaration",
            "src": "1138:50:39"
          },
          {
            "attributes": {
              "constant": true,
              "name": "MAX_NUMBER_ROUTERS_PER_TOKEN",
              "scope": 12361,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 11884,
                "name": "ElementaryTypeName",
                "src": "1192:7:39"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "33",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 3",
                  "value": "3"
                },
                "id": 11885,
                "name": "Literal",
                "src": "1240:1:39"
              }
            ],
            "id": 11886,
            "name": "VariableDeclaration",
            "src": "1192:49:39"
          },
          {
            "attributes": {
              "constant": false,
              "name": "routerAddresses",
              "scope": 12361,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct EnumerableSet.AddressSet)",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct EnumerableSet.AddressSet)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 11887,
                    "name": "ElementaryTypeName",
                    "src": "1253:7:39"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "EnumerableSet.AddressSet",
                      "referencedDeclaration": 1260,
                      "type": "struct EnumerableSet.AddressSet"
                    },
                    "id": 11888,
                    "name": "UserDefinedTypeName",
                    "src": "1264:24:39"
                  }
                ],
                "id": 11889,
                "name": "Mapping",
                "src": "1245:44:39"
              }
            ],
            "id": 11890,
            "name": "VariableDeclaration",
            "src": "1245:68:39"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "ReceivedQuote"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "tokneAddress",
                      "scope": 11898,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 11891,
                        "name": "ElementaryTypeName",
                        "src": "1338:7:39"
                      }
                    ],
                    "id": 11892,
                    "name": "VariableDeclaration",
                    "src": "1338:28:39"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "router",
                      "scope": 11898,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 11893,
                        "name": "ElementaryTypeName",
                        "src": "1368:7:39"
                      }
                    ],
                    "id": 11894,
                    "name": "VariableDeclaration",
                    "src": "1368:22:39"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "quote",
                      "scope": 11898,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 11895,
                        "name": "ElementaryTypeName",
                        "src": "1392:7:39"
                      }
                    ],
                    "id": 11896,
                    "name": "VariableDeclaration",
                    "src": "1392:13:39"
                  }
                ],
                "id": 11897,
                "name": "ParameterList",
                "src": "1337:69:39"
              }
            ],
            "id": 11898,
            "name": "EventDefinition",
            "src": "1318:89:39"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "RouterUsed"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "router",
                      "scope": 11902,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 11899,
                        "name": "ElementaryTypeName",
                        "src": "1427:7:39"
                      }
                    ],
                    "id": 11900,
                    "name": "VariableDeclaration",
                    "src": "1427:14:39"
                  }
                ],
                "id": 11901,
                "name": "ParameterList",
                "src": "1426:16:39"
              }
            ],
            "id": 11902,
            "name": "EventDefinition",
            "src": "1410:33:39"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "RouterAddressSet"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "token",
                      "scope": 11908,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 11903,
                        "name": "ElementaryTypeName",
                        "src": "1469:7:39"
                      }
                    ],
                    "id": 11904,
                    "name": "VariableDeclaration",
                    "src": "1469:13:39"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "router",
                      "scope": 11908,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 11905,
                        "name": "ElementaryTypeName",
                        "src": "1484:7:39"
                      }
                    ],
                    "id": 11906,
                    "name": "VariableDeclaration",
                    "src": "1484:14:39"
                  }
                ],
                "id": 11907,
                "name": "ParameterList",
                "src": "1468:31:39"
              }
            ],
            "id": 11908,
            "name": "EventDefinition",
            "src": "1446:54:39"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "RouterAddressRemoved"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "token",
                      "scope": 11914,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 11909,
                        "name": "ElementaryTypeName",
                        "src": "1530:7:39"
                      }
                    ],
                    "id": 11910,
                    "name": "VariableDeclaration",
                    "src": "1530:13:39"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "router",
                      "scope": 11914,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 11911,
                        "name": "ElementaryTypeName",
                        "src": "1545:7:39"
                      }
                    ],
                    "id": 11912,
                    "name": "VariableDeclaration",
                    "src": "1545:14:39"
                  }
                ],
                "id": 11913,
                "name": "ParameterList",
                "src": "1529:31:39"
              }
            ],
            "id": 11914,
            "name": "EventDefinition",
            "src": "1503:58:39"
          },
          {
            "attributes": {
              "documentation": "@notice Sets initialized == true on implementation contracts.\n@param test Set to true to skip implementation initialisation.",
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 12361,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "test",
                      "scope": 11923,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 11915,
                        "name": "ElementaryTypeName",
                        "src": "1724:4:39"
                      }
                    ],
                    "id": 11916,
                    "name": "VariableDeclaration",
                    "src": "1724:9:39"
                  }
                ],
                "id": 11917,
                "name": "ParameterList",
                "src": "1723:11:39"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 11921,
                "name": "ParameterList",
                "src": "1762:0:39"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 9570,
                      "type": "type(contract Initializable)",
                      "value": "Initializable"
                    },
                    "id": 11918,
                    "name": "Identifier",
                    "src": "1742:13:39"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 11916,
                      "type": "bool",
                      "value": "test"
                    },
                    "id": 11919,
                    "name": "Identifier",
                    "src": "1756:4:39"
                  }
                ],
                "id": 11920,
                "name": "ModifierInvocation",
                "src": "1742:19:39"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 11922,
                "name": "Block",
                "src": "1762:2:39"
              }
            ],
            "id": 11923,
            "name": "FunctionDefinition",
            "src": "1712:52:39"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "fallback",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 12361,
              "stateMutability": "payable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 11924,
                "name": "ParameterList",
                "src": "1848:2:39"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 11925,
                "name": "ParameterList",
                "src": "1868:0:39"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 11926,
                "name": "Block",
                "src": "1868:2:39"
              }
            ],
            "id": 11927,
            "name": "FunctionDefinition",
            "src": "1840:30:39"
          },
          {
            "attributes": {
              "documentation": "@notice Allows owner to set the router for a token.\n@param token Address of the token to set.\n@param router The new router.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "setRouter",
              "scope": 12361,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "token",
                      "scope": 11942,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 11928,
                        "name": "ElementaryTypeName",
                        "src": "2044:7:39"
                      }
                    ],
                    "id": 11929,
                    "name": "VariableDeclaration",
                    "src": "2044:13:39"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "router",
                      "scope": 11942,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 11930,
                        "name": "ElementaryTypeName",
                        "src": "2059:7:39"
                      }
                    ],
                    "id": 11931,
                    "name": "VariableDeclaration",
                    "src": "2059:14:39"
                  }
                ],
                "id": 11932,
                "name": "ParameterList",
                "src": "2043:31:39"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 11935,
                "name": "ParameterList",
                "src": "2094:0:39"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 414,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 11933,
                    "name": "Identifier",
                    "src": "2084:9:39"
                  }
                ],
                "id": 11934,
                "name": "ModifierInvocation",
                "src": "2084:9:39"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 12243,
                              "type": "function (address,address)",
                              "value": "_setRouter"
                            },
                            "id": 11936,
                            "name": "Identifier",
                            "src": "2100:10:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 11929,
                              "type": "address",
                              "value": "token"
                            },
                            "id": 11937,
                            "name": "Identifier",
                            "src": "2111:5:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 11931,
                              "type": "address",
                              "value": "router"
                            },
                            "id": 11938,
                            "name": "Identifier",
                            "src": "2118:6:39"
                          }
                        ],
                        "id": 11939,
                        "name": "FunctionCall",
                        "src": "2100:25:39"
                      }
                    ],
                    "id": 11940,
                    "name": "ExpressionStatement",
                    "src": "2100:25:39"
                  }
                ],
                "id": 11941,
                "name": "Block",
                "src": "2094:36:39"
              }
            ],
            "id": 11942,
            "name": "FunctionDefinition",
            "src": "2025:105:39"
          },
          {
            "attributes": {
              "documentation": "@notice Allows owner to remove a router for a token.\n@param token Address of the token.\n@param router Address of the router to remove.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "removeRouter",
              "scope": 12361,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "token",
                      "scope": 11964,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 11943,
                        "name": "ElementaryTypeName",
                        "src": "2318:7:39"
                      }
                    ],
                    "id": 11944,
                    "name": "VariableDeclaration",
                    "src": "2318:13:39"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "router",
                      "scope": 11964,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 11945,
                        "name": "ElementaryTypeName",
                        "src": "2333:7:39"
                      }
                    ],
                    "id": 11946,
                    "name": "VariableDeclaration",
                    "src": "2333:14:39"
                  }
                ],
                "id": 11947,
                "name": "ParameterList",
                "src": "2317:31:39"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 11950,
                "name": "ParameterList",
                "src": "2368:0:39"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 414,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 11948,
                    "name": "Identifier",
                    "src": "2358:9:39"
                  }
                ],
                "id": 11949,
                "name": "ModifierInvocation",
                "src": "2358:9:39"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "remove",
                              "referencedDeclaration": 1375,
                              "type": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct EnumerableSet.AddressSet storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 11890,
                                      "type": "mapping(address => struct EnumerableSet.AddressSet storage ref)",
                                      "value": "routerAddresses"
                                    },
                                    "id": 11951,
                                    "name": "Identifier",
                                    "src": "2374:15:39"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 11944,
                                      "type": "address",
                                      "value": "token"
                                    },
                                    "id": 11952,
                                    "name": "Identifier",
                                    "src": "2390:5:39"
                                  }
                                ],
                                "id": 11953,
                                "name": "IndexAccess",
                                "src": "2374:22:39"
                              }
                            ],
                            "id": 11954,
                            "name": "MemberAccess",
                            "src": "2374:29:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 11946,
                              "type": "address",
                              "value": "router"
                            },
                            "id": 11955,
                            "name": "Identifier",
                            "src": "2404:6:39"
                          }
                        ],
                        "id": 11956,
                        "name": "FunctionCall",
                        "src": "2374:37:39"
                      }
                    ],
                    "id": 11957,
                    "name": "ExpressionStatement",
                    "src": "2374:37:39"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 11914,
                              "type": "function (address,address)",
                              "value": "RouterAddressRemoved"
                            },
                            "id": 11958,
                            "name": "Identifier",
                            "src": "2422:20:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 11944,
                              "type": "address",
                              "value": "token"
                            },
                            "id": 11959,
                            "name": "Identifier",
                            "src": "2443:5:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 11946,
                              "type": "address",
                              "value": "router"
                            },
                            "id": 11960,
                            "name": "Identifier",
                            "src": "2450:6:39"
                          }
                        ],
                        "id": 11961,
                        "name": "FunctionCall",
                        "src": "2422:35:39"
                      }
                    ],
                    "id": 11962,
                    "name": "EmitStatement",
                    "src": "2417:40:39"
                  }
                ],
                "id": 11963,
                "name": "Block",
                "src": "2368:94:39"
              }
            ],
            "id": 11964,
            "name": "FunctionDefinition",
            "src": "2296:166:39"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "sell",
              "scope": 12361,
              "stateMutability": "nonpayable",
              "superFunction": 14914,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "sellTokenAddress",
                      "scope": 12171,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 11965,
                        "name": "ElementaryTypeName",
                        "src": "2583:7:39"
                      }
                    ],
                    "id": 11966,
                    "name": "VariableDeclaration",
                    "src": "2583:24:39"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "buyTokenAddress",
                      "scope": 12171,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 11967,
                        "name": "ElementaryTypeName",
                        "src": "2613:7:39"
                      }
                    ],
                    "id": 11968,
                    "name": "VariableDeclaration",
                    "src": "2613:23:39"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "amount",
                      "scope": 12171,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 11969,
                        "name": "ElementaryTypeName",
                        "src": "2642:7:39"
                      }
                    ],
                    "id": 11970,
                    "name": "VariableDeclaration",
                    "src": "2642:14:39"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "maxSlippage",
                      "scope": 12171,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 11971,
                        "name": "ElementaryTypeName",
                        "src": "2662:7:39"
                      }
                    ],
                    "id": 11972,
                    "name": "VariableDeclaration",
                    "src": "2662:19:39"
                  }
                ],
                "id": 11973,
                "name": "ParameterList",
                "src": "2577:124:39"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 12171,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 11974,
                        "name": "ElementaryTypeName",
                        "src": "2720:7:39"
                      }
                    ],
                    "id": 11975,
                    "name": "VariableDeclaration",
                    "src": "2720:7:39"
                  }
                ],
                "id": 11976,
                "name": "ParameterList",
                "src": "2719:9:39"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_1a75bb3e2b27345ee32698656c0ac2ca69e9b58e3ed25d2812034500dcbc5bf0",
                                  "typeString": "literal_string \"Buy token can only be CELO token\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59926,
                                59927
                              ],
                              "referencedDeclaration": 59927,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 11977,
                            "name": "Identifier",
                            "src": "2735:7:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 11968,
                                  "type": "address",
                                  "value": "buyTokenAddress"
                                },
                                "id": 11978,
                                "name": "Identifier",
                                "src": "2750:15:39"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "getAddressForOrDie",
                                      "referencedDeclaration": 15033,
                                      "type": "function (bytes32) view external returns (address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 13269,
                                          "type": "contract IRegistry",
                                          "value": "registry"
                                        },
                                        "id": 11979,
                                        "name": "Identifier",
                                        "src": "2769:8:39"
                                      }
                                    ],
                                    "id": 11980,
                                    "name": "MemberAccess",
                                    "src": "2769:27:39"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 13227,
                                      "type": "bytes32",
                                      "value": "CELO_TOKEN_REGISTRY_ID"
                                    },
                                    "id": 11981,
                                    "name": "Identifier",
                                    "src": "2797:22:39"
                                  }
                                ],
                                "id": 11982,
                                "name": "FunctionCall",
                                "src": "2769:51:39"
                              }
                            ],
                            "id": 11983,
                            "name": "BinaryOperation",
                            "src": "2750:70:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "42757920746f6b656e2063616e206f6e6c792062652043454c4f20746f6b656e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Buy token can only be CELO token\"",
                              "value": "Buy token can only be CELO token"
                            },
                            "id": 11984,
                            "name": "Literal",
                            "src": "2828:34:39"
                          }
                        ],
                        "id": 11985,
                        "name": "FunctionCall",
                        "src": "2735:133:39"
                      }
                    ],
                    "id": 11986,
                    "name": "ExpressionStatement",
                    "src": "2735:133:39"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_165e0bf8f1f6e56e3848d98e23d10c9a84f2724a3f4accb4951f747933b71c01",
                                  "typeString": "literal_string \"routerAddresses should be non empty\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59926,
                                59927
                              ],
                              "referencedDeclaration": 59927,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 11987,
                            "name": "Identifier",
                            "src": "2875:7:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "length",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "values",
                                      "referencedDeclaration": 1259,
                                      "type": "address[] storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct EnumerableSet.AddressSet storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 11890,
                                              "type": "mapping(address => struct EnumerableSet.AddressSet storage ref)",
                                              "value": "routerAddresses"
                                            },
                                            "id": 11988,
                                            "name": "Identifier",
                                            "src": "2890:15:39"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 11966,
                                              "type": "address",
                                              "value": "sellTokenAddress"
                                            },
                                            "id": 11989,
                                            "name": "Identifier",
                                            "src": "2906:16:39"
                                          }
                                        ],
                                        "id": 11990,
                                        "name": "IndexAccess",
                                        "src": "2890:33:39"
                                      }
                                    ],
                                    "id": 11991,
                                    "name": "MemberAccess",
                                    "src": "2890:40:39"
                                  }
                                ],
                                "id": 11992,
                                "name": "MemberAccess",
                                "src": "2890:47:39"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 11993,
                                "name": "Literal",
                                "src": "2940:1:39"
                              }
                            ],
                            "id": 11994,
                            "name": "BinaryOperation",
                            "src": "2890:51:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "726f757465724164647265737365732073686f756c64206265206e6f6e20656d707479",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"routerAddresses should be non empty\"",
                              "value": "routerAddresses should be non empty"
                            },
                            "id": 11995,
                            "name": "Literal",
                            "src": "2949:37:39"
                          }
                        ],
                        "id": 11996,
                        "name": "FunctionCall",
                        "src": "2875:117:39"
                      }
                    ],
                    "id": 11997,
                    "name": "ExpressionStatement",
                    "src": "2875:117:39"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        11999
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "celoToken",
                          "scope": 12170,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract IERC20",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "IERC20",
                              "referencedDeclaration": 955,
                              "type": "contract IERC20"
                            },
                            "id": 11998,
                            "name": "UserDefinedTypeName",
                            "src": "3208:6:39"
                          }
                        ],
                        "id": 11999,
                        "name": "VariableDeclaration",
                        "src": "3208:16:39"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "contract IERC20",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 13438,
                              "type": "function () view returns (contract IERC20)",
                              "value": "getCeloToken"
                            },
                            "id": 12000,
                            "name": "Identifier",
                            "src": "3227:12:39"
                          }
                        ],
                        "id": 12001,
                        "name": "FunctionCall",
                        "src": "3227:14:39"
                      }
                    ],
                    "id": 12002,
                    "name": "VariableDeclarationStatement",
                    "src": "3208:33:39"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        12004
                      ],
                      "initialValue": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "bestRouter",
                          "scope": 12170,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract IUniswapV2RouterMin",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "IUniswapV2RouterMin",
                              "referencedDeclaration": 54968,
                              "type": "contract IUniswapV2RouterMin"
                            },
                            "id": 12003,
                            "name": "UserDefinedTypeName",
                            "src": "3248:19:39"
                          }
                        ],
                        "id": 12004,
                        "name": "VariableDeclaration",
                        "src": "3248:30:39"
                      }
                    ],
                    "id": 12005,
                    "name": "VariableDeclarationStatement",
                    "src": "3248:30:39"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        12007
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "bestRouterQuote",
                          "scope": 12170,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 12006,
                            "name": "ElementaryTypeName",
                            "src": "3284:7:39"
                          }
                        ],
                        "id": 12007,
                        "name": "VariableDeclaration",
                        "src": "3284:23:39"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "30",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "number",
                          "type": "int_const 0",
                          "value": "0"
                        },
                        "id": 12008,
                        "name": "Literal",
                        "src": "3310:1:39"
                      }
                    ],
                    "id": 12009,
                    "name": "VariableDeclarationStatement",
                    "src": "3284:27:39"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        12013
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "path",
                          "scope": 12170,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "address[]",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "length": null,
                              "type": "address[]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "address",
                                  "type": "address"
                                },
                                "id": 12011,
                                "name": "ElementaryTypeName",
                                "src": "3318:7:39"
                              }
                            ],
                            "id": 12012,
                            "name": "ArrayTypeName",
                            "src": "3318:9:39"
                          }
                        ],
                        "id": 12013,
                        "name": "VariableDeclaration",
                        "src": "3318:21:39"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "address[] memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "function (uint256) pure returns (address[] memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "length": null,
                                  "type": "address[]"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address",
                                      "stateMutability": "nonpayable",
                                      "type": "address"
                                    },
                                    "id": 12014,
                                    "name": "ElementaryTypeName",
                                    "src": "3346:7:39"
                                  }
                                ],
                                "id": 12015,
                                "name": "ArrayTypeName",
                                "src": "3346:9:39"
                              }
                            ],
                            "id": 12016,
                            "name": "NewExpression",
                            "src": "3342:13:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 12017,
                            "name": "Literal",
                            "src": "3356:1:39"
                          }
                        ],
                        "id": 12018,
                        "name": "FunctionCall",
                        "src": "3342:16:39"
                      }
                    ],
                    "id": 12019,
                    "name": "VariableDeclarationStatement",
                    "src": "3318:40:39"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 12013,
                                  "type": "address[] memory",
                                  "value": "path"
                                },
                                "id": 12020,
                                "name": "Identifier",
                                "src": "3365:4:39"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 12021,
                                "name": "Literal",
                                "src": "3370:1:39"
                              }
                            ],
                            "id": 12022,
                            "name": "IndexAccess",
                            "src": "3365:7:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 11966,
                              "type": "address",
                              "value": "sellTokenAddress"
                            },
                            "id": 12023,
                            "name": "Identifier",
                            "src": "3375:16:39"
                          }
                        ],
                        "id": 12024,
                        "name": "Assignment",
                        "src": "3365:26:39"
                      }
                    ],
                    "id": 12025,
                    "name": "ExpressionStatement",
                    "src": "3365:26:39"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 12013,
                                  "type": "address[] memory",
                                  "value": "path"
                                },
                                "id": 12026,
                                "name": "Identifier",
                                "src": "3397:4:39"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 12027,
                                "name": "Literal",
                                "src": "3402:1:39"
                              }
                            ],
                            "id": 12028,
                            "name": "IndexAccess",
                            "src": "3397:7:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$955",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)",
                                  "value": "address"
                                },
                                "id": 12029,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3407:7:39"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 11999,
                                  "type": "contract IERC20",
                                  "value": "celoToken"
                                },
                                "id": 12030,
                                "name": "Identifier",
                                "src": "3415:9:39"
                              }
                            ],
                            "id": 12031,
                            "name": "FunctionCall",
                            "src": "3407:18:39"
                          }
                        ],
                        "id": 12032,
                        "name": "Assignment",
                        "src": "3397:28:39"
                      }
                    ],
                    "id": 12033,
                    "name": "ExpressionStatement",
                    "src": "3397:28:39"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            12035
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "name": "i",
                              "scope": 12093,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 12034,
                                "name": "ElementaryTypeName",
                                "src": "3437:7:39"
                              }
                            ],
                            "id": 12035,
                            "name": "VariableDeclaration",
                            "src": "3437:9:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 12036,
                            "name": "Literal",
                            "src": "3449:1:39"
                          }
                        ],
                        "id": 12037,
                        "name": "VariableDeclarationStatement",
                        "src": "3437:13:39"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 12035,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 12038,
                            "name": "Identifier",
                            "src": "3452:1:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "values",
                                  "referencedDeclaration": 1259,
                                  "type": "address[] storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct EnumerableSet.AddressSet storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 11890,
                                          "type": "mapping(address => struct EnumerableSet.AddressSet storage ref)",
                                          "value": "routerAddresses"
                                        },
                                        "id": 12039,
                                        "name": "Identifier",
                                        "src": "3456:15:39"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 11966,
                                          "type": "address",
                                          "value": "sellTokenAddress"
                                        },
                                        "id": 12040,
                                        "name": "Identifier",
                                        "src": "3472:16:39"
                                      }
                                    ],
                                    "id": 12041,
                                    "name": "IndexAccess",
                                    "src": "3456:33:39"
                                  }
                                ],
                                "id": 12042,
                                "name": "MemberAccess",
                                "src": "3456:40:39"
                              }
                            ],
                            "id": 12043,
                            "name": "MemberAccess",
                            "src": "3456:47:39"
                          }
                        ],
                        "id": 12044,
                        "name": "BinaryOperation",
                        "src": "3452:51:39"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 12035,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 12045,
                                "name": "Identifier",
                                "src": "3505:1:39"
                              }
                            ],
                            "id": 12046,
                            "name": "UnaryOperation",
                            "src": "3505:3:39"
                          }
                        ],
                        "id": 12047,
                        "name": "ExpressionStatement",
                        "src": "3505:3:39"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "assignments": [
                                12049
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "poolAddress",
                                  "scope": 12092,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "address",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address",
                                      "stateMutability": "nonpayable",
                                      "type": "address"
                                    },
                                    "id": 12048,
                                    "name": "ElementaryTypeName",
                                    "src": "3518:7:39"
                                  }
                                ],
                                "id": 12049,
                                "name": "VariableDeclaration",
                                "src": "3518:19:39"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "get",
                                      "referencedDeclaration": 1464,
                                      "type": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct EnumerableSet.AddressSet storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 11890,
                                              "type": "mapping(address => struct EnumerableSet.AddressSet storage ref)",
                                              "value": "routerAddresses"
                                            },
                                            "id": 12050,
                                            "name": "Identifier",
                                            "src": "3540:15:39"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 11966,
                                              "type": "address",
                                              "value": "sellTokenAddress"
                                            },
                                            "id": 12051,
                                            "name": "Identifier",
                                            "src": "3556:16:39"
                                          }
                                        ],
                                        "id": 12052,
                                        "name": "IndexAccess",
                                        "src": "3540:33:39"
                                      }
                                    ],
                                    "id": 12053,
                                    "name": "MemberAccess",
                                    "src": "3540:37:39"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 12035,
                                      "type": "uint256",
                                      "value": "i"
                                    },
                                    "id": 12054,
                                    "name": "Identifier",
                                    "src": "3578:1:39"
                                  }
                                ],
                                "id": 12055,
                                "name": "FunctionCall",
                                "src": "3540:40:39"
                              }
                            ],
                            "id": 12056,
                            "name": "VariableDeclarationStatement",
                            "src": "3518:62:39"
                          },
                          {
                            "attributes": {
                              "assignments": [
                                12058
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "router",
                                  "scope": 12092,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "contract IUniswapV2RouterMin",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "contractScope": null,
                                      "name": "IUniswapV2RouterMin",
                                      "referencedDeclaration": 54968,
                                      "type": "contract IUniswapV2RouterMin"
                                    },
                                    "id": 12057,
                                    "name": "UserDefinedTypeName",
                                    "src": "3588:19:39"
                                  }
                                ],
                                "id": 12058,
                                "name": "VariableDeclaration",
                                "src": "3588:26:39"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "contract IUniswapV2RouterMin",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 54968,
                                      "type": "type(contract IUniswapV2RouterMin)",
                                      "value": "IUniswapV2RouterMin"
                                    },
                                    "id": 12059,
                                    "name": "Identifier",
                                    "src": "3617:19:39"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 12049,
                                      "type": "address",
                                      "value": "poolAddress"
                                    },
                                    "id": 12060,
                                    "name": "Identifier",
                                    "src": "3637:11:39"
                                  }
                                ],
                                "id": 12061,
                                "name": "FunctionCall",
                                "src": "3617:32:39"
                              }
                            ],
                            "id": 12062,
                            "name": "VariableDeclarationStatement",
                            "src": "3588:61:39"
                          },
                          {
                            "attributes": {
                              "assignments": [
                                12064
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "wouldGet",
                                  "scope": 12092,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "uint256",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 12063,
                                    "name": "ElementaryTypeName",
                                    "src": "3871:7:39"
                                  }
                                ],
                                "id": 12064,
                                "name": "VariableDeclaration",
                                "src": "3871:16:39"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "uint256[] memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "getAmountsOut",
                                          "referencedDeclaration": 54962,
                                          "type": "function (uint256,address[] memory) view external returns (uint256[] memory)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 12058,
                                              "type": "contract IUniswapV2RouterMin",
                                              "value": "router"
                                            },
                                            "id": 12065,
                                            "name": "Identifier",
                                            "src": "3890:6:39"
                                          }
                                        ],
                                        "id": 12066,
                                        "name": "MemberAccess",
                                        "src": "3890:20:39"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 11970,
                                          "type": "uint256",
                                          "value": "amount"
                                        },
                                        "id": 12067,
                                        "name": "Identifier",
                                        "src": "3911:6:39"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 12013,
                                          "type": "address[] memory",
                                          "value": "path"
                                        },
                                        "id": 12068,
                                        "name": "Identifier",
                                        "src": "3919:4:39"
                                      }
                                    ],
                                    "id": 12069,
                                    "name": "FunctionCall",
                                    "src": "3890:34:39"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "31",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 1",
                                      "value": "1"
                                    },
                                    "id": 12070,
                                    "name": "Literal",
                                    "src": "3925:1:39"
                                  }
                                ],
                                "id": 12071,
                                "name": "IndexAccess",
                                "src": "3890:37:39"
                              }
                            ],
                            "id": 12072,
                            "name": "VariableDeclarationStatement",
                            "src": "3871:56:39"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 11898,
                                      "type": "function (address,address,uint256)",
                                      "value": "ReceivedQuote"
                                    },
                                    "id": 12073,
                                    "name": "Identifier",
                                    "src": "3941:13:39"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 11966,
                                      "type": "address",
                                      "value": "sellTokenAddress"
                                    },
                                    "id": 12074,
                                    "name": "Identifier",
                                    "src": "3955:16:39"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 12049,
                                      "type": "address",
                                      "value": "poolAddress"
                                    },
                                    "id": 12075,
                                    "name": "Identifier",
                                    "src": "3973:11:39"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 12064,
                                      "type": "uint256",
                                      "value": "wouldGet"
                                    },
                                    "id": 12076,
                                    "name": "Identifier",
                                    "src": "3986:8:39"
                                  }
                                ],
                                "id": 12077,
                                "name": "FunctionCall",
                                "src": "3941:54:39"
                              }
                            ],
                            "id": 12078,
                            "name": "EmitStatement",
                            "src": "3936:59:39"
                          },
                          {
                            "attributes": {
                              "falseBody": null
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": ">",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 12064,
                                      "type": "uint256",
                                      "value": "wouldGet"
                                    },
                                    "id": 12079,
                                    "name": "Identifier",
                                    "src": "4007:8:39"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 12007,
                                      "type": "uint256",
                                      "value": "bestRouterQuote"
                                    },
                                    "id": 12080,
                                    "name": "Identifier",
                                    "src": "4018:15:39"
                                  }
                                ],
                                "id": 12081,
                                "name": "BinaryOperation",
                                "src": "4007:26:39"
                              },
                              {
                                "children": [
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 12007,
                                              "type": "uint256",
                                              "value": "bestRouterQuote"
                                            },
                                            "id": 12082,
                                            "name": "Identifier",
                                            "src": "4045:15:39"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 12064,
                                              "type": "uint256",
                                              "value": "wouldGet"
                                            },
                                            "id": 12083,
                                            "name": "Identifier",
                                            "src": "4063:8:39"
                                          }
                                        ],
                                        "id": 12084,
                                        "name": "Assignment",
                                        "src": "4045:26:39"
                                      }
                                    ],
                                    "id": 12085,
                                    "name": "ExpressionStatement",
                                    "src": "4045:26:39"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "contract IUniswapV2RouterMin"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 12004,
                                              "type": "contract IUniswapV2RouterMin",
                                              "value": "bestRouter"
                                            },
                                            "id": 12086,
                                            "name": "Identifier",
                                            "src": "4081:10:39"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 12058,
                                              "type": "contract IUniswapV2RouterMin",
                                              "value": "router"
                                            },
                                            "id": 12087,
                                            "name": "Identifier",
                                            "src": "4094:6:39"
                                          }
                                        ],
                                        "id": 12088,
                                        "name": "Assignment",
                                        "src": "4081:19:39"
                                      }
                                    ],
                                    "id": 12089,
                                    "name": "ExpressionStatement",
                                    "src": "4081:19:39"
                                  }
                                ],
                                "id": 12090,
                                "name": "Block",
                                "src": "4035:74:39"
                              }
                            ],
                            "id": 12091,
                            "name": "IfStatement",
                            "src": "4003:106:39"
                          }
                        ],
                        "id": 12092,
                        "name": "Block",
                        "src": "3510:605:39"
                      }
                    ],
                    "id": 12093,
                    "name": "ForStatement",
                    "src": "3432:683:39"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_8e922fdd17f0dca5c801efce65fb6d53726ba6a56278781a761dc52d89a28b6b",
                                  "typeString": "literal_string \"Can't exchange with zero quote\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59926,
                                59927
                              ],
                              "referencedDeclaration": 59927,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 12094,
                            "name": "Identifier",
                            "src": "4121:7:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 12007,
                                  "type": "uint256",
                                  "value": "bestRouterQuote"
                                },
                                "id": 12095,
                                "name": "Identifier",
                                "src": "4129:15:39"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 12096,
                                "name": "Literal",
                                "src": "4148:1:39"
                              }
                            ],
                            "id": 12097,
                            "name": "BinaryOperation",
                            "src": "4129:20:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "43616e27742065786368616e67652077697468207a65726f2071756f7465",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Can't exchange with zero quote\"",
                              "value": "Can't exchange with zero quote"
                            },
                            "id": 12098,
                            "name": "Literal",
                            "src": "4151:32:39"
                          }
                        ],
                        "id": 12099,
                        "name": "FunctionCall",
                        "src": "4121:63:39"
                      }
                    ],
                    "id": 12100,
                    "name": "ExpressionStatement",
                    "src": "4121:63:39"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        12102
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "minAmount",
                          "scope": 12170,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 12101,
                            "name": "ElementaryTypeName",
                            "src": "4191:7:39"
                          }
                        ],
                        "id": 12102,
                        "name": "VariableDeclaration",
                        "src": "4191:17:39"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "30",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "number",
                          "type": "int_const 0",
                          "value": "0"
                        },
                        "id": 12103,
                        "name": "Literal",
                        "src": "4211:1:39"
                      }
                    ],
                    "id": 12104,
                    "name": "VariableDeclarationStatement",
                    "src": "4191:21:39"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 12102,
                              "type": "uint256",
                              "value": "minAmount"
                            },
                            "id": 12105,
                            "name": "Identifier",
                            "src": "4218:9:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54968",
                                      "typeString": "contract IUniswapV2RouterMin"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 12360,
                                  "type": "function (address,uint256,uint256,contract IUniswapV2RouterMin) view returns (uint256)",
                                  "value": "calculateAllMinAmount"
                                },
                                "id": 12106,
                                "name": "Identifier",
                                "src": "4230:21:39"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 11966,
                                  "type": "address",
                                  "value": "sellTokenAddress"
                                },
                                "id": 12107,
                                "name": "Identifier",
                                "src": "4252:16:39"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 11972,
                                  "type": "uint256",
                                  "value": "maxSlippage"
                                },
                                "id": 12108,
                                "name": "Identifier",
                                "src": "4270:11:39"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 11970,
                                  "type": "uint256",
                                  "value": "amount"
                                },
                                "id": 12109,
                                "name": "Identifier",
                                "src": "4283:6:39"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 12004,
                                  "type": "contract IUniswapV2RouterMin",
                                  "value": "bestRouter"
                                },
                                "id": 12110,
                                "name": "Identifier",
                                "src": "4291:10:39"
                              }
                            ],
                            "id": 12111,
                            "name": "FunctionCall",
                            "src": "4230:72:39"
                          }
                        ],
                        "id": 12112,
                        "name": "Assignment",
                        "src": "4218:84:39"
                      }
                    ],
                    "id": 12113,
                    "name": "ExpressionStatement",
                    "src": "4218:84:39"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "approve",
                              "referencedDeclaration": 927,
                              "type": "function (address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "contract IERC20",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 955,
                                      "type": "type(contract IERC20)",
                                      "value": "IERC20"
                                    },
                                    "id": 12114,
                                    "name": "Identifier",
                                    "src": "4309:6:39"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 11966,
                                      "type": "address",
                                      "value": "sellTokenAddress"
                                    },
                                    "id": 12115,
                                    "name": "Identifier",
                                    "src": "4316:16:39"
                                  }
                                ],
                                "id": 12116,
                                "name": "FunctionCall",
                                "src": "4309:24:39"
                              }
                            ],
                            "id": 12117,
                            "name": "MemberAccess",
                            "src": "4309:32:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54968",
                                      "typeString": "contract IUniswapV2RouterMin"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)",
                                  "value": "address"
                                },
                                "id": 12118,
                                "name": "ElementaryTypeNameExpression",
                                "src": "4342:7:39"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 12004,
                                  "type": "contract IUniswapV2RouterMin",
                                  "value": "bestRouter"
                                },
                                "id": 12119,
                                "name": "Identifier",
                                "src": "4350:10:39"
                              }
                            ],
                            "id": 12120,
                            "name": "FunctionCall",
                            "src": "4342:19:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 11970,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 12121,
                            "name": "Identifier",
                            "src": "4363:6:39"
                          }
                        ],
                        "id": 12122,
                        "name": "FunctionCall",
                        "src": "4309:61:39"
                      }
                    ],
                    "id": 12123,
                    "name": "ExpressionStatement",
                    "src": "4309:61:39"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256[] memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "swapExactTokensForTokens",
                              "referencedDeclaration": 54951,
                              "type": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 12004,
                                  "type": "contract IUniswapV2RouterMin",
                                  "value": "bestRouter"
                                },
                                "id": 12124,
                                "name": "Identifier",
                                "src": "4376:10:39"
                              }
                            ],
                            "id": 12126,
                            "name": "MemberAccess",
                            "src": "4376:35:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 11970,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 12127,
                            "name": "Identifier",
                            "src": "4419:6:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 12102,
                              "type": "uint256",
                              "value": "minAmount"
                            },
                            "id": 12128,
                            "name": "Identifier",
                            "src": "4433:9:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 12013,
                              "type": "address[] memory",
                              "value": "path"
                            },
                            "id": 12129,
                            "name": "Identifier",
                            "src": "4450:4:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_UniswapFeeHandlerSeller_$12361",
                                      "typeString": "contract UniswapFeeHandlerSeller"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)",
                                  "value": "address"
                                },
                                "id": 12130,
                                "name": "ElementaryTypeNameExpression",
                                "src": "4462:7:39"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 60085,
                                  "type": "contract UniswapFeeHandlerSeller",
                                  "value": "this"
                                },
                                "id": 12131,
                                "name": "Identifier",
                                "src": "4470:4:39"
                              }
                            ],
                            "id": 12132,
                            "name": "FunctionCall",
                            "src": "4462:13:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "+",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "timestamp",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 59913,
                                      "type": "block",
                                      "value": "block"
                                    },
                                    "id": 12133,
                                    "name": "Identifier",
                                    "src": "4483:5:39"
                                  }
                                ],
                                "id": 12134,
                                "name": "MemberAccess",
                                "src": "4483:15:39"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 11883,
                                  "type": "uint256",
                                  "value": "MAX_TIMESTAMP_BLOCK_EXCHANGE"
                                },
                                "id": 12135,
                                "name": "Identifier",
                                "src": "4501:28:39"
                              }
                            ],
                            "id": 12136,
                            "name": "BinaryOperation",
                            "src": "4483:46:39"
                          }
                        ],
                        "id": 12137,
                        "name": "FunctionCall",
                        "src": "4376:159:39"
                      }
                    ],
                    "id": 12138,
                    "name": "ExpressionStatement",
                    "src": "4376:159:39"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        12140
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "celoAmount",
                          "scope": 12170,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 12139,
                            "name": "ElementaryTypeName",
                            "src": "4542:7:39"
                          }
                        ],
                        "id": 12140,
                        "name": "VariableDeclaration",
                        "src": "4542:18:39"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "balanceOf",
                              "referencedDeclaration": 900,
                              "type": "function (address) view external returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 11999,
                                  "type": "contract IERC20",
                                  "value": "celoToken"
                                },
                                "id": 12141,
                                "name": "Identifier",
                                "src": "4563:9:39"
                              }
                            ],
                            "id": 12142,
                            "name": "MemberAccess",
                            "src": "4563:19:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_UniswapFeeHandlerSeller_$12361",
                                      "typeString": "contract UniswapFeeHandlerSeller"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)",
                                  "value": "address"
                                },
                                "id": 12143,
                                "name": "ElementaryTypeNameExpression",
                                "src": "4583:7:39"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 60085,
                                  "type": "contract UniswapFeeHandlerSeller",
                                  "value": "this"
                                },
                                "id": 12144,
                                "name": "Identifier",
                                "src": "4591:4:39"
                              }
                            ],
                            "id": 12145,
                            "name": "FunctionCall",
                            "src": "4583:13:39"
                          }
                        ],
                        "id": 12146,
                        "name": "FunctionCall",
                        "src": "4563:34:39"
                      }
                    ],
                    "id": 12147,
                    "name": "VariableDeclarationStatement",
                    "src": "4542:55:39"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transfer",
                              "referencedDeclaration": 909,
                              "type": "function (address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 11999,
                                  "type": "contract IERC20",
                                  "value": "celoToken"
                                },
                                "id": 12148,
                                "name": "Identifier",
                                "src": "4603:9:39"
                              }
                            ],
                            "id": 12150,
                            "name": "MemberAccess",
                            "src": "4603:18:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 59923,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 12151,
                                "name": "Identifier",
                                "src": "4622:3:39"
                              }
                            ],
                            "id": 12152,
                            "name": "MemberAccess",
                            "src": "4622:10:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 12140,
                              "type": "uint256",
                              "value": "celoAmount"
                            },
                            "id": 12153,
                            "name": "Identifier",
                            "src": "4634:10:39"
                          }
                        ],
                        "id": 12154,
                        "name": "FunctionCall",
                        "src": "4603:42:39"
                      }
                    ],
                    "id": 12155,
                    "name": "ExpressionStatement",
                    "src": "4603:42:39"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 11902,
                              "type": "function (address)",
                              "value": "RouterUsed"
                            },
                            "id": 12156,
                            "name": "Identifier",
                            "src": "4656:10:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IUniswapV2RouterMin_$54968",
                                      "typeString": "contract IUniswapV2RouterMin"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)",
                                  "value": "address"
                                },
                                "id": 12157,
                                "name": "ElementaryTypeNameExpression",
                                "src": "4667:7:39"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 12004,
                                  "type": "contract IUniswapV2RouterMin",
                                  "value": "bestRouter"
                                },
                                "id": 12158,
                                "name": "Identifier",
                                "src": "4675:10:39"
                              }
                            ],
                            "id": 12159,
                            "name": "FunctionCall",
                            "src": "4667:19:39"
                          }
                        ],
                        "id": 12160,
                        "name": "FunctionCall",
                        "src": "4656:31:39"
                      }
                    ],
                    "id": 12161,
                    "name": "EmitStatement",
                    "src": "4651:36:39"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7919,
                              "type": "function (address,address,uint256)",
                              "value": "TokenSold"
                            },
                            "id": 12162,
                            "name": "Identifier",
                            "src": "4698:9:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 11966,
                              "type": "address",
                              "value": "sellTokenAddress"
                            },
                            "id": 12163,
                            "name": "Identifier",
                            "src": "4708:16:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 11968,
                              "type": "address",
                              "value": "buyTokenAddress"
                            },
                            "id": 12164,
                            "name": "Identifier",
                            "src": "4726:15:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 11970,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 12165,
                            "name": "Identifier",
                            "src": "4743:6:39"
                          }
                        ],
                        "id": 12166,
                        "name": "FunctionCall",
                        "src": "4698:52:39"
                      }
                    ],
                    "id": 12167,
                    "name": "EmitStatement",
                    "src": "4693:57:39"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 11976
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 12140,
                          "type": "uint256",
                          "value": "celoAmount"
                        },
                        "id": 12168,
                        "name": "Identifier",
                        "src": "4763:10:39"
                      }
                    ],
                    "id": 12169,
                    "name": "Return",
                    "src": "4756:17:39"
                  }
                ],
                "id": 12170,
                "name": "Block",
                "src": "2729:2049:39"
              }
            ],
            "id": 12171,
            "name": "FunctionDefinition",
            "src": "2564:2214:39"
          },
          {
            "attributes": {
              "documentation": "@notice Get the list of routers for a token.\n@param token The address of the token to query.\n@return An array of all the allowed router.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getRoutersForToken",
              "scope": 12361,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "token",
                      "scope": 12185,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 12172,
                        "name": "ElementaryTypeName",
                        "src": "4974:7:39"
                      }
                    ],
                    "id": 12173,
                    "name": "VariableDeclaration",
                    "src": "4974:13:39"
                  }
                ],
                "id": 12174,
                "name": "ParameterList",
                "src": "4973:15:39"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 12185,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "address[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "address[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 12175,
                            "name": "ElementaryTypeName",
                            "src": "5012:7:39"
                          }
                        ],
                        "id": 12176,
                        "name": "ArrayTypeName",
                        "src": "5012:9:39"
                      }
                    ],
                    "id": 12177,
                    "name": "VariableDeclaration",
                    "src": "5012:16:39"
                  }
                ],
                "id": 12178,
                "name": "ParameterList",
                "src": "5011:18:39"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 12178
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "values",
                          "referencedDeclaration": 1259,
                          "type": "address[] storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "struct EnumerableSet.AddressSet storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 11890,
                                  "type": "mapping(address => struct EnumerableSet.AddressSet storage ref)",
                                  "value": "routerAddresses"
                                },
                                "id": 12179,
                                "name": "Identifier",
                                "src": "5043:15:39"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 12173,
                                  "type": "address",
                                  "value": "token"
                                },
                                "id": 12180,
                                "name": "Identifier",
                                "src": "5059:5:39"
                              }
                            ],
                            "id": 12181,
                            "name": "IndexAccess",
                            "src": "5043:22:39"
                          }
                        ],
                        "id": 12182,
                        "name": "MemberAccess",
                        "src": "5043:29:39"
                      }
                    ],
                    "id": 12183,
                    "name": "Return",
                    "src": "5036:36:39"
                  }
                ],
                "id": 12184,
                "name": "Block",
                "src": "5030:47:39"
              }
            ],
            "id": 12185,
            "name": "FunctionDefinition",
            "src": "4946:131:39"
          },
          {
            "attributes": {
              "documentation": "@notice Returns the storage, major, minor, and patch version of the contract.\n@return Storage version of the contract.\n@return Major version of the contract.\n@return Minor version of the contract.\n@return Patch version of the contract.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getVersionNumber",
              "scope": 12361,
              "stateMutability": "pure",
              "superFunction": 14593,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 12186,
                "name": "ParameterList",
                "src": "5379:2:39"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 12203,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 12187,
                        "name": "ElementaryTypeName",
                        "src": "5405:7:39"
                      }
                    ],
                    "id": 12188,
                    "name": "VariableDeclaration",
                    "src": "5405:7:39"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 12203,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 12189,
                        "name": "ElementaryTypeName",
                        "src": "5414:7:39"
                      }
                    ],
                    "id": 12190,
                    "name": "VariableDeclaration",
                    "src": "5414:7:39"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 12203,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 12191,
                        "name": "ElementaryTypeName",
                        "src": "5423:7:39"
                      }
                    ],
                    "id": 12192,
                    "name": "VariableDeclaration",
                    "src": "5423:7:39"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 12203,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 12193,
                        "name": "ElementaryTypeName",
                        "src": "5432:7:39"
                      }
                    ],
                    "id": 12194,
                    "name": "VariableDeclaration",
                    "src": "5432:7:39"
                  }
                ],
                "id": 12195,
                "name": "ParameterList",
                "src": "5404:36:39"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 12195
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "type": "tuple(int_const 2,int_const 0,int_const 0,int_const 0)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 12196,
                            "name": "Literal",
                            "src": "5455:1:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 12197,
                            "name": "Literal",
                            "src": "5458:1:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 12198,
                            "name": "Literal",
                            "src": "5461:1:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 12199,
                            "name": "Literal",
                            "src": "5464:1:39"
                          }
                        ],
                        "id": 12200,
                        "name": "TupleExpression",
                        "src": "5454:12:39"
                      }
                    ],
                    "id": 12201,
                    "name": "Return",
                    "src": "5447:19:39"
                  }
                ],
                "id": 12202,
                "name": "Block",
                "src": "5441:30:39"
              }
            ],
            "id": 12203,
            "name": "FunctionDefinition",
            "src": "5354:117:39"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_setRouter",
              "scope": 12361,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "private"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "token",
                      "scope": 12243,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 12204,
                        "name": "ElementaryTypeName",
                        "src": "5495:7:39"
                      }
                    ],
                    "id": 12205,
                    "name": "VariableDeclaration",
                    "src": "5495:13:39"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "router",
                      "scope": 12243,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 12206,
                        "name": "ElementaryTypeName",
                        "src": "5510:7:39"
                      }
                    ],
                    "id": 12207,
                    "name": "VariableDeclaration",
                    "src": "5510:14:39"
                  }
                ],
                "id": 12208,
                "name": "ParameterList",
                "src": "5494:31:39"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 12209,
                "name": "ParameterList",
                "src": "5534:0:39"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_7e073122cf0233ae9f99ba80dc2df44411bc03b8e06ae4546f19ee9c47e5c76d",
                                  "typeString": "literal_string \"Router can't be address zero\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59926,
                                59927
                              ],
                              "referencedDeclaration": 59927,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 12210,
                            "name": "Identifier",
                            "src": "5540:7:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 12207,
                                  "type": "address",
                                  "value": "router"
                                },
                                "id": 12211,
                                "name": "Identifier",
                                "src": "5548:6:39"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)",
                                      "value": "address"
                                    },
                                    "id": 12212,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "5558:7:39"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 12213,
                                    "name": "Literal",
                                    "src": "5566:1:39"
                                  }
                                ],
                                "id": 12214,
                                "name": "FunctionCall",
                                "src": "5558:10:39"
                              }
                            ],
                            "id": 12215,
                            "name": "BinaryOperation",
                            "src": "5548:20:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "526f757465722063616e27742062652061646472657373207a65726f",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Router can't be address zero\"",
                              "value": "Router can't be address zero"
                            },
                            "id": 12216,
                            "name": "Literal",
                            "src": "5570:30:39"
                          }
                        ],
                        "id": 12217,
                        "name": "FunctionCall",
                        "src": "5540:61:39"
                      }
                    ],
                    "id": 12218,
                    "name": "ExpressionStatement",
                    "src": "5540:61:39"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "add",
                              "referencedDeclaration": 1294,
                              "type": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct EnumerableSet.AddressSet storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 11890,
                                      "type": "mapping(address => struct EnumerableSet.AddressSet storage ref)",
                                      "value": "routerAddresses"
                                    },
                                    "id": 12219,
                                    "name": "Identifier",
                                    "src": "5607:15:39"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 12205,
                                      "type": "address",
                                      "value": "token"
                                    },
                                    "id": 12220,
                                    "name": "Identifier",
                                    "src": "5623:5:39"
                                  }
                                ],
                                "id": 12221,
                                "name": "IndexAccess",
                                "src": "5607:22:39"
                              }
                            ],
                            "id": 12222,
                            "name": "MemberAccess",
                            "src": "5607:26:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 12207,
                              "type": "address",
                              "value": "router"
                            },
                            "id": 12223,
                            "name": "Identifier",
                            "src": "5634:6:39"
                          }
                        ],
                        "id": 12224,
                        "name": "FunctionCall",
                        "src": "5607:34:39"
                      }
                    ],
                    "id": 12225,
                    "name": "ExpressionStatement",
                    "src": "5607:34:39"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_1b57133d444395eb498ab77bc7d3dc0bf20553812af7305101bcd7fa5a8e8575",
                                  "typeString": "literal_string \"Max number of routers reached\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59926,
                                59927
                              ],
                              "referencedDeclaration": 59927,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 12226,
                            "name": "Identifier",
                            "src": "5647:7:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "length",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "values",
                                      "referencedDeclaration": 1259,
                                      "type": "address[] storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct EnumerableSet.AddressSet storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 11890,
                                              "type": "mapping(address => struct EnumerableSet.AddressSet storage ref)",
                                              "value": "routerAddresses"
                                            },
                                            "id": 12227,
                                            "name": "Identifier",
                                            "src": "5662:15:39"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 12205,
                                              "type": "address",
                                              "value": "token"
                                            },
                                            "id": 12228,
                                            "name": "Identifier",
                                            "src": "5678:5:39"
                                          }
                                        ],
                                        "id": 12229,
                                        "name": "IndexAccess",
                                        "src": "5662:22:39"
                                      }
                                    ],
                                    "id": 12230,
                                    "name": "MemberAccess",
                                    "src": "5662:29:39"
                                  }
                                ],
                                "id": 12231,
                                "name": "MemberAccess",
                                "src": "5662:36:39"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 11886,
                                  "type": "uint256",
                                  "value": "MAX_NUMBER_ROUTERS_PER_TOKEN"
                                },
                                "id": 12232,
                                "name": "Identifier",
                                "src": "5702:28:39"
                              }
                            ],
                            "id": 12233,
                            "name": "BinaryOperation",
                            "src": "5662:68:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4d6178206e756d626572206f6620726f75746572732072656163686564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Max number of routers reached\"",
                              "value": "Max number of routers reached"
                            },
                            "id": 12234,
                            "name": "Literal",
                            "src": "5738:31:39"
                          }
                        ],
                        "id": 12235,
                        "name": "FunctionCall",
                        "src": "5647:128:39"
                      }
                    ],
                    "id": 12236,
                    "name": "ExpressionStatement",
                    "src": "5647:128:39"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 11908,
                              "type": "function (address,address)",
                              "value": "RouterAddressSet"
                            },
                            "id": 12237,
                            "name": "Identifier",
                            "src": "5786:16:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 12205,
                              "type": "address",
                              "value": "token"
                            },
                            "id": 12238,
                            "name": "Identifier",
                            "src": "5803:5:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 12207,
                              "type": "address",
                              "value": "router"
                            },
                            "id": 12239,
                            "name": "Identifier",
                            "src": "5810:6:39"
                          }
                        ],
                        "id": 12240,
                        "name": "FunctionCall",
                        "src": "5786:31:39"
                      }
                    ],
                    "id": 12241,
                    "name": "EmitStatement",
                    "src": "5781:36:39"
                  }
                ],
                "id": 12242,
                "name": "Block",
                "src": "5534:288:39"
              }
            ],
            "id": 12243,
            "name": "FunctionDefinition",
            "src": "5475:347:39"
          },
          {
            "attributes": {
              "documentation": "@dev Calculates the minimum amount of tokens that can be received for a given amount of sell tokens, \ntaking into account the slippage and the rates of the sell token and CELO token on the Uniswap V2 pair.\n@param sellTokenAddress The address of the sell token.\n@param maxSlippage The maximum slippage allowed.\n@param amount The amount of sell tokens to be traded.\n@param bestRouter The Uniswap V2 router with the best price.\n@return The minimum amount of tokens that can be received.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "calculateAllMinAmount",
              "scope": 12361,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "private"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "sellTokenAddress",
                      "scope": 12360,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 12244,
                        "name": "ElementaryTypeName",
                        "src": "6391:7:39"
                      }
                    ],
                    "id": 12245,
                    "name": "VariableDeclaration",
                    "src": "6391:24:39"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "maxSlippage",
                      "scope": 12360,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 12246,
                        "name": "ElementaryTypeName",
                        "src": "6421:7:39"
                      }
                    ],
                    "id": 12247,
                    "name": "VariableDeclaration",
                    "src": "6421:19:39"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "amount",
                      "scope": 12360,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 12248,
                        "name": "ElementaryTypeName",
                        "src": "6446:7:39"
                      }
                    ],
                    "id": 12249,
                    "name": "VariableDeclaration",
                    "src": "6446:14:39"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "bestRouter",
                      "scope": 12360,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract IUniswapV2RouterMin",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "IUniswapV2RouterMin",
                          "referencedDeclaration": 54968,
                          "type": "contract IUniswapV2RouterMin"
                        },
                        "id": 12250,
                        "name": "UserDefinedTypeName",
                        "src": "6466:19:39"
                      }
                    ],
                    "id": 12251,
                    "name": "VariableDeclaration",
                    "src": "6466:30:39"
                  }
                ],
                "id": 12252,
                "name": "ParameterList",
                "src": "6385:115:39"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 12360,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 12253,
                        "name": "ElementaryTypeName",
                        "src": "6523:7:39"
                      }
                    ],
                    "id": 12254,
                    "name": "VariableDeclaration",
                    "src": "6523:7:39"
                  }
                ],
                "id": 12255,
                "name": "ParameterList",
                "src": "6522:9:39"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        12257
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "_oracleAddress",
                          "scope": 12359,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 12256,
                            "name": "ElementaryTypeName",
                            "src": "6538:7:39"
                          }
                        ],
                        "id": 12257,
                        "name": "VariableDeclaration",
                        "src": "6538:22:39"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "address",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 8139,
                              "type": "function (address) view returns (address)",
                              "value": "getOracleAddress"
                            },
                            "id": 12258,
                            "name": "Identifier",
                            "src": "6563:16:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 12245,
                              "type": "address",
                              "value": "sellTokenAddress"
                            },
                            "id": 12259,
                            "name": "Identifier",
                            "src": "6580:16:39"
                          }
                        ],
                        "id": 12260,
                        "name": "FunctionCall",
                        "src": "6563:34:39"
                      }
                    ],
                    "id": 12261,
                    "name": "VariableDeclarationStatement",
                    "src": "6538:59:39"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        12263
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "minReports",
                          "scope": 12359,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 12262,
                            "name": "ElementaryTypeName",
                            "src": "6604:7:39"
                          }
                        ],
                        "id": 12263,
                        "name": "VariableDeclaration",
                        "src": "6604:18:39"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7901,
                              "type": "mapping(address => uint256)",
                              "value": "minimumReports"
                            },
                            "id": 12264,
                            "name": "Identifier",
                            "src": "6625:14:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 12245,
                              "type": "address",
                              "value": "sellTokenAddress"
                            },
                            "id": 12265,
                            "name": "Identifier",
                            "src": "6640:16:39"
                          }
                        ],
                        "id": 12266,
                        "name": "IndexAccess",
                        "src": "6625:32:39"
                      }
                    ],
                    "id": 12267,
                    "name": "VariableDeclarationStatement",
                    "src": "6604:53:39"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        12269
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "oracle",
                          "scope": 12359,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract IOracle",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "IOracle",
                              "referencedDeclaration": 1642,
                              "type": "contract IOracle"
                            },
                            "id": 12268,
                            "name": "UserDefinedTypeName",
                            "src": "6664:7:39"
                          }
                        ],
                        "id": 12269,
                        "name": "VariableDeclaration",
                        "src": "6664:14:39"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "contract IOracle",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1642,
                              "type": "type(contract IOracle)",
                              "value": "IOracle"
                            },
                            "id": 12270,
                            "name": "Identifier",
                            "src": "6681:7:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 12257,
                              "type": "address",
                              "value": "_oracleAddress"
                            },
                            "id": 12271,
                            "name": "Identifier",
                            "src": "6689:14:39"
                          }
                        ],
                        "id": 12272,
                        "name": "FunctionCall",
                        "src": "6681:23:39"
                      }
                    ],
                    "id": 12273,
                    "name": "VariableDeclarationStatement",
                    "src": "6664:40:39"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        12275
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "minimalSortedOracles",
                          "scope": 12359,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 12274,
                            "name": "ElementaryTypeName",
                            "src": "6711:7:39"
                          }
                        ],
                        "id": 12275,
                        "name": "VariableDeclaration",
                        "src": "6711:28:39"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "30",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "number",
                          "type": "int_const 0",
                          "value": "0"
                        },
                        "id": 12276,
                        "name": "Literal",
                        "src": "6742:1:39"
                      }
                    ],
                    "id": 12277,
                    "name": "VariableDeclarationStatement",
                    "src": "6711:32:39"
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": ">",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 12263,
                              "type": "uint256",
                              "value": "minReports"
                            },
                            "id": 12278,
                            "name": "Identifier",
                            "src": "6833:10:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 12279,
                            "name": "Literal",
                            "src": "6846:1:39"
                          }
                        ],
                        "id": 12280,
                        "name": "BinaryOperation",
                        "src": "6833:14:39"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "assignments": [
                                12282
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "sortedOracles",
                                  "scope": 12315,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "contract ISortedOracles",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "contractScope": null,
                                      "name": "ISortedOracles",
                                      "referencedDeclaration": 53525,
                                      "type": "contract ISortedOracles"
                                    },
                                    "id": 12281,
                                    "name": "UserDefinedTypeName",
                                    "src": "6857:14:39"
                                  }
                                ],
                                "id": 12282,
                                "name": "VariableDeclaration",
                                "src": "6857:28:39"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "contract ISortedOracles",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 53525,
                                      "type": "type(contract ISortedOracles)",
                                      "value": "ISortedOracles"
                                    },
                                    "id": 12283,
                                    "name": "Identifier",
                                    "src": "6888:14:39"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 12257,
                                      "type": "address",
                                      "value": "_oracleAddress"
                                    },
                                    "id": 12284,
                                    "name": "Identifier",
                                    "src": "6903:14:39"
                                  }
                                ],
                                "id": 12285,
                                "name": "FunctionCall",
                                "src": "6888:30:39"
                              }
                            ],
                            "id": 12286,
                            "name": "VariableDeclarationStatement",
                            "src": "6857:61:39"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_95b70a67b6f90bd4b4b99001501d6b791eaef597a8ec562443faa4204f719fe0",
                                          "typeString": "literal_string \"Number of reports for token not enough\""
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        59926,
                                        59927
                                      ],
                                      "referencedDeclaration": 59927,
                                      "type": "function (bool,string memory) pure",
                                      "value": "require"
                                    },
                                    "id": 12287,
                                    "name": "Identifier",
                                    "src": "6926:7:39"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": ">=",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "type": "uint256",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "numRates",
                                              "referencedDeclaration": 53501,
                                              "type": "function (address) view external returns (uint256)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 12282,
                                                  "type": "contract ISortedOracles",
                                                  "value": "sortedOracles"
                                                },
                                                "id": 12288,
                                                "name": "Identifier",
                                                "src": "6943:13:39"
                                              }
                                            ],
                                            "id": 12289,
                                            "name": "MemberAccess",
                                            "src": "6943:22:39"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 12245,
                                              "type": "address",
                                              "value": "sellTokenAddress"
                                            },
                                            "id": 12290,
                                            "name": "Identifier",
                                            "src": "6966:16:39"
                                          }
                                        ],
                                        "id": 12291,
                                        "name": "FunctionCall",
                                        "src": "6943:40:39"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 12263,
                                          "type": "uint256",
                                          "value": "minReports"
                                        },
                                        "id": 12292,
                                        "name": "Identifier",
                                        "src": "6987:10:39"
                                      }
                                    ],
                                    "id": 12293,
                                    "name": "BinaryOperation",
                                    "src": "6943:54:39"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "4e756d626572206f66207265706f72747320666f7220746f6b656e206e6f7420656e6f756768",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "string",
                                      "type": "literal_string \"Number of reports for token not enough\"",
                                      "value": "Number of reports for token not enough"
                                    },
                                    "id": 12294,
                                    "name": "Literal",
                                    "src": "7007:40:39"
                                  }
                                ],
                                "id": 12295,
                                "name": "FunctionCall",
                                "src": "6926:129:39"
                              }
                            ],
                            "id": 12296,
                            "name": "ExpressionStatement",
                            "src": "6926:129:39"
                          },
                          {
                            "attributes": {
                              "assignments": [
                                12298,
                                12300
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "rateNumerator",
                                  "scope": 12315,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "uint256",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 12297,
                                    "name": "ElementaryTypeName",
                                    "src": "7065:7:39"
                                  }
                                ],
                                "id": 12298,
                                "name": "VariableDeclaration",
                                "src": "7065:21:39"
                              },
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "rateDenominator",
                                  "scope": 12315,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "uint256",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 12299,
                                    "name": "ElementaryTypeName",
                                    "src": "7088:7:39"
                                  }
                                ],
                                "id": 12300,
                                "name": "VariableDeclaration",
                                "src": "7088:23:39"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple(uint256,uint256)",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "getExchangeRate",
                                      "referencedDeclaration": 1641,
                                      "type": "function (address) view external returns (uint256,uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 12269,
                                          "type": "contract IOracle",
                                          "value": "oracle"
                                        },
                                        "id": 12301,
                                        "name": "Identifier",
                                        "src": "7115:6:39"
                                      }
                                    ],
                                    "id": 12302,
                                    "name": "MemberAccess",
                                    "src": "7115:22:39"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 12245,
                                      "type": "address",
                                      "value": "sellTokenAddress"
                                    },
                                    "id": 12303,
                                    "name": "Identifier",
                                    "src": "7138:16:39"
                                  }
                                ],
                                "id": 12304,
                                "name": "FunctionCall",
                                "src": "7115:40:39"
                              }
                            ],
                            "id": 12305,
                            "name": "VariableDeclarationStatement",
                            "src": "7064:91:39"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 12275,
                                      "type": "uint256",
                                      "value": "minimalSortedOracles"
                                    },
                                    "id": 12306,
                                    "name": "Identifier",
                                    "src": "7164:20:39"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "uint256",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 8071,
                                          "type": "function (uint256,uint256,uint256,uint256) pure returns (uint256)",
                                          "value": "calculateMinAmount"
                                        },
                                        "id": 12307,
                                        "name": "Identifier",
                                        "src": "7187:18:39"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 12298,
                                          "type": "uint256",
                                          "value": "rateNumerator"
                                        },
                                        "id": 12308,
                                        "name": "Identifier",
                                        "src": "7215:13:39"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 12300,
                                          "type": "uint256",
                                          "value": "rateDenominator"
                                        },
                                        "id": 12309,
                                        "name": "Identifier",
                                        "src": "7238:15:39"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 12249,
                                          "type": "uint256",
                                          "value": "amount"
                                        },
                                        "id": 12310,
                                        "name": "Identifier",
                                        "src": "7263:6:39"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 12247,
                                          "type": "uint256",
                                          "value": "maxSlippage"
                                        },
                                        "id": 12311,
                                        "name": "Identifier",
                                        "src": "7279:11:39"
                                      }
                                    ],
                                    "id": 12312,
                                    "name": "FunctionCall",
                                    "src": "7187:111:39"
                                  }
                                ],
                                "id": 12313,
                                "name": "Assignment",
                                "src": "7164:134:39"
                              }
                            ],
                            "id": 12314,
                            "name": "ExpressionStatement",
                            "src": "7164:134:39"
                          }
                        ],
                        "id": 12315,
                        "name": "Block",
                        "src": "6849:456:39"
                      }
                    ],
                    "id": 12316,
                    "name": "IfStatement",
                    "src": "6829:476:39"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        12318
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "celoToken",
                          "scope": 12359,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract IERC20",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "IERC20",
                              "referencedDeclaration": 955,
                              "type": "contract IERC20"
                            },
                            "id": 12317,
                            "name": "UserDefinedTypeName",
                            "src": "7311:6:39"
                          }
                        ],
                        "id": 12318,
                        "name": "VariableDeclaration",
                        "src": "7311:16:39"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "contract IERC20",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 13438,
                              "type": "function () view returns (contract IERC20)",
                              "value": "getCeloToken"
                            },
                            "id": 12319,
                            "name": "Identifier",
                            "src": "7330:12:39"
                          }
                        ],
                        "id": 12320,
                        "name": "FunctionCall",
                        "src": "7330:14:39"
                      }
                    ],
                    "id": 12321,
                    "name": "VariableDeclarationStatement",
                    "src": "7311:33:39"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        12323
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "pair",
                          "scope": 12359,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 12322,
                            "name": "ElementaryTypeName",
                            "src": "7350:7:39"
                          }
                        ],
                        "id": 12323,
                        "name": "VariableDeclaration",
                        "src": "7350:12:39"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "address",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "getPair",
                              "referencedDeclaration": 54299,
                              "type": "function (address,address) view external returns (address)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "contract IUniswapV2FactoryMin",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 54300,
                                      "type": "type(contract IUniswapV2FactoryMin)",
                                      "value": "IUniswapV2FactoryMin"
                                    },
                                    "id": 12324,
                                    "name": "Identifier",
                                    "src": "7365:20:39"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "address",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "factory",
                                          "referencedDeclaration": 54967,
                                          "type": "function () pure external returns (address)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 12251,
                                              "type": "contract IUniswapV2RouterMin",
                                              "value": "bestRouter"
                                            },
                                            "id": 12325,
                                            "name": "Identifier",
                                            "src": "7386:10:39"
                                          }
                                        ],
                                        "id": 12326,
                                        "name": "MemberAccess",
                                        "src": "7386:18:39"
                                      }
                                    ],
                                    "id": 12327,
                                    "name": "FunctionCall",
                                    "src": "7386:20:39"
                                  }
                                ],
                                "id": 12328,
                                "name": "FunctionCall",
                                "src": "7365:42:39"
                              }
                            ],
                            "id": 12329,
                            "name": "MemberAccess",
                            "src": "7365:50:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 12245,
                              "type": "address",
                              "value": "sellTokenAddress"
                            },
                            "id": 12330,
                            "name": "Identifier",
                            "src": "7423:16:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$955",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)",
                                  "value": "address"
                                },
                                "id": 12331,
                                "name": "ElementaryTypeNameExpression",
                                "src": "7447:7:39"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 12318,
                                  "type": "contract IERC20",
                                  "value": "celoToken"
                                },
                                "id": 12332,
                                "name": "Identifier",
                                "src": "7455:9:39"
                              }
                            ],
                            "id": 12333,
                            "name": "FunctionCall",
                            "src": "7447:18:39"
                          }
                        ],
                        "id": 12334,
                        "name": "FunctionCall",
                        "src": "7365:106:39"
                      }
                    ],
                    "id": 12335,
                    "name": "VariableDeclarationStatement",
                    "src": "7350:121:39"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        12337
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "minAmountPair",
                          "scope": 12359,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 12336,
                            "name": "ElementaryTypeName",
                            "src": "7477:7:39"
                          }
                        ],
                        "id": 12337,
                        "name": "VariableDeclaration",
                        "src": "7477:21:39"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 8071,
                              "type": "function (uint256,uint256,uint256,uint256) pure returns (uint256)",
                              "value": "calculateMinAmount"
                            },
                            "id": 12338,
                            "name": "Identifier",
                            "src": "7501:18:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "balanceOf",
                                  "referencedDeclaration": 900,
                                  "type": "function (address) view external returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "contract IERC20",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 955,
                                          "type": "type(contract IERC20)",
                                          "value": "IERC20"
                                        },
                                        "id": 12339,
                                        "name": "Identifier",
                                        "src": "7527:6:39"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 12245,
                                          "type": "address",
                                          "value": "sellTokenAddress"
                                        },
                                        "id": 12340,
                                        "name": "Identifier",
                                        "src": "7534:16:39"
                                      }
                                    ],
                                    "id": 12341,
                                    "name": "FunctionCall",
                                    "src": "7527:24:39"
                                  }
                                ],
                                "id": 12342,
                                "name": "MemberAccess",
                                "src": "7527:34:39"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 12323,
                                  "type": "address",
                                  "value": "pair"
                                },
                                "id": 12343,
                                "name": "Identifier",
                                "src": "7562:4:39"
                              }
                            ],
                            "id": 12344,
                            "name": "FunctionCall",
                            "src": "7527:40:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "balanceOf",
                                  "referencedDeclaration": 900,
                                  "type": "function (address) view external returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 12318,
                                      "type": "contract IERC20",
                                      "value": "celoToken"
                                    },
                                    "id": 12345,
                                    "name": "Identifier",
                                    "src": "7575:9:39"
                                  }
                                ],
                                "id": 12346,
                                "name": "MemberAccess",
                                "src": "7575:19:39"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 12323,
                                  "type": "address",
                                  "value": "pair"
                                },
                                "id": 12347,
                                "name": "Identifier",
                                "src": "7595:4:39"
                              }
                            ],
                            "id": 12348,
                            "name": "FunctionCall",
                            "src": "7575:25:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 12249,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 12349,
                            "name": "Identifier",
                            "src": "7608:6:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 12247,
                              "type": "uint256",
                              "value": "maxSlippage"
                            },
                            "id": 12350,
                            "name": "Identifier",
                            "src": "7622:11:39"
                          }
                        ],
                        "id": 12351,
                        "name": "FunctionCall",
                        "src": "7501:138:39"
                      }
                    ],
                    "id": 12352,
                    "name": "VariableDeclarationStatement",
                    "src": "7477:162:39"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 12255
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "max",
                              "referencedDeclaration": 126,
                              "type": "function (uint256,uint256) pure returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 176,
                                  "type": "type(library Math)",
                                  "value": "Math"
                                },
                                "id": 12353,
                                "name": "Identifier",
                                "src": "7653:4:39"
                              }
                            ],
                            "id": 12354,
                            "name": "MemberAccess",
                            "src": "7653:8:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 12337,
                              "type": "uint256",
                              "value": "minAmountPair"
                            },
                            "id": 12355,
                            "name": "Identifier",
                            "src": "7662:13:39"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 12275,
                              "type": "uint256",
                              "value": "minimalSortedOracles"
                            },
                            "id": 12356,
                            "name": "Identifier",
                            "src": "7677:20:39"
                          }
                        ],
                        "id": 12357,
                        "name": "FunctionCall",
                        "src": "7653:45:39"
                      }
                    ],
                    "id": 12358,
                    "name": "Return",
                    "src": "7646:52:39"
                  }
                ],
                "id": 12359,
                "name": "Block",
                "src": "6532:1171:39"
              }
            ],
            "id": 12360,
            "name": "FunctionDefinition",
            "src": "6355:1348:39"
          }
        ],
        "id": 12361,
        "name": "ContractDefinition",
        "src": "933:6772:39"
      }
    ],
    "id": 12362,
    "name": "SourceUnit",
    "src": "0:7706:39"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.13+commit.5b0b510c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2025-05-05T17:49:51.131Z",
  "devdoc": {
    "methods": {
      "calculateMinAmount(uint256,uint256,uint256,uint256)": {
        "details": "Calculates the minimum amount of tokens that should be received for the specified  amount with the given mid-price and maximum slippage.",
        "params": {
          "amount": "The amount of tokens to be exchanged.",
          "maxSlippage": "The maximum slippage percentage as a fraction of the mid-price.",
          "midPriceDenominator": "The denominator of the mid-price for the token pair.",
          "midPriceNumerator": "The numerator of the mid-price for the token pair."
        },
        "return": "The minimum amount of tokens that should be received as a uint256 value."
      },
      "constructor": {
        "params": {
          "test": "Set to true to skip implementation initialisation."
        }
      },
      "getRoutersForToken(address)": {
        "params": {
          "token": "The address of the token to query."
        },
        "return": "An array of all the allowed router."
      },
      "getVersionNumber()": {
        "return": "Storage version of the contract.Major version of the contract.Minor version of the contract.Patch version of the contract."
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removeRouter(address,address)": {
        "params": {
          "router": "Address of the router to remove.",
          "token": "Address of the token."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setMinimumReports(address,uint256)": {
        "params": {
          "newMininumReports": "The new update minimum number of reports required."
        }
      },
      "setRegistry(address)": {
        "params": {
          "registryAddress": "The address of a registry contract for routing to other contracts."
        }
      },
      "setRouter(address,address)": {
        "params": {
          "router": "The new router.",
          "token": "Address of the token to set."
        }
      },
      "transfer(address,uint256,address)": {
        "params": {
          "amount": "The amount of tokens to transfer.",
          "to": "The address of the recipient to transfer the tokens to.",
          "token": "The address of the token to transfer."
        },
        "return": "A boolean indicating whether the transfer was successful or not."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "constructor": "Sets initialized == true on implementation contracts.",
      "getRoutersForToken(address)": {
        "notice": "Get the list of routers for a token."
      },
      "getVersionNumber()": {
        "notice": "Returns the storage, major, minor, and patch version of the contract."
      },
      "removeRouter(address,address)": {
        "notice": "Allows owner to remove a router for a token."
      },
      "setMinimumReports(address,uint256)": {
        "notice": "Allows owner to set the minimum number of reports required."
      },
      "setRegistry(address)": {
        "notice": "Updates the address pointing to a Registry contract."
      },
      "setRouter(address,address)": {
        "notice": "Allows owner to set the router for a token."
      },
      "transfer(address,uint256,address)": {
        "notice": "Allows owner to transfer tokens of this contract. It's meant for governance to  trigger use cases not contemplated in this contract."
      }
    }
  }
}