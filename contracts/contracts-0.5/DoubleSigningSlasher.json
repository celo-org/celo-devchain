{
  "contractName": "DoubleSigningSlasher",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "test",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "DoubleSigningSlashPerformed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "RegistrySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "penalty",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "name": "SlashingIncentivesSet",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "blsKey",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "blsPop",
          "type": "bytes"
        }
      ],
      "name": "checkProofOfPossession",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "aNumerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "aDenominator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bNumerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bDenominator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "exponent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_decimals",
          "type": "uint256"
        }
      ],
      "name": "fractionMulExp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "header",
          "type": "bytes"
        }
      ],
      "name": "getBlockNumberFromHeader",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getEpochNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getEpochNumberOfBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getEpochSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getParentSealBitmap",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "header",
          "type": "bytes"
        }
      ],
      "name": "getVerifiedSealBitmapFromHeader",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "groupMembershipHistoryIndex",
          "type": "uint256"
        }
      ],
      "name": "groupMembershipAtBlock",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "header",
          "type": "bytes"
        }
      ],
      "name": "hashHeader",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "minQuorumSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minQuorumSizeInCurrentSet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numberValidatorsInCurrentSet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "numberValidatorsInSet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract IRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "penalty",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "name": "setSlashingIncentives",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "slashingIncentives",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "penalty",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "validatorSignerAddressFromCurrentSet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "validatorSignerAddressFromSet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_penalty",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_reward",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVersionNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "headerA",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "headerB",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "groupMembershipHistoryIndex",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "validatorElectionLessers",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "validatorElectionGreaters",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "validatorElectionIndices",
          "type": "uint256[]"
        },
        {
          "internalType": "address[]",
          "name": "groupElectionLessers",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "groupElectionGreaters",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "groupElectionIndices",
          "type": "uint256[]"
        }
      ],
      "name": "slash",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "headerA",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "headerB",
          "type": "bytes"
        }
      ],
      "name": "checkForDoubleSigning",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.13+commit.5b0b510c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"test\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"DoubleSigningSlashPerformed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"RegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"SlashingIncentivesSet\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"headerA\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"headerB\",\"type\":\"bytes\"}],\"name\":\"checkForDoubleSigning\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"blsKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"blsPop\",\"type\":\"bytes\"}],\"name\":\"checkProofOfPossession\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"aNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"aDenominator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bDenominator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exponent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"fractionMulExp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"getBlockNumberFromHeader\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEpochNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getEpochNumberOfBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEpochSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getParentSealBitmap\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"getVerifiedSealBitmapFromHeader\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVersionNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"groupMembershipHistoryIndex\",\"type\":\"uint256\"}],\"name\":\"groupMembershipAtBlock\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"hashHeader\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_penalty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"minQuorumSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minQuorumSizeInCurrentSet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numberValidatorsInCurrentSet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"numberValidatorsInSet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract IRegistry\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"setRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"setSlashingIncentives\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"headerA\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"headerB\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"groupMembershipHistoryIndex\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"validatorElectionLessers\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"validatorElectionGreaters\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"validatorElectionIndices\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"groupElectionLessers\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"groupElectionGreaters\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"groupElectionIndices\",\"type\":\"uint256[]\"}],\"name\":\"slash\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"slashingIncentives\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"validatorSignerAddressFromCurrentSet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"validatorSignerAddressFromSet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"checkForDoubleSigning(address,uint256,bytes,bytes)\":{\"params\":{\"headerA\":\"First double signed block header.\",\"headerB\":\"Second double signed block header.\",\"index\":\"Validator index at the block.\",\"signer\":\"The signer to be slashed.\"},\"return\":\"Block number where double signing occured. Throws if no double signing is detected.\"},\"checkProofOfPossession(address,bytes,bytes)\":{\"details\":\"This function will be deprecated in L2.\",\"params\":{\"blsKey\":\"The BLS public key that the validator is using for consensus, should pass proof  of possession. 48 bytes.\",\"blsPop\":\"The BLS public key proof-of-possession, which consists of a signature on the  account address. 96 bytes.\",\"sender\":\"The address signed by the BLS key to generate the proof of possession.\"},\"return\":\"True upon success.\"},\"constructor\":{\"params\":{\"test\":\"Set to true to skip implementation initialization\"}},\"fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"This function will be deprecated in L2.\",\"params\":{\"_decimals\":\"precision\",\"aDenominator\":\"Denominator of first fraction\",\"aNumerator\":\"Numerator of first fraction\",\"bDenominator\":\"Denominator of exponentiated fraction\",\"bNumerator\":\"Numerator of exponentiated fraction\",\"exponent\":\"exponent to raise b to\"},\"return\":\"Numerator of the computed quantity (not reduced).Denominator of the computed quantity (not reduced).\"},\"getBlockNumberFromHeader(bytes)\":{\"details\":\"This function will be deprecated in L2.\",\"params\":{\"header\":\"RLP encoded header\"},\"return\":\"Block number.\"},\"getEpochNumber()\":{\"details\":\"This function will be deprecated in L2.\",\"return\":\"Current epoch number.\"},\"getEpochNumberOfBlock(uint256)\":{\"details\":\"This function will be deprecated in L2.\",\"params\":{\"blockNumber\":\"Block number where epoch number is calculated.\"},\"return\":\"Epoch number.\"},\"getEpochSize()\":{\"details\":\"This function will be deprecated in L2.\",\"return\":\"The current epoch size in blocks.\"},\"getParentSealBitmap(uint256)\":{\"details\":\"This function will be deprecated in L2.\",\"params\":{\"blockNumber\":\"Block number to retrieve. Must be within 4 epochs of the current number.\"},\"return\":\"Bitmap parent seal with set bits at indices corresponding to signing validators.\"},\"getVerifiedSealBitmapFromHeader(bytes)\":{\"details\":\"This function will be deprecated in L2.\",\"params\":{\"header\":\"RLP encoded header\"},\"return\":\"Bitmap parent seal with set bits at indices correspoinding to signing validators.\"},\"getVersionNumber()\":{\"return\":\"Storage version of the contract.Major version of the contract.Minor version of the contract.Patch version of the contract.\"},\"groupMembershipAtBlock(address,uint256,uint256)\":{\"params\":{\"blockNumber\":\"Block number associated with slashing.\",\"groupMembershipHistoryIndex\":\"Index used for history lookup.\",\"validator\":\"Validator that was slashed.\"},\"return\":\"Group to be slashed.\"},\"hashHeader(bytes)\":{\"details\":\"This function will be deprecated in L2.\",\"params\":{\"header\":\"RLP encoded header\"},\"return\":\"Header hash.\"},\"initialize(address,uint256,uint256)\":{\"params\":{\"_penalty\":\"Penalty for the slashed signer.\",\"_reward\":\"Reward that the observer gets.\",\"registryAddress\":\"The address of the registry core smart contract.\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"minQuorumSize(uint256)\":{\"details\":\"Computed in celo-blockchain as int(math.Ceil(float64(2*valSet.Size()) / 3))This function will be deprecated in L2.\"},\"minQuorumSizeInCurrentSet()\":{\"details\":\"This function will be deprecated in L2.\",\"return\":\"Byzantine quorum of validators.\"},\"numberValidatorsInCurrentSet()\":{\"details\":\"This function will be deprecated in L2.\",\"return\":\"Size of the current elected validator set.\"},\"numberValidatorsInSet(uint256)\":{\"details\":\"This function will be deprecated in L2.\",\"params\":{\"blockNumber\":\"Block number to retrieve the validator set from.\"},\"return\":\"Size of the validator set.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setRegistry(address)\":{\"params\":{\"registryAddress\":\"The address of a registry contract for routing to other contracts.\"}},\"setSlashingIncentives(uint256,uint256)\":{\"params\":{\"penalty\":\"Penalty for the slashed signer.\",\"reward\":\"Reward that the observer gets.\"}},\"slash(address,uint256,bytes,bytes,uint256,address[],address[],uint256[],address[],address[],uint256[])\":{\"params\":{\"groupElectionGreaters\":\"Greater pointers for group slashing.\",\"groupElectionIndices\":\"Vote indices for group slashing.\",\"groupElectionLessers\":\"Lesser pointers for group slashing.\",\"groupMembershipHistoryIndex\":\"Group membership index from where the group should be found.\",\"headerA\":\"First double signed block header.\",\"headerB\":\"Second double signed block header.\",\"index\":\"Validator index at the block.\",\"signer\":\"The signer to be slashed.\",\"validatorElectionGreaters\":\"Greater pointers for validator slashing.\",\"validatorElectionIndices\":\"Vote indices for validator slashing.\",\"validatorElectionLessers\":\"Lesser pointers for validator slashing.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatorSignerAddressFromCurrentSet(uint256)\":{\"details\":\"This function will be deprecated in L2.\",\"params\":{\"index\":\"Index of requested validator in the validator set.\"},\"return\":\"Address of validator signer at the requested index.\"},\"validatorSignerAddressFromSet(uint256,uint256)\":{\"details\":\"This function will be deprecated in L2.\",\"params\":{\"blockNumber\":\"Block number to retrieve the validator set from.\",\"index\":\"Index of requested validator in the validator set.\"},\"return\":\"Address of validator signer at the requested index.\"}}},\"userdoc\":{\"methods\":{\"checkForDoubleSigning(address,uint256,bytes,bytes)\":{\"notice\":\"Given two RLP encoded blocks, calls into precompiles to require that the two block hashes are different, have the same height, have a quorum of signatures, and that `signer` was part of the quorum.\"},\"checkProofOfPossession(address,bytes,bytes)\":{\"notice\":\"Checks a BLS proof of possession.\"},\"constructor\":\"Sets initialized == true on implementation contracts\",\"fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"calculate a * b^x for fractions a, b to `decimals` precision\"},\"getBlockNumberFromHeader(bytes)\":{\"notice\":\"Parses block number out of header.\"},\"getEpochNumber()\":{\"notice\":\"Returns the epoch number at a block.\"},\"getEpochNumberOfBlock(uint256)\":{\"notice\":\"Returns the epoch number at a block.\"},\"getEpochSize()\":{\"notice\":\"Returns the current epoch size in blocks.\"},\"getParentSealBitmap(uint256)\":{\"notice\":\"Gets the parent seal bitmap from the header at the given block number.\"},\"getVerifiedSealBitmapFromHeader(bytes)\":{\"notice\":\"Verifies the BLS signature on the header and returns the seal bitmap. The validator set used for verification is retrieved based on the parent hash field of the header.  If the parent hash is not in the blockchain, verification fails.\"},\"getVersionNumber()\":{\"notice\":\"Returns the storage, major, minor, and patch version of the contract.\"},\"groupMembershipAtBlock(address,uint256,uint256)\":{\"notice\":\"Returns the group to be slashed.\"},\"hashHeader(bytes)\":{\"notice\":\"Computes hash of header.\"},\"initialize(address,uint256,uint256)\":{\"notice\":\"Used in place of the constructor to allow the contract to be upgradable via proxy.\"},\"minQuorumSize(uint256)\":{\"notice\":\"Returns the minimum number of required signers for a given block number.\"},\"minQuorumSizeInCurrentSet()\":{\"notice\":\"Computes byzantine quorum from current validator set size\"},\"numberValidatorsInCurrentSet()\":{\"notice\":\"Gets the size of the current elected validator set.\"},\"numberValidatorsInSet(uint256)\":{\"notice\":\"Gets the size of the validator set that must sign the given block number.\"},\"setRegistry(address)\":{\"notice\":\"Updates the address pointing to a Registry contract.\"},\"setSlashingIncentives(uint256,uint256)\":{\"notice\":\"Sets slashing incentives.\"},\"slash(address,uint256,bytes,bytes,uint256,address[],address[],uint256[],address[],address[],uint256[])\":{\"notice\":\"Requires that `eval` returns true and that this evidence has not already been used to slash `signer`. If so, fetches the `account` associated with `signer` and the group that `signer` was a member of during the corresponding epoch. Then, calls `LockedGold.slash` on both the validator and group accounts. Calls `Validators.removeSlashedMember` to remove the validator from its current group if it is a member of one. Finally, stores that hash(signer, blockNumber) has been slashed.\"},\"validatorSignerAddressFromCurrentSet(uint256)\":{\"notice\":\"Gets a validator signer address from the current validator set.\"},\"validatorSignerAddressFromSet(uint256,uint256)\":{\"notice\":\"Gets a validator signer address from the validator set at the given block number.\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/governance/DoubleSigningSlasher.sol\":\"DoubleSigningSlasher\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\ncontract Context {\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\n    // an instance of this contract, which should be used via inheritance.\\n    constructor () internal { }\\n    // solhint-disable-previous-line no-empty-blocks\\n\\n    function _msgSender() internal view returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\"},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\"},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\nimport \\\"../GSN/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(isOwner(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the caller is the current owner.\\n     */\\n    function isOwner() public view returns (bool) {\\n        return _msgSender() == _owner;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     */\\n    function _transferOwnership(address newOwner) internal {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\"},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\\n * the optional functions; to access them see {ERC20Detailed}.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\"},\"project:/contracts-0.8/common/IsL2Check.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.8.20;\\n\\n/**\\n * @title Based on predeploy returns whether this is L1 or L2.\\n */\\ncontract IsL2Check {\\n  address constant proxyAdminAddress = 0x4200000000000000000000000000000000000018;\\n\\n  /**\\n   * @notice Throws if called on L2.\\n   */\\n  modifier onlyL1() {\\n    allowOnlyL1();\\n    _;\\n  }\\n\\n  /**\\n   * @notice Throws if called on L1.\\n   */\\n  modifier onlyL2() {\\n    if (!isL2()) {\\n      revert(\\\"This method is not supported in L1.\\\");\\n    }\\n    _;\\n  }\\n\\n  /**\\n   * @notice Checks to see if current network is Celo L2.\\n   * @return Whether or not the current network is a Celo L2.\\n   */\\n  function isL2() internal view returns (bool) {\\n    uint32 size;\\n    address _addr = proxyAdminAddress;\\n    assembly {\\n      size := extcodesize(_addr)\\n    }\\n    return (size > 0);\\n  }\\n\\n  /**\\n   * @notice Used to restrict usage of the parent function to L1 execution.\\n   * @dev Reverts if called on a Celo L2 network.\\n   */\\n  function allowOnlyL1() internal view {\\n    if (isL2()) {\\n      revert(\\\"This method is no longer supported in L2.\\\");\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x4629a6f2c4364780f5a6a5e2ad5c3675c0a1d3bea35cfd4426eeaebca60cac37\"},\"project:/contracts/common/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\n/**\\n * @title Used with proxied contracts that have an `initialize` function.\\n * @notice Ensures the `initialize` function:\\n *         - gets called only once\\n *         - cannot be called on the logic contract.\\n */\\ncontract Initializable {\\n  bool public initialized;\\n\\n  /**\\n   * @notice Ensures the initializer function cannot be called more than once.\\n   */\\n  modifier initializer() {\\n    require(!initialized, \\\"contract already initialized\\\");\\n    initialized = true;\\n    _;\\n  }\\n\\n  /**\\n   * @notice By default, ensures that the `initialize` function cannot be called\\n   * on the logic contract.\\n   * @param testingDeployment When set to true, allows the `initialize` function\\n   * to be called, which is useful in testing when not setting up with a Proxy.\\n   */\\n  constructor(bool testingDeployment) public {\\n    if (!testingDeployment) {\\n      initialized = true;\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x8de2ab8706668982998c5a995bdc3d8ff20a1ec8519bf49cec9e464f62c57bb9\"},\"project:/contracts/common/UsingPrecompiles.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\nimport \\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\\";\\nimport \\\"../common/interfaces/ICeloVersionedContract.sol\\\";\\nimport \\\"../common/interfaces/IEpochManager.sol\\\";\\nimport \\\"../../contracts-0.8/common/IsL2Check.sol\\\";\\n\\ncontract UsingPrecompiles is IsL2Check {\\n  using SafeMath for uint256;\\n\\n  address constant TRANSFER = address(0xff - 2);\\n  address constant FRACTION_MUL = address(0xff - 3);\\n  address constant PROOF_OF_POSSESSION = address(0xff - 4);\\n  address constant GET_VALIDATOR = address(0xff - 5);\\n  address constant NUMBER_VALIDATORS = address(0xff - 6);\\n  address constant EPOCH_SIZE = address(0xff - 7);\\n  address constant BLOCK_NUMBER_FROM_HEADER = address(0xff - 8);\\n  address constant HASH_HEADER = address(0xff - 9);\\n  address constant GET_PARENT_SEAL_BITMAP = address(0xff - 10);\\n  address constant GET_VERIFIED_SEAL_BITMAP = address(0xff - 11);\\n  uint256 constant DAY = 86400;\\n\\n  /**\\n   * @notice calculate a * b^x for fractions a, b to `decimals` precision\\n   * @param aNumerator Numerator of first fraction\\n   * @param aDenominator Denominator of first fraction\\n   * @param bNumerator Numerator of exponentiated fraction\\n   * @param bDenominator Denominator of exponentiated fraction\\n   * @param exponent exponent to raise b to\\n   * @param _decimals precision\\n   * @return Numerator of the computed quantity (not reduced).\\n   * @return Denominator of the computed quantity (not reduced).\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function fractionMulExp(\\n    uint256 aNumerator,\\n    uint256 aDenominator,\\n    uint256 bNumerator,\\n    uint256 bDenominator,\\n    uint256 exponent,\\n    uint256 _decimals\\n  ) public view onlyL1 returns (uint256, uint256) {\\n    require(aDenominator != 0 && bDenominator != 0, \\\"a denominator is zero\\\");\\n    uint256 returnNumerator;\\n    uint256 returnDenominator;\\n    bool success;\\n    bytes memory out;\\n    (success, out) = FRACTION_MUL.staticcall(\\n      abi.encodePacked(aNumerator, aDenominator, bNumerator, bDenominator, exponent, _decimals)\\n    );\\n    require(success, \\\"error calling fractionMulExp precompile\\\");\\n    returnNumerator = getUint256FromBytes(out, 0);\\n    returnDenominator = getUint256FromBytes(out, 32);\\n    return (returnNumerator, returnDenominator);\\n  }\\n\\n  /**\\n   * @notice Returns the current epoch size in blocks.\\n   * @return The current epoch size in blocks.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function getEpochSize() public view onlyL1 returns (uint256) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = EPOCH_SIZE.staticcall(abi.encodePacked(true));\\n    require(success, \\\"error calling getEpochSize precompile\\\");\\n    return getUint256FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Returns the epoch number at a block.\\n   * @param blockNumber Block number where epoch number is calculated.\\n   * @return Epoch number.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function getEpochNumberOfBlock(uint256 blockNumber) public view onlyL1 returns (uint256) {\\n    return epochNumberOfBlock(blockNumber, getEpochSize());\\n  }\\n\\n  /**\\n   * @notice Returns the epoch number at a block.\\n   * @return Current epoch number.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function getEpochNumber() public view onlyL1 returns (uint256) {\\n    return getEpochNumberOfBlock(block.number);\\n  }\\n\\n  /**\\n   * @notice Gets a validator signer address from the current validator set.\\n   * @param index Index of requested validator in the validator set.\\n   * @return Address of validator signer at the requested index.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function validatorSignerAddressFromCurrentSet(\\n    uint256 index\\n  ) public view onlyL1 returns (address) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = GET_VALIDATOR.staticcall(abi.encodePacked(index, uint256(block.number)));\\n    require(success, \\\"error calling validatorSignerAddressFromCurrentSet precompile\\\");\\n    return address(uint160(getUint256FromBytes(out, 0)));\\n  }\\n\\n  /**\\n   * @notice Gets a validator signer address from the validator set at the given block number.\\n   * @param index Index of requested validator in the validator set.\\n   * @param blockNumber Block number to retrieve the validator set from.\\n   * @return Address of validator signer at the requested index.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function validatorSignerAddressFromSet(\\n    uint256 index,\\n    uint256 blockNumber\\n  ) public view onlyL1 returns (address) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = GET_VALIDATOR.staticcall(abi.encodePacked(index, blockNumber));\\n    require(success, \\\"error calling validatorSignerAddressFromSet precompile\\\");\\n    return address(uint160(getUint256FromBytes(out, 0)));\\n  }\\n\\n  /**\\n   * @notice Gets the size of the current elected validator set.\\n   * @return Size of the current elected validator set.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function numberValidatorsInCurrentSet() public view onlyL1 returns (uint256) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = NUMBER_VALIDATORS.staticcall(abi.encodePacked(uint256(block.number)));\\n    require(success, \\\"error calling numberValidatorsInCurrentSet precompile\\\");\\n    return getUint256FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Gets the size of the validator set that must sign the given block number.\\n   * @param blockNumber Block number to retrieve the validator set from.\\n   * @return Size of the validator set.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function numberValidatorsInSet(uint256 blockNumber) public view onlyL1 returns (uint256) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = NUMBER_VALIDATORS.staticcall(abi.encodePacked(blockNumber));\\n    require(success, \\\"error calling numberValidatorsInSet precompile\\\");\\n    return getUint256FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Checks a BLS proof of possession.\\n   * @param sender The address signed by the BLS key to generate the proof of possession.\\n   * @param blsKey The BLS public key that the validator is using for consensus, should pass proof\\n   *   of possession. 48 bytes.\\n   * @param blsPop The BLS public key proof-of-possession, which consists of a signature on the\\n   *   account address. 96 bytes.\\n   * @return True upon success.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function checkProofOfPossession(\\n    address sender,\\n    bytes memory blsKey,\\n    bytes memory blsPop\\n  ) public view onlyL1 returns (bool) {\\n    bool success;\\n    (success, ) = PROOF_OF_POSSESSION.staticcall(abi.encodePacked(sender, blsKey, blsPop));\\n    return success;\\n  }\\n\\n  /**\\n   * @notice Parses block number out of header.\\n   * @param header RLP encoded header\\n   * @return Block number.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function getBlockNumberFromHeader(bytes memory header) public view onlyL1 returns (uint256) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = BLOCK_NUMBER_FROM_HEADER.staticcall(abi.encodePacked(header));\\n    require(success, \\\"error calling getBlockNumberFromHeader precompile\\\");\\n    return getUint256FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Computes hash of header.\\n   * @param header RLP encoded header\\n   * @return Header hash.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function hashHeader(bytes memory header) public view onlyL1 returns (bytes32) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = HASH_HEADER.staticcall(abi.encodePacked(header));\\n    require(success, \\\"error calling hashHeader precompile\\\");\\n    return getBytes32FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Gets the parent seal bitmap from the header at the given block number.\\n   * @param blockNumber Block number to retrieve. Must be within 4 epochs of the current number.\\n   * @return Bitmap parent seal with set bits at indices corresponding to signing validators.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function getParentSealBitmap(uint256 blockNumber) public view onlyL1 returns (bytes32) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = GET_PARENT_SEAL_BITMAP.staticcall(abi.encodePacked(blockNumber));\\n    require(success, \\\"error calling getParentSealBitmap precompile\\\");\\n    return getBytes32FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Verifies the BLS signature on the header and returns the seal bitmap.\\n   * The validator set used for verification is retrieved based on the parent hash field of the\\n   * header.  If the parent hash is not in the blockchain, verification fails.\\n   * @param header RLP encoded header\\n   * @return Bitmap parent seal with set bits at indices correspoinding to signing validators.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function getVerifiedSealBitmapFromHeader(\\n    bytes memory header\\n  ) public view onlyL1 returns (bytes32) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = GET_VERIFIED_SEAL_BITMAP.staticcall(abi.encodePacked(header));\\n    require(success, \\\"error calling getVerifiedSealBitmapFromHeader precompile\\\");\\n    return getBytes32FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Returns the minimum number of required signers for a given block number.\\n   * @dev Computed in celo-blockchain as int(math.Ceil(float64(2*valSet.Size()) / 3))\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function minQuorumSize(uint256 blockNumber) public view onlyL1 returns (uint256) {\\n    return numberValidatorsInSet(blockNumber).mul(2).add(2).div(3);\\n  }\\n\\n  /**\\n   * @notice Computes byzantine quorum from current validator set size\\n   * @return Byzantine quorum of validators.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function minQuorumSizeInCurrentSet() public view onlyL1 returns (uint256) {\\n    return minQuorumSize(block.number);\\n  }\\n\\n  /**\\n   * @notice Returns the epoch number at a block.\\n   * @param blockNumber Block number where epoch number is calculated.\\n   * @param epochSize The epoch size in blocks.\\n   * @return Epoch number.\\n   */\\n  function epochNumberOfBlock(\\n    uint256 blockNumber,\\n    uint256 epochSize\\n  ) internal pure returns (uint256) {\\n    // Follows GetEpochNumber from celo-blockchain/blob/master/consensus/istanbul/utils.go\\n    uint256 epochNumber = blockNumber / epochSize;\\n    if (blockNumber % epochSize == 0) {\\n      return epochNumber;\\n    } else {\\n      return epochNumber.add(1);\\n    }\\n  }\\n\\n  /**\\n   * @notice Converts bytes to uint256.\\n   * @param bs byte[] data\\n   * @param start offset into byte data to convert\\n   * @return uint256 data\\n   */\\n  function getUint256FromBytes(bytes memory bs, uint256 start) internal pure returns (uint256) {\\n    return uint256(getBytes32FromBytes(bs, start));\\n  }\\n\\n  /**\\n   * @notice Converts bytes to bytes32.\\n   * @param bs byte[] data\\n   * @param start offset into byte data to convert\\n   * @return bytes32 data\\n   */\\n  function getBytes32FromBytes(bytes memory bs, uint256 start) internal pure returns (bytes32) {\\n    require(bs.length >= start.add(32), \\\"slicing out of range\\\");\\n    bytes32 x;\\n    assembly {\\n      x := mload(add(bs, add(start, 32)))\\n    }\\n    return x;\\n  }\\n}\\n\",\"keccak256\":\"0x05d97764c5c59d311b7b9d8ccb48f73f4942602feb277bdcca39075cb022621f\"},\"project:/contracts/common/UsingRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity ^0.5.13;\\n\\nimport \\\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\\";\\nimport \\\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\\\";\\n\\nimport \\\"./interfaces/IAccounts.sol\\\";\\nimport \\\"./interfaces/IEpochManager.sol\\\";\\nimport \\\"./interfaces/IFeeCurrencyWhitelist.sol\\\";\\nimport \\\"./interfaces/IFreezer.sol\\\";\\nimport \\\"./interfaces/IRegistry.sol\\\";\\nimport \\\"./interfaces/ICeloUnreleasedTreasury.sol\\\";\\n\\nimport \\\"../governance/interfaces/IElection.sol\\\";\\nimport \\\"../governance/interfaces/IEpochRewards.sol\\\";\\nimport \\\"../governance/interfaces/IGovernance.sol\\\";\\nimport \\\"../governance/interfaces/ILockedGold.sol\\\";\\nimport \\\"../governance/interfaces/ILockedCelo.sol\\\";\\nimport \\\"../governance/interfaces/IValidators.sol\\\";\\n\\nimport \\\"../identity/interfaces/IRandom.sol\\\";\\nimport \\\"../identity/interfaces/IAttestations.sol\\\";\\n\\nimport \\\"../../lib/mento-core/contracts/interfaces/IExchange.sol\\\";\\nimport \\\"../../lib/mento-core/contracts/interfaces/IReserve.sol\\\";\\nimport \\\"../../lib/mento-core/contracts/interfaces/IStableToken.sol\\\";\\nimport \\\"../stability/interfaces/ISortedOracles.sol\\\";\\n\\ncontract UsingRegistry is Ownable {\\n  // solhint-disable state-visibility\\n  bytes32 constant ACCOUNTS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Accounts\\\"));\\n  bytes32 constant ATTESTATIONS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Attestations\\\"));\\n  bytes32 constant DOWNTIME_SLASHER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"DowntimeSlasher\\\"));\\n  bytes32 constant DOUBLE_SIGNING_SLASHER_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"DoubleSigningSlasher\\\"));\\n  bytes32 constant ELECTION_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Election\\\"));\\n  bytes32 constant EXCHANGE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Exchange\\\"));\\n  bytes32 constant FEE_CURRENCY_WHITELIST_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"FeeCurrencyWhitelist\\\"));\\n  bytes32 constant FREEZER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Freezer\\\"));\\n  bytes32 constant GOLD_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"GoldToken\\\"));\\n  bytes32 constant GOVERNANCE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Governance\\\"));\\n  bytes32 constant GOVERNANCE_SLASHER_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"GovernanceSlasher\\\"));\\n  bytes32 constant LOCKED_GOLD_REGISTRY_ID = keccak256(abi.encodePacked(\\\"LockedGold\\\"));\\n  bytes32 constant RESERVE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Reserve\\\"));\\n  bytes32 constant RANDOM_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Random\\\"));\\n  bytes32 constant SORTED_ORACLES_REGISTRY_ID = keccak256(abi.encodePacked(\\\"SortedOracles\\\"));\\n  bytes32 constant STABLE_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"StableToken\\\"));\\n  bytes32 constant VALIDATORS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Validators\\\"));\\n\\n  bytes32 constant CELO_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"CeloToken\\\"));\\n  bytes32 constant LOCKED_CELO_REGISTRY_ID = keccak256(abi.encodePacked(\\\"LockedCelo\\\"));\\n  bytes32 constant CELO_UNRELEASED_TREASURY_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"CeloUnreleasedTreasury\\\"));\\n  bytes32 constant EPOCH_REWARDS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"EpochRewards\\\"));\\n  bytes32 constant EPOCH_MANAGER_ENABLER_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"EpochManagerEnabler\\\"));\\n  bytes32 constant EPOCH_MANAGER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"EpochManager\\\"));\\n  // solhint-enable state-visibility\\n\\n  IRegistry public registry;\\n\\n  event RegistrySet(address indexed registryAddress);\\n\\n  modifier onlyRegisteredContract(bytes32 identifierHash) {\\n    require(registry.getAddressForOrDie(identifierHash) == msg.sender, \\\"only registered contract\\\");\\n    _;\\n  }\\n\\n  modifier onlyRegisteredContracts(bytes32[] memory identifierHashes) {\\n    require(registry.isOneOf(identifierHashes, msg.sender), \\\"only registered contracts\\\");\\n    _;\\n  }\\n\\n  /**\\n   * @notice Updates the address pointing to a Registry contract.\\n   * @param registryAddress The address of a registry contract for routing to other contracts.\\n   */\\n  function setRegistry(address registryAddress) public onlyOwner {\\n    require(registryAddress != address(0), \\\"Cannot register the null address\\\");\\n    registry = IRegistry(registryAddress);\\n    emit RegistrySet(registryAddress);\\n  }\\n\\n  function getAccounts() internal view returns (IAccounts) {\\n    return IAccounts(registry.getAddressForOrDie(ACCOUNTS_REGISTRY_ID));\\n  }\\n\\n  function getAttestations() internal view returns (IAttestations) {\\n    return IAttestations(registry.getAddressForOrDie(ATTESTATIONS_REGISTRY_ID));\\n  }\\n\\n  function getElection() internal view returns (IElection) {\\n    return IElection(registry.getAddressForOrDie(ELECTION_REGISTRY_ID));\\n  }\\n\\n  function getExchange() internal view returns (IExchange) {\\n    return IExchange(registry.getAddressForOrDie(EXCHANGE_REGISTRY_ID));\\n  }\\n\\n  function getFeeCurrencyWhitelistRegistry() internal view returns (IFeeCurrencyWhitelist) {\\n    return IFeeCurrencyWhitelist(registry.getAddressForOrDie(FEE_CURRENCY_WHITELIST_REGISTRY_ID));\\n  }\\n\\n  function getFreezer() internal view returns (IFreezer) {\\n    return IFreezer(registry.getAddressForOrDie(FREEZER_REGISTRY_ID));\\n  }\\n\\n  function getGoldToken() internal view returns (IERC20) {\\n    return IERC20(registry.getAddressForOrDie(GOLD_TOKEN_REGISTRY_ID));\\n  }\\n  function getCeloToken() internal view returns (IERC20) {\\n    return IERC20(registry.getAddressForOrDie(CELO_TOKEN_REGISTRY_ID));\\n  }\\n\\n  function getGovernance() internal view returns (IGovernance) {\\n    return IGovernance(registry.getAddressForOrDie(GOVERNANCE_REGISTRY_ID));\\n  }\\n\\n  function getLockedGold() internal view returns (ILockedGold) {\\n    return ILockedGold(registry.getAddressForOrDie(LOCKED_GOLD_REGISTRY_ID));\\n  }\\n  function getLockedCelo() internal view returns (ILockedCelo) {\\n    return ILockedCelo(registry.getAddressForOrDie(LOCKED_CELO_REGISTRY_ID));\\n  }\\n\\n  function getRandom() internal view returns (IRandom) {\\n    return IRandom(registry.getAddressForOrDie(RANDOM_REGISTRY_ID));\\n  }\\n\\n  function getReserve() internal view returns (IReserve) {\\n    return IReserve(registry.getAddressForOrDie(RESERVE_REGISTRY_ID));\\n  }\\n\\n  function getSortedOracles() internal view returns (ISortedOracles) {\\n    return ISortedOracles(registry.getAddressForOrDie(SORTED_ORACLES_REGISTRY_ID));\\n  }\\n\\n  function getStableToken() internal view returns (IStableToken) {\\n    return IStableToken(registry.getAddressForOrDie(STABLE_TOKEN_REGISTRY_ID));\\n  }\\n\\n  function getValidators() internal view returns (IValidators) {\\n    return IValidators(registry.getAddressForOrDie(VALIDATORS_REGISTRY_ID));\\n  }\\n\\n  function getCeloUnreleasedTreasury() internal view returns (ICeloUnreleasedTreasury) {\\n    return\\n      ICeloUnreleasedTreasury(registry.getAddressForOrDie(CELO_UNRELEASED_TREASURY_REGISTRY_ID));\\n  }\\n\\n  function getEpochRewards() internal view returns (IEpochRewards) {\\n    return IEpochRewards(registry.getAddressForOrDie(EPOCH_REWARDS_REGISTRY_ID));\\n  }\\n\\n  function getEpochManager() internal view returns (IEpochManager) {\\n    return IEpochManager(registry.getAddressForOrDie(EPOCH_MANAGER_REGISTRY_ID));\\n  }\\n}\\n\",\"keccak256\":\"0x222b1e45ff35146f456cde2a44ab2990aaa303c8df848934a78f87af2776ccda\"},\"project:/contracts/common/interfaces/IAccounts.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IAccounts {\\n  function setAccountDataEncryptionKey(bytes calldata) external;\\n  function setMetadataURL(string calldata) external;\\n  function setName(string calldata) external;\\n  function setWalletAddress(address, uint8, bytes32, bytes32) external;\\n  function setAccount(string calldata, bytes calldata, address, uint8, bytes32, bytes32) external;\\n\\n  function authorizeVoteSigner(address, uint8, bytes32, bytes32) external;\\n  function authorizeValidatorSigner(address, uint8, bytes32, bytes32) external;\\n  function authorizeValidatorSignerWithPublicKey(\\n    address,\\n    uint8,\\n    bytes32,\\n    bytes32,\\n    bytes calldata\\n  ) external;\\n  function authorizeValidatorSignerWithKeys(\\n    address,\\n    uint8,\\n    bytes32,\\n    bytes32,\\n    bytes calldata,\\n    bytes calldata,\\n    bytes calldata\\n  ) external;\\n  function authorizeAttestationSigner(address, uint8, bytes32, bytes32) external;\\n  function setEip712DomainSeparator() external;\\n  function createAccount() external returns (bool);\\n\\n  function setPaymentDelegation(address, uint256) external;\\n\\n  function isAccount(address) external view returns (bool);\\n  function voteSignerToAccount(address) external view returns (address);\\n  function validatorSignerToAccount(address) external view returns (address);\\n  function attestationSignerToAccount(address) external view returns (address);\\n  function signerToAccount(address) external view returns (address);\\n  function getAttestationSigner(address) external view returns (address);\\n  function getValidatorSigner(address) external view returns (address);\\n  function getVoteSigner(address) external view returns (address);\\n  function hasAuthorizedVoteSigner(address) external view returns (bool);\\n  function hasAuthorizedValidatorSigner(address) external view returns (bool);\\n  function hasAuthorizedAttestationSigner(address) external view returns (bool);\\n\\n  function batchGetMetadataURL(\\n    address[] calldata\\n  ) external view returns (uint256[] memory, bytes memory);\\n\\n  function getDataEncryptionKey(address) external view returns (bytes memory);\\n  function getWalletAddress(address) external view returns (address);\\n  function getMetadataURL(address) external view returns (string memory);\\n\\n  function getName(address) external view returns (string memory);\\n\\n  function getPaymentDelegation(address) external view returns (address, uint256);\\n  function isSigner(address, address, bytes32) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xd316739cfeeed50b89bd45a4596abf71fac174f10c2a24dbf352a53b2bab2dc1\"},\"project:/contracts/common/interfaces/ICeloUnreleasedTreasury.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ICeloUnreleasedTreasury {\\n  /**\\n   * @notice Releases the Celo to the specified address.\\n   * @param to The address to release the amount to.\\n   * @param amount The amount to release.\\n   */\\n  function release(address to, uint256 amount) external;\\n\\n  function getRemainingBalanceToRelease() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x41f4cda8fd14ba24261d9e6ef9c2f62ac15432ac78107e74045d2a880b50df82\"},\"project:/contracts/common/interfaces/ICeloVersionedContract.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ICeloVersionedContract {\\n  /**\\n   * @notice Returns the storage, major, minor, and patch version of the contract.\\n   * @return Storage version of the contract.\\n   * @return Major version of the contract.\\n   * @return Minor version of the contract.\\n   * @return Patch version of the contract.\\n   */\\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256);\\n}\\n\",\"keccak256\":\"0x3ce622e646f0bd7cce110045bf6cde1fd84242e9c8ee73a27e56956f0b1fb128\"},\"project:/contracts/common/interfaces/IEpochManager.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IEpochManager {\\n  function initializeSystem(\\n    uint256 firstEpochNumber,\\n    uint256 firstEpochBlock,\\n    address[] calldata firstElected\\n  ) external;\\n  function startNextEpochProcess() external;\\n  function finishNextEpochProcess(\\n    address[] calldata groups,\\n    address[] calldata lessers,\\n    address[] calldata greaters\\n  ) external;\\n  function setToProcessGroups() external;\\n  function processGroup(address group, address lesser, address greater) external;\\n  function sendValidatorPayment(address) external;\\n  function getCurrentEpoch() external view returns (uint256, uint256, uint256, uint256);\\n  function getEpochByNumber(\\n    uint256 epochNumber\\n  ) external view returns (uint256, uint256, uint256, uint256);\\n  function getEpochByBlockNumber(\\n    uint256 blockNumber\\n  ) external view returns (uint256, uint256, uint256, uint256);\\n  function getEpochNumberOfBlock(uint256) external view returns (uint256);\\n  function getCurrentEpochNumber() external view returns (uint256);\\n  function numberOfElectedInCurrentSet() external view returns (uint256);\\n  function getElectedAccounts() external view returns (address[] memory);\\n  function getElectedAccountByIndex(uint256 index) external view returns (address);\\n  function getElectedSigners() external view returns (address[] memory);\\n  function getElectedSignerByIndex(uint256 index) external view returns (address);\\n  function epochDuration() external view returns (uint256);\\n  function firstKnownEpoch() external view returns (uint256);\\n  function getEpochProcessingState()\\n    external\\n    view\\n    returns (uint256, uint256, uint256, uint256, uint256);\\n  function systemAlreadyInitialized() external view returns (bool);\\n  function isBlocked() external view returns (bool);\\n  function isTimeForNextEpoch() external view returns (bool);\\n  function isOnEpochProcess() external view returns (bool);\\n  function getFirstBlockAtEpoch(uint256) external view returns (uint256);\\n  function getLastBlockAtEpoch(uint256) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xc019958b7b5281fbfcd3c31b49d6ab29192ab4138de175a404bf0c17cccf9350\"},\"project:/contracts/common/interfaces/IFeeCurrencyWhitelist.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IFeeCurrencyWhitelist {\\n  function initialize() external;\\n  function addToken(address) external;\\n  function getWhitelist() external view returns (address[] memory);\\n}\\n\",\"keccak256\":\"0xa732071c691bf1ba84774ac5301fa5b18e1ecf6ea6f6210ecac00f5130341621\"},\"project:/contracts/common/interfaces/IFreezer.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IFreezer {\\n  function freeze(address target) external;\\n  function unfreeze(address target) external;\\n  function isFrozen(address) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x31cee67b005413c61d6aa90d2899e6a37257cd4c026d8422249b397131a10755\"},\"project:/contracts/common/interfaces/IRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IRegistry {\\n  function setAddressFor(string calldata, address) external;\\n  function getAddressForOrDie(bytes32) external view returns (address);\\n  function getAddressFor(bytes32) external view returns (address);\\n  function getAddressForStringOrDie(string calldata identifier) external view returns (address);\\n  function getAddressForString(string calldata identifier) external view returns (address);\\n  function isOneOf(bytes32[] calldata, address) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x7737cbda6f3519bf6a4108e07b2c991a655e8731a4c040a3681e9629cfc4b52d\"},\"project:/contracts/governance/DoubleSigningSlasher.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\nimport \\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\\";\\nimport \\\"../common/interfaces/ICeloVersionedContract.sol\\\";\\n\\nimport \\\"./SlasherUtil.sol\\\";\\nimport \\\"../../contracts-0.8/common/IsL2Check.sol\\\";\\n\\ncontract DoubleSigningSlasher is ICeloVersionedContract, SlasherUtil {\\n  using SafeMath for uint256;\\n\\n  // For each signer address, check if a block header has already been slashed\\n  mapping(address => mapping(bytes32 => bool)) isSlashed;\\n\\n  event SlashingIncentivesSet(uint256 penalty, uint256 reward);\\n  event DoubleSigningSlashPerformed(address indexed validator, uint256 indexed blockNumber);\\n\\n  /**\\n   * @notice Sets initialized == true on implementation contracts\\n   * @param test Set to true to skip implementation initialization\\n   */\\n  constructor(bool test) public SlasherUtil(test) {}\\n\\n  /**\\n   * @notice Used in place of the constructor to allow the contract to be upgradable via proxy.\\n   * @param registryAddress The address of the registry core smart contract.\\n   * @param _penalty Penalty for the slashed signer.\\n   * @param _reward Reward that the observer gets.\\n   */\\n  function initialize(\\n    address registryAddress,\\n    uint256 _penalty,\\n    uint256 _reward\\n  ) external initializer {\\n    _transferOwnership(msg.sender);\\n    setRegistry(registryAddress);\\n    setSlashingIncentives(_penalty, _reward);\\n  }\\n\\n  /**\\n   * @notice Returns the storage, major, minor, and patch version of the contract.\\n   * @return Storage version of the contract.\\n   * @return Major version of the contract.\\n   * @return Minor version of the contract.\\n   * @return Patch version of the contract.\\n   */\\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256) {\\n    return (1, 1, 1, 1);\\n  }\\n\\n  /**\\n   * @notice Requires that `eval` returns true and that this evidence has not\\n   * already been used to slash `signer`.\\n   * If so, fetches the `account` associated with `signer` and the group that\\n   * `signer` was a member of during the corresponding epoch.\\n   * Then, calls `LockedGold.slash` on both the validator and group accounts.\\n   * Calls `Validators.removeSlashedMember` to remove the validator from its\\n   * current group if it is a member of one.\\n   * Finally, stores that hash(signer, blockNumber) has been slashed.\\n   * @param signer The signer to be slashed.\\n   * @param index Validator index at the block.\\n   * @param headerA First double signed block header.\\n   * @param headerB Second double signed block header.\\n   * @param groupMembershipHistoryIndex Group membership index from where the group should be found.\\n   * @param validatorElectionLessers Lesser pointers for validator slashing.\\n   * @param validatorElectionGreaters Greater pointers for validator slashing.\\n   * @param validatorElectionIndices Vote indices for validator slashing.\\n   * @param groupElectionLessers Lesser pointers for group slashing.\\n   * @param groupElectionGreaters Greater pointers for group slashing.\\n   * @param groupElectionIndices Vote indices for group slashing.\\n   */\\n  function slash(\\n    address signer,\\n    uint256 index,\\n    bytes memory headerA,\\n    bytes memory headerB,\\n    uint256 groupMembershipHistoryIndex,\\n    address[] memory validatorElectionLessers,\\n    address[] memory validatorElectionGreaters,\\n    uint256[] memory validatorElectionIndices,\\n    address[] memory groupElectionLessers,\\n    address[] memory groupElectionGreaters,\\n    uint256[] memory groupElectionIndices\\n  ) public onlyL1 {\\n    checkIfAlreadySlashed(signer, headerA);\\n    checkIfAlreadySlashed(signer, headerB);\\n    uint256 blockNumber = checkForDoubleSigning(signer, index, headerA, headerB);\\n    address validator = getAccounts().signerToAccount(signer);\\n    performSlashing(\\n      validator,\\n      msg.sender,\\n      blockNumber,\\n      groupMembershipHistoryIndex,\\n      validatorElectionLessers,\\n      validatorElectionGreaters,\\n      validatorElectionIndices,\\n      groupElectionLessers,\\n      groupElectionGreaters,\\n      groupElectionIndices\\n    );\\n    emit DoubleSigningSlashPerformed(validator, blockNumber);\\n  }\\n\\n  /**\\n   * @notice Given two RLP encoded blocks, calls into precompiles to require that\\n   * the two block hashes are different, have the same height, have a\\n   * quorum of signatures, and that `signer` was part of the quorum.\\n   * @param signer The signer to be slashed.\\n   * @param index Validator index at the block.\\n   * @param headerA First double signed block header.\\n   * @param headerB Second double signed block header.\\n   * @return Block number where double signing occured. Throws if no double signing is detected.\\n   */\\n  function checkForDoubleSigning(\\n    address signer,\\n    uint256 index,\\n    bytes memory headerA,\\n    bytes memory headerB\\n  ) public view onlyL1 returns (uint256) {\\n    require(hashHeader(headerA) != hashHeader(headerB), \\\"Block hashes have to be different\\\");\\n    uint256 blockNumber = getBlockNumberFromHeader(headerA);\\n    require(\\n      blockNumber == getBlockNumberFromHeader(headerB),\\n      \\\"Block headers are from different height\\\"\\n    );\\n    require(index < numberValidatorsInSet(blockNumber), \\\"Bad validator index\\\");\\n    require(\\n      signer == validatorSignerAddressFromSet(index, blockNumber),\\n      \\\"Wasn't a signer with given index\\\"\\n    );\\n    uint256 mapA = uint256(getVerifiedSealBitmapFromHeader(headerA));\\n    uint256 mapB = uint256(getVerifiedSealBitmapFromHeader(headerB));\\n    require(mapA & (1 << index) != 0, \\\"Didn't sign first block\\\");\\n    require(mapB & (1 << index) != 0, \\\"Didn't sign second block\\\");\\n    require(\\n      countSetBits(mapA) >= minQuorumSize(blockNumber),\\n      \\\"Not enough signers in the first block\\\"\\n    );\\n    require(\\n      countSetBits(mapB) >= minQuorumSize(blockNumber),\\n      \\\"Not enough signers in the second block\\\"\\n    );\\n    return blockNumber;\\n  }\\n\\n  function checkIfAlreadySlashed(address signer, bytes memory header) internal {\\n    bytes32 bhash = hashHeader(header);\\n    require(!isSlashed[signer][bhash], \\\"Already slashed\\\");\\n    isSlashed[signer][bhash] = true;\\n  }\\n\\n  /**\\n   * @notice Counts the number of set bits (Hamming weight).\\n   * @param v Bitmap.\\n   * @return Number of set bits.\\n   */\\n  function countSetBits(uint256 v) internal pure returns (uint256) {\\n    uint256 res = 0;\\n    uint256 acc = v;\\n    for (uint256 i = 0; i < 256; i = i.add(1)) {\\n      if (acc & 1 == 1) res = res.add(1);\\n      acc = acc >> 1;\\n    }\\n    return res;\\n  }\\n}\\n\",\"keccak256\":\"0xb9fb2632f04b491349799860fa2f6ed6312cbd6dbd3ba54afc6a2e85f0e62055\"},\"project:/contracts/governance/SlasherUtil.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\nimport \\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\\";\\nimport \\\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\\";\\n\\nimport \\\"../common/Initializable.sol\\\";\\nimport \\\"../common/UsingRegistry.sol\\\";\\nimport \\\"../common/UsingPrecompiles.sol\\\";\\nimport \\\"../common/interfaces/ICeloVersionedContract.sol\\\";\\n\\ncontract SlasherUtil is Ownable, Initializable, UsingRegistry, UsingPrecompiles {\\n  using SafeMath for uint256;\\n\\n  struct SlashingIncentives {\\n    // Value of LockedGold to slash from the account.\\n    uint256 penalty;\\n    // Value of LockedGold to send to the observer.\\n    uint256 reward;\\n  }\\n\\n  SlashingIncentives public slashingIncentives;\\n\\n  event SlashingIncentivesSet(uint256 penalty, uint256 reward);\\n\\n  /**\\n   * @notice Sets initialized == true on implementation contracts\\n   * @param test Set to true to skip implementation initialization\\n   */\\n  constructor(bool test) public Initializable(test) {}\\n\\n  /**\\n   * @notice Sets slashing incentives.\\n   * @param penalty Penalty for the slashed signer.\\n   * @param reward Reward that the observer gets.\\n   */\\n  function setSlashingIncentives(uint256 penalty, uint256 reward) public onlyL1 onlyOwner {\\n    require(penalty > reward, \\\"Penalty has to be larger than reward\\\");\\n    slashingIncentives.penalty = penalty;\\n    slashingIncentives.reward = reward;\\n    emit SlashingIncentivesSet(penalty, reward);\\n  }\\n\\n  /**\\n   * @notice Returns the group to be slashed.\\n   * @param validator Validator that was slashed.\\n   * @param blockNumber Block number associated with slashing.\\n   * @param groupMembershipHistoryIndex Index used for history lookup.\\n   * @return Group to be slashed.\\n   */\\n  function groupMembershipAtBlock(\\n    address validator,\\n    uint256 blockNumber,\\n    uint256 groupMembershipHistoryIndex\\n  ) public view returns (address) {\\n    uint256 epoch = getEpochNumberOfBlock(blockNumber);\\n    require(epoch != 0, \\\"Cannot slash on epoch 0\\\");\\n    // Use `epoch-1` because the elections were on that epoch\\n    return\\n      getValidators().groupMembershipInEpoch(validator, epoch.sub(1), groupMembershipHistoryIndex);\\n  }\\n\\n  function performSlashing(\\n    address validator,\\n    address recipient,\\n    uint256 startBlock,\\n    uint256 groupMembershipHistoryIndex,\\n    address[] memory validatorElectionLessers,\\n    address[] memory validatorElectionGreaters,\\n    uint256[] memory validatorElectionIndices,\\n    address[] memory groupElectionLessers,\\n    address[] memory groupElectionGreaters,\\n    uint256[] memory groupElectionIndices\\n  ) internal {\\n    ILockedGold lockedGold = getLockedGold();\\n    lockedGold.slash(\\n      validator,\\n      slashingIncentives.penalty,\\n      recipient,\\n      slashingIncentives.reward,\\n      validatorElectionLessers,\\n      validatorElectionGreaters,\\n      validatorElectionIndices\\n    );\\n    address group = groupMembershipAtBlock(validator, startBlock, groupMembershipHistoryIndex);\\n    assert(group != address(0));\\n    lockedGold.slash(\\n      group,\\n      slashingIncentives.penalty,\\n      recipient,\\n      slashingIncentives.reward,\\n      groupElectionLessers,\\n      groupElectionGreaters,\\n      groupElectionIndices\\n    );\\n    IValidators validators = getValidators();\\n    validators.forceDeaffiliateIfValidator(validator);\\n    validators.halveSlashingMultiplier(group);\\n  }\\n}\\n\",\"keccak256\":\"0x56ae0c2ffab933b20a3c92fbcb82eafee843926f461b100a9959506ef3c079a0\"},\"project:/contracts/governance/interfaces/IElection.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IElection {\\n  function vote(address, uint256, address, address) external returns (bool);\\n  function activate(address) external returns (bool);\\n  function revokeActive(address, uint256, address, address, uint256) external returns (bool);\\n  function revokeAllActive(address, address, address, uint256) external returns (bool);\\n  function revokePending(address, uint256, address, address, uint256) external returns (bool);\\n  function markGroupIneligible(address) external;\\n  function markGroupEligible(address, address, address) external;\\n  function allowedToVoteOverMaxNumberOfGroups(address) external returns (bool);\\n  function forceDecrementVotes(\\n    address,\\n    uint256,\\n    address[] calldata,\\n    address[] calldata,\\n    uint256[] calldata\\n  ) external returns (uint256);\\n  function setAllowedToVoteOverMaxNumberOfGroups(bool flag) external;\\n\\n  // only owner\\n  function setElectableValidators(uint256, uint256) external returns (bool);\\n  function setMaxNumGroupsVotedFor(uint256) external returns (bool);\\n  function setElectabilityThreshold(uint256) external returns (bool);\\n\\n  // only VM\\n  function distributeEpochRewards(address, uint256, address, address) external;\\n\\n  // view functions\\n  function electValidatorSigners() external view returns (address[] memory);\\n  function electValidatorAccounts() external view returns (address[] memory);\\n  function electNValidatorSigners(uint256, uint256) external view returns (address[] memory);\\n  function electNValidatorAccounts(uint256, uint256) external view returns (address[] memory);\\n  function getElectableValidators() external view returns (uint256, uint256);\\n  function getElectabilityThreshold() external view returns (uint256);\\n  function getNumVotesReceivable(address) external view returns (uint256);\\n  function getTotalVotes() external view returns (uint256);\\n  function getActiveVotes() external view returns (uint256);\\n  function getTotalVotesByAccount(address) external view returns (uint256);\\n  function getPendingVotesForGroupByAccount(address, address) external view returns (uint256);\\n  function getActiveVotesForGroupByAccount(address, address) external view returns (uint256);\\n  function getTotalVotesForGroupByAccount(address, address) external view returns (uint256);\\n  function getActiveVoteUnitsForGroupByAccount(address, address) external view returns (uint256);\\n  function getTotalVotesForGroup(address) external view returns (uint256);\\n  function getActiveVotesForGroup(address) external view returns (uint256);\\n  function getPendingVotesForGroup(address) external view returns (uint256);\\n  function getGroupEligibility(address) external view returns (bool);\\n  function getGroupEpochRewards(\\n    address,\\n    uint256,\\n    uint256[] calldata\\n  ) external view returns (uint256);\\n  function getGroupEpochRewardsBasedOnScore(\\n    address group,\\n    uint256 totalEpochRewards,\\n    uint256 groupScore\\n  ) external view returns (uint256);\\n  function getGroupsVotedForByAccount(address) external view returns (address[] memory);\\n  function getEligibleValidatorGroups() external view returns (address[] memory);\\n  function getTotalVotesForEligibleValidatorGroups()\\n    external\\n    view\\n    returns (address[] memory, uint256[] memory);\\n  function getCurrentValidatorSigners() external view returns (address[] memory);\\n  function canReceiveVotes(address, uint256) external view returns (bool);\\n  function hasActivatablePendingVotes(address, address) external view returns (bool);\\n  function validatorSignerAddressFromCurrentSet(uint256 index) external view returns (address);\\n  function numberValidatorsInCurrentSet() external view returns (uint256);\\n  function owner() external view returns (address);\\n}\\n\",\"keccak256\":\"0x598e1f22422d01cd2feccff34c5c276c388209058d7fab3d770e25fa8dec9e59\"},\"project:/contracts/governance/interfaces/IEpochRewards.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IEpochRewards {\\n  function updateTargetVotingYield() external;\\n  function isReserveLow() external view returns (bool);\\n  function calculateTargetEpochRewards() external view returns (uint256, uint256, uint256, uint256);\\n  function getTargetVotingYieldParameters() external view returns (uint256, uint256, uint256);\\n  function getRewardsMultiplierParameters() external view returns (uint256, uint256, uint256);\\n  function getCommunityRewardFraction() external view returns (uint256);\\n  function getCarbonOffsettingFraction() external view returns (uint256);\\n  function getTargetVotingGoldFraction() external view returns (uint256);\\n  function getRewardsMultiplier() external view returns (uint256);\\n  function carbonOffsettingPartner() external view returns (address);\\n}\\n\",\"keccak256\":\"0xfa534a0dc188ffd55595c6edb28b2e4ac9f036022a644b3a61e6a12097e14788\"},\"project:/contracts/governance/interfaces/IGovernance.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IGovernance {\\n  function removeVotesWhenRevokingDelegatedVotes(\\n    address account,\\n    uint256 maxAmountAllowed\\n  ) external;\\n  function votePartially(\\n    uint256 proposalId,\\n    uint256 index,\\n    uint256 yesVotes,\\n    uint256 noVotes,\\n    uint256 abstainVotes\\n  ) external returns (bool);\\n\\n  function setConstitution(address destination, bytes4 functionId, uint256 threshold) external;\\n\\n  function isVoting(address) external view returns (bool);\\n  function getAmountOfGoldUsedForVoting(address account) external view returns (uint256);\\n\\n  function getProposal(\\n    uint256 proposalId\\n  ) external view returns (address, uint256, uint256, uint256, string memory, uint256, bool);\\n\\n  function getReferendumStageDuration() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x8780295e0ecffc9870c59ed17fd4f50902117227157dd060db19d2ebbaaf3d2b\"},\"project:/contracts/governance/interfaces/ILockedCelo.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ILockedCelo {\\n  function lock() external payable;\\n  function incrementNonvotingAccountBalance(address, uint256) external;\\n  function decrementNonvotingAccountBalance(address, uint256) external;\\n\\n  function unlock(uint256) external;\\n  function relock(uint256, uint256) external;\\n  function withdraw(uint256) external;\\n  function slash(\\n    address account,\\n    uint256 penalty,\\n    address reporter,\\n    uint256 reward,\\n    address[] calldata lessers,\\n    address[] calldata greaters,\\n    uint256[] calldata indices\\n  ) external;\\n  function addSlasher(string calldata slasherIdentifier) external;\\n\\n  function getAccountNonvotingLockedGold(address account) external view returns (uint256);\\n  function getAccountTotalLockedCelo(address) external view returns (uint256);\\n  function getTotalLockedCelo() external view returns (uint256);\\n  function getPendingWithdrawals(\\n    address\\n  ) external view returns (uint256[] memory, uint256[] memory);\\n  function getPendingWithdrawal(\\n    address account,\\n    uint256 index\\n  ) external view returns (uint256, uint256);\\n  function getTotalPendingWithdrawals(address) external view returns (uint256);\\n  function isSlasher(address) external view returns (bool);\\n\\n  function getAccountTotalDelegatedFraction(address account) external view returns (uint256);\\n\\n  function getAccountTotalGovernanceVotingPower(address account) external view returns (uint256);\\n  function unlockingPeriod() external view returns (uint256);\\n  function getAccountNonvotingLockedCelo(address account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x41cd5970ccc5612c9cd9cdf89a299a3cff0d8984d0b16ffad14da7670424920b\"},\"project:/contracts/governance/interfaces/ILockedGold.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ILockedGold {\\n  function lock() external payable;\\n  function incrementNonvotingAccountBalance(address, uint256) external;\\n  function decrementNonvotingAccountBalance(address, uint256) external;\\n\\n  function unlock(uint256) external;\\n  function relock(uint256, uint256) external;\\n  function withdraw(uint256) external;\\n  function slash(\\n    address account,\\n    uint256 penalty,\\n    address reporter,\\n    uint256 reward,\\n    address[] calldata lessers,\\n    address[] calldata greaters,\\n    uint256[] calldata indices\\n  ) external;\\n  function addSlasher(string calldata slasherIdentifier) external;\\n\\n  function getAccountTotalLockedGold(address) external view returns (uint256);\\n  function getTotalLockedGold() external view returns (uint256);\\n  function getPendingWithdrawals(\\n    address\\n  ) external view returns (uint256[] memory, uint256[] memory);\\n  function getPendingWithdrawal(\\n    address account,\\n    uint256 index\\n  ) external view returns (uint256, uint256);\\n  function getTotalPendingWithdrawals(address) external view returns (uint256);\\n  function isSlasher(address) external view returns (bool);\\n\\n  function getAccountTotalDelegatedFraction(address account) external view returns (uint256);\\n\\n  function getAccountTotalGovernanceVotingPower(address account) external view returns (uint256);\\n  function unlockingPeriod() external view returns (uint256);\\n  function getAccountNonvotingLockedGold(address account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x4ab7ee32f3cbac55e91ef1087ba3e8bbdd784833faa2b9b7e1d66ff662800227\"},\"project:/contracts/governance/interfaces/IValidators.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IValidators {\\n  function registerValidator(\\n    bytes calldata,\\n    bytes calldata,\\n    bytes calldata\\n  ) external returns (bool);\\n  function registerValidatorNoBls(bytes calldata ecdsaPublicKey) external returns (bool);\\n  function deregisterValidator(uint256) external returns (bool);\\n  function affiliate(address) external returns (bool);\\n  function deaffiliate() external returns (bool);\\n  function updateBlsPublicKey(bytes calldata, bytes calldata) external returns (bool);\\n  function registerValidatorGroup(uint256) external returns (bool);\\n  function deregisterValidatorGroup(uint256) external returns (bool);\\n  function addMember(address) external returns (bool);\\n  function addFirstMember(address, address, address) external returns (bool);\\n  function removeMember(address) external returns (bool);\\n  function reorderMember(address, address, address) external returns (bool);\\n  function updateCommission() external;\\n  function setNextCommissionUpdate(uint256) external;\\n  function resetSlashingMultiplier() external;\\n\\n  // only owner\\n  function setCommissionUpdateDelay(uint256) external;\\n  function setMaxGroupSize(uint256) external returns (bool);\\n  function setMembershipHistoryLength(uint256) external returns (bool);\\n  function setValidatorScoreParameters(uint256, uint256) external returns (bool);\\n  function setGroupLockedGoldRequirements(uint256, uint256) external returns (bool);\\n  function setValidatorLockedGoldRequirements(uint256, uint256) external returns (bool);\\n  function setSlashingMultiplierResetPeriod(uint256) external;\\n  function setDowntimeGracePeriod(uint256 value) external;\\n\\n  // only registered contract\\n  function updateEcdsaPublicKey(address, address, bytes calldata) external returns (bool);\\n  function updatePublicKeys(\\n    address,\\n    address,\\n    bytes calldata,\\n    bytes calldata,\\n    bytes calldata\\n  ) external returns (bool);\\n  function mintStableToEpochManager(uint256 amount) external;\\n\\n  // only VM\\n  function updateValidatorScoreFromSigner(address, uint256) external;\\n  function distributeEpochPaymentsFromSigner(address, uint256) external returns (uint256);\\n\\n  // only slasher\\n  function forceDeaffiliateIfValidator(address) external;\\n  function halveSlashingMultiplier(address) external;\\n\\n  // view functions\\n  function maxGroupSize() external view returns (uint256);\\n  function downtimeGracePeriod() external view returns (uint256);\\n  function getCommissionUpdateDelay() external view returns (uint256);\\n  function getValidatorScoreParameters() external view returns (uint256, uint256);\\n  function getMembershipHistory(\\n    address\\n  ) external view returns (uint256[] memory, address[] memory, uint256, uint256);\\n  function calculateEpochScore(uint256) external view returns (uint256);\\n  function calculateGroupEpochScore(uint256[] calldata) external view returns (uint256);\\n  function getAccountLockedGoldRequirement(address) external view returns (uint256);\\n  function meetsAccountLockedGoldRequirements(address) external view returns (bool);\\n  function getValidatorBlsPublicKeyFromSigner(address) external view returns (bytes memory);\\n  function getValidator(\\n    address account\\n  ) external view returns (bytes memory, bytes memory, address, uint256, address);\\n  function getValidatorsGroup(address account) external view returns (address affiliation);\\n  function getValidatorGroup(\\n    address\\n  )\\n    external\\n    view\\n    returns (address[] memory, uint256, uint256, uint256, uint256[] memory, uint256, uint256);\\n  function getGroupNumMembers(address) external view returns (uint256);\\n  function getTopGroupValidators(address, uint256) external view returns (address[] memory);\\n  function getTopGroupValidatorsAccounts(address, uint256) external view returns (address[] memory);\\n  function getGroupsNumMembers(\\n    address[] calldata accounts\\n  ) external view returns (uint256[] memory);\\n  function getNumRegisteredValidators() external view returns (uint256);\\n  function groupMembershipInEpoch(address, uint256, uint256) external view returns (address);\\n\\n  function getValidatorLockedGoldRequirements() external view returns (uint256, uint256);\\n  function getGroupLockedGoldRequirements() external view returns (uint256, uint256);\\n  function getRegisteredValidators() external view returns (address[] memory);\\n  function getRegisteredValidatorGroups() external view returns (address[] memory);\\n  function isValidatorGroup(address) external view returns (bool);\\n  function isValidator(address) external view returns (bool);\\n  function getValidatorGroupSlashingMultiplier(address) external view returns (uint256);\\n  function getMembershipInLastEpoch(address) external view returns (address);\\n  function getMembershipInLastEpochFromSigner(address) external view returns (address);\\n  function computeEpochReward(\\n    address account,\\n    uint256 score,\\n    uint256 maxPayment\\n  ) external view returns (uint256);\\n  function getMembershipHistoryLength() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x78a09c1b3e80fbb1a8fd907575a71e181d100a09d999ea5c032140efbeeeb90f\"},\"project:/contracts/identity/interfaces/IAttestations.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IAttestations {\\n  function revoke(bytes32, uint256) external;\\n  function withdraw(address) external;\\n\\n  // only owner\\n  function setAttestationRequestFee(address, uint256) external;\\n  function setAttestationExpiryBlocks(uint256) external;\\n  function setSelectIssuersWaitBlocks(uint256) external;\\n  function setMaxAttestations(uint256) external;\\n\\n  // view functions\\n  function getUnselectedRequest(bytes32, address) external view returns (uint32, uint32, address);\\n  function getAttestationIssuers(bytes32, address) external view returns (address[] memory);\\n  function getAttestationStats(bytes32, address) external view returns (uint32, uint32);\\n  function batchGetAttestationStats(\\n    bytes32[] calldata\\n  ) external view returns (uint256[] memory, address[] memory, uint64[] memory, uint64[] memory);\\n  function getAttestationState(\\n    bytes32,\\n    address,\\n    address\\n  ) external view returns (uint8, uint32, address);\\n  function getCompletableAttestations(\\n    bytes32,\\n    address\\n  ) external view returns (uint32[] memory, address[] memory, uint256[] memory, bytes memory);\\n  function getAttestationRequestFee(address) external view returns (uint256);\\n  function getMaxAttestations() external view returns (uint256);\\n  function validateAttestationCode(\\n    bytes32,\\n    address,\\n    uint8,\\n    bytes32,\\n    bytes32\\n  ) external view returns (address);\\n  function lookupAccountsForIdentifier(bytes32) external view returns (address[] memory);\\n  function requireNAttestationsRequested(bytes32, address, uint32) external view;\\n}\\n\",\"keccak256\":\"0x6afd5f303e153798b15448e0206ed5e645b6e2f2e46762cb17c5b665e256cdb2\"},\"project:/contracts/identity/interfaces/IRandom.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IRandom {\\n  function revealAndCommit(bytes32, bytes32, address) external;\\n  function randomnessBlockRetentionWindow() external view returns (uint256);\\n  function random() external view returns (bytes32);\\n  function getBlockRandomness(uint256) external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xdb545530be6397d23692e4465f4514cf3c87c1d4f553323964694818c375c08d\"},\"project:/contracts/stability/interfaces/ISortedOracles.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ISortedOracles {\\n  function addOracle(address, address) external;\\n  function removeOracle(address, address, uint256) external;\\n  function report(address, uint256, address, address) external;\\n  function removeExpiredReports(address, uint256) external;\\n  function isOldestReportExpired(address token) external view returns (bool, address);\\n  function numRates(address) external view returns (uint256);\\n  function medianRate(address) external view returns (uint256, uint256);\\n  function numTimestamps(address) external view returns (uint256);\\n  function medianTimestamp(address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xc9d69b608b060effe4a0b246e7fad096b524b848aa51d8f4eccad36c1aa0479d\"},\"project:/lib/mento-core/contracts/interfaces/IExchange.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\ninterface IExchange {\\n    function buy(\\n        uint256,\\n        uint256,\\n        bool\\n    ) external returns (uint256);\\n\\n    function sell(\\n        uint256,\\n        uint256,\\n        bool\\n    ) external returns (uint256);\\n\\n    function exchange(\\n        uint256,\\n        uint256,\\n        bool\\n    ) external returns (uint256);\\n\\n    function setUpdateFrequency(uint256) external;\\n\\n    function getBuyTokenAmount(uint256, bool) external view returns (uint256);\\n\\n    function getSellTokenAmount(uint256, bool) external view returns (uint256);\\n\\n    function getBuyAndSellBuckets(bool) external view returns (uint256, uint256);\\n}\\n\",\"keccak256\":\"0x320488022d1066ac81797b9e7a3dc303d1c8e9a48597972d4686e00f9554ade9\"},\"project:/lib/mento-core/contracts/interfaces/IReserve.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\ninterface IReserve {\\n    function setTobinTaxStalenessThreshold(uint256) external;\\n\\n    function addToken(address) external returns (bool);\\n\\n    function removeToken(address, uint256) external returns (bool);\\n\\n    function transferGold(address payable, uint256) external returns (bool);\\n\\n    function transferExchangeGold(address payable, uint256) external returns (bool);\\n\\n    function getReserveGoldBalance() external view returns (uint256);\\n\\n    function getUnfrozenReserveGoldBalance() external view returns (uint256);\\n\\n    function getOrComputeTobinTax() external returns (uint256, uint256);\\n\\n    function getTokens() external view returns (address[] memory);\\n\\n    function getReserveRatio() external view returns (uint256);\\n\\n    function addExchangeSpender(address) external;\\n\\n    function removeExchangeSpender(address, uint256) external;\\n\\n    function addSpender(address) external;\\n\\n    function removeSpender(address) external;\\n}\\n\",\"keccak256\":\"0x9162b458dc21fe7e6cfc5d4722b3db3001b1c54ecdcefa703ff9d902084150b7\"},\"project:/lib/mento-core/contracts/interfaces/IStableToken.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\n/**\\n * @title This interface describes the functions specific to Celo Stable Tokens, and in the\\n * absence of interface inheritance is intended as a companion to IERC20.sol and ICeloToken.sol.\\n */\\ninterface IStableToken {\\n    function mint(address, uint256) external returns (bool);\\n\\n    function burn(uint256) external returns (bool);\\n\\n    function setInflationParameters(uint256, uint256) external;\\n\\n    function valueToUnits(uint256) external view returns (uint256);\\n\\n    function unitsToValue(uint256) external view returns (uint256);\\n\\n    function getInflationParameters()\\n        external\\n        view\\n        returns (\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256\\n        );\\n\\n    // NOTE: duplicated with IERC20.sol, remove once interface inheritance is supported.\\n    function balanceOf(address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xcb6440c9b161b26a5b062e6c74d6fd1ed9736f292161c757406a9c39e942d20a\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620044c3380380620044c3833981810160405260208110156200003757600080fd5b8101908080519060200190929190505050808060006200005c6200012560201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350806200011c576001600060146101000a81548160ff0219169083151502179055505b5050506200012d565b600033905090565b614386806200013d6000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c806387ee8a0f116101045780639b2b592f116100a2578063e50e652d11610071578063e50e652d146110e2578063ec68307214611124578063f2fde38b1461119f578063fae8db0a146111e3576101cf565b80639b2b592f14611006578063a91ee0dc14611048578063bd0d99791461108c578063df4da461146110c4576101cf565b80638cc26910116100de5780638cc2691014610a7d5780638da5cb5b14610f7c5780638f32d59b14610fc65780639a7b3be714610fe8576101cf565b806387ee8a0f146108f857806388498aaf146109165780638a883626146109ae576101cf565b806354255be011610171578063715018a61161014b578063715018a61461082e5780637385e5da146108385780637a1ac61e146108565780637b103999146108ae576101cf565b806354255be0146106b45780635d180adb146106e757806367960e911461075f576101cf565b8063158ef93e116101ad578063158ef93e146103f757806323f0ab65146104195780633b1eb4bf146105a35780634b2c2f44146105e5576101cf565b806309f99447146101d45780630a05cd8414610364578063123633ea14610389575b600080fd5b61034e600480360360808110156101ea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561023157600080fd5b82018360208201111561024357600080fd5b8035906020019184600183028401116401000000008311171561026557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156102c857600080fd5b8201836020820111156102da57600080fd5b803590602001918460018302840111640100000000831117156102fc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611225565b6040518082815260200191505060405180910390f35b61036c611626565b604051808381526020018281526020019250505060405180910390f35b6103b56004803603602081101561039f57600080fd5b8101908080359060200190929190505050611638565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103ff611791565b604051808215151515815260200191505060405180910390f35b6105896004803603606081101561042f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561046c57600080fd5b82018360208201111561047e57600080fd5b803590602001918460018302840111640100000000831117156104a057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561050357600080fd5b82018360208201111561051557600080fd5b8035906020019184600183028401116401000000008311171561053757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506117a4565b604051808215151515815260200191505060405180910390f35b6105cf600480360360208110156105b957600080fd5b8101908080359060200190929190505050611966565b6040518082815260200191505060405180910390f35b61069e600480360360208110156105fb57600080fd5b810190808035906020019064010000000081111561061857600080fd5b82018360208201111561062a57600080fd5b8035906020019184600183028401116401000000008311171561064c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611988565b6040518082815260200191505060405180910390f35b6106bc611b24565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b61071d600480360360408110156106fd57600080fd5b810190808035906020019092919080359060200190929190505050611b4a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108186004803603602081101561077557600080fd5b810190808035906020019064010000000081111561079257600080fd5b8201836020820111156107a457600080fd5b803590602001918460018302840111640100000000831117156107c657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611ca4565b6040518082815260200191505060405180910390f35b610836611e40565b005b610840611f79565b6040518082815260200191505060405180910390f35b6108ac6004803603606081101561086c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050611f91565b005b6108b6612050565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610900612076565b6040518082815260200191505060405180910390f35b61096c6004803603606081101561092c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506121c5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610a67600480360360208110156109c457600080fd5b81019080803590602001906401000000008111156109e157600080fd5b8201836020820111156109f357600080fd5b80359060200191846001830284011164010000000083111715610a1557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612336565b6040518082815260200191505060405180910390f35b610f7a6004803603610160811015610a9457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610adb57600080fd5b820183602082011115610aed57600080fd5b80359060200191846001830284011164010000000083111715610b0f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610b7257600080fd5b820183602082011115610b8457600080fd5b80359060200191846001830284011164010000000083111715610ba657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919080359060200190640100000000811115610c1357600080fd5b820183602082011115610c2557600080fd5b80359060200191846020830284011164010000000083111715610c4757600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610ca757600080fd5b820183602082011115610cb957600080fd5b80359060200191846020830284011164010000000083111715610cdb57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610d3b57600080fd5b820183602082011115610d4d57600080fd5b80359060200191846020830284011164010000000083111715610d6f57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610dcf57600080fd5b820183602082011115610de157600080fd5b80359060200191846020830284011164010000000083111715610e0357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610e6357600080fd5b820183602082011115610e7557600080fd5b80359060200191846020830284011164010000000083111715610e9757600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610ef757600080fd5b820183602082011115610f0957600080fd5b80359060200191846020830284011164010000000083111715610f2b57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192905050506124d2565b005b610f84612626565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610fce61264f565b604051808215151515815260200191505060405180910390f35b610ff06126ad565b6040518082815260200191505060405180910390f35b6110326004803603602081101561101c57600080fd5b81019080803590602001909291905050506126c5565b6040518082815260200191505060405180910390f35b61108a6004803603602081101561105e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612816565b005b6110c2600480360360408110156110a257600080fd5b8101908080359060200190929190803590602001909291905050506129ba565b005b6110cc612aeb565b6040518082815260200191505060405180910390f35b61110e600480360360208110156110f857600080fd5b8101908080359060200190929190505050612c42565b6040518082815260200191505060405180910390f35b611182600480360360c081101561113a57600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190505050612c95565b604051808381526020018281526020019250505060405180910390f35b6111e1600480360360208110156111b557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612eb1565b005b61120f600480360360208110156111f957600080fd5b8101908080359060200190929190505050612f37565b6040518082815260200191505060405180910390f35b600061122f613088565b61123882611ca4565b61124184611ca4565b1415611298576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806141f76021913960400191505060405180910390fd5b60006112a384612336565b90506112ae83612336565b8114611305576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806142396027913960400191505060405180910390fd5b61130e816126c5565b8510611382576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4261642076616c696461746f7220696e6465780000000000000000000000000081525060200191505060405180910390fd5b61138c8582611b4a565b73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161461142c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5761736e27742061207369676e6572207769746820676976656e20696e64657881525060200191505060405180910390fd5b600061143785611988565b60001c9050600061144785611988565b60001c90506000876001901b831614156114c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f4469646e2774207369676e20666972737420626c6f636b00000000000000000081525060200191505060405180910390fd5b6000876001901b82161415611546576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4469646e2774207369676e207365636f6e6420626c6f636b000000000000000081525060200191505060405180910390fd5b61154f83612c42565b611558836130e8565b10156115af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806140516025913960400191505060405180910390fd5b6115b883612c42565b6115c1826130e8565b1015611618576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806142d86026913960400191505060405180910390fd5b829350505050949350505050565b60028060000154908060010154905082565b6000611642613088565b6060600060fa73ffffffffffffffffffffffffffffffffffffffff16844360405160200180838152602001828152602001925050506040516020818303038152906040526040518082805190602001908083835b602083106116b95780518252602082019150602081019050602083039250611696565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611719576040519150601f19603f3d011682016040523d82523d6000602084013e61171e565b606091505b5080935081925050508061177d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d815260200180614126603d913960400191505060405180910390fd5b611788826000613153565b92505050919050565b600060149054906101000a900460ff1681565b60006117ae613088565b600060fb73ffffffffffffffffffffffffffffffffffffffff16858585604051602001808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140183805190602001908083835b602083106118365780518252602082019150602081019050602083039250611813565b6001836020036101000a03801982511681845116808217855250505050505090500182805190602001908083835b602083106118875780518252602082019150602081019050602083039250611864565b6001836020036101000a03801982511681845116808217855250505050505090500193505050506040516020818303038152906040526040518082805190602001908083835b602083106118f057805182526020820191506020810190506020830392506118cd565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611950576040519150601f19603f3d011682016040523d82523d6000602084013e611955565b606091505b505080915050809150509392505050565b6000611970613088565b6119818261197c612aeb565b61316a565b9050919050565b6000611992613088565b6060600060f473ffffffffffffffffffffffffffffffffffffffff16846040516020018082805190602001908083835b602083106119e557805182526020820191506020810190506020830392506119c2565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310611a4c5780518252602082019150602081019050602083039250611a29565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611aac576040519150601f19603f3d011682016040523d82523d6000602084013e611ab1565b606091505b50809350819250505080611b10576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806140ee6038913960400191505060405180910390fd5b611b1b8260006131b2565b92505050919050565b600080600080600180600180839350829250819150809050935093509350935090919293565b6000611b54613088565b6060600060fa73ffffffffffffffffffffffffffffffffffffffff16858560405160200180838152602001828152602001925050506040516020818303038152906040526040518082805190602001908083835b60208310611bcb5780518252602082019150602081019050602083039250611ba8565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611c2b576040519150601f19603f3d011682016040523d82523d6000602084013e611c30565b606091505b50809350819250505080611c8f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260368152602001806141c16036913960400191505060405180910390fd5b611c9a826000613153565b9250505092915050565b6000611cae613088565b6060600060f673ffffffffffffffffffffffffffffffffffffffff16846040516020018082805190602001908083835b60208310611d015780518252602082019150602081019050602083039250611cde565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310611d685780518252602082019150602081019050602083039250611d45565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611dc8576040519150601f19603f3d011682016040523d82523d6000602084013e611dcd565b606091505b50809350819250505080611e2c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018061432f6023913960400191505060405180910390fd5b611e378260006131b2565b92505050919050565b611e4861264f565b611eba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000611f83613088565b611f8c43612c42565b905090565b600060149054906101000a900460ff1615612014576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f636f6e747261637420616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff02191690831515021790555061203833613253565b61204183612816565b61204b82826129ba565b505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000612080613088565b6060600060f973ffffffffffffffffffffffffffffffffffffffff1643604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b602083106120ef57805182526020820191506020810190506020830392506120cc565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d806000811461214f576040519150601f19603f3d011682016040523d82523d6000602084013e612154565b606091505b508093508192505050806121b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001806141636035913960400191505060405180910390fd5b6121be826000613153565b9250505090565b6000806121d184611966565b9050600081141561224a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f43616e6e6f7420736c617368206f6e2065706f6368203000000000000000000081525060200191505060405180910390fd5b612252613397565b73ffffffffffffffffffffffffffffffffffffffff1663eb1d0b428661228260018561349290919063ffffffff16565b866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060206040518083038186803b1580156122f157600080fd5b505afa158015612305573d6000803e3d6000fd5b505050506040513d602081101561231b57600080fd5b81019080805190602001909291905050509150509392505050565b6000612340613088565b6060600060f773ffffffffffffffffffffffffffffffffffffffff16846040516020018082805190602001908083835b602083106123935780518252602082019150602081019050602083039250612370565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083106123fa57805182526020820191506020810190506020830392506123d7565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d806000811461245a576040519150601f19603f3d011682016040523d82523d6000602084013e61245f565b606091505b508093508192505050806124be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806142fe6031913960400191505060405180910390fd5b6124c9826000613153565b92505050919050565b6124da613088565b6124e48b8a6134dc565b6124ee8b896134dc565b60006124fc8c8c8c8c611225565b90506000612508613628565b73ffffffffffffffffffffffffffffffffffffffff166393c5c4878e6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561258457600080fd5b505afa158015612598573d6000803e3d6000fd5b505050506040513d60208110156125ae57600080fd5b810190808051906020019092919050505090506125d38133848c8c8c8c8c8c8c613723565b818173ffffffffffffffffffffffffffffffffffffffff167fca7992de940988854714f90c0236621d5b6b850313f03eeea47f7028aaecea4060405160405180910390a350505050505050505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612691613c3e565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b60006126b7613088565b6126c043611966565b905090565b60006126cf613088565b6060600060f973ffffffffffffffffffffffffffffffffffffffff1684604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b6020831061273e578051825260208201915060208101905060208303925061271b565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d806000811461279e576040519150601f19603f3d011682016040523d82523d6000602084013e6127a3565b606091505b50809350819250505080612802576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614076602e913960400191505060405180910390fd5b61280d826000613153565b92505050919050565b61281e61264f565b612890576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612933576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f43616e6e6f7420726567697374657220746865206e756c6c206164647265737381525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b60405160405180910390a250565b6129c2613088565b6129ca61264f565b612a3c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b808211612a94576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806140a46024913960400191505060405180910390fd5b81600260000181905550806002600101819055507f716dc7c34384df36c6ccc5a2949f2ce9b019f5d4075ef39139a80038a4fdd1c38282604051808381526020018281526020019250505060405180910390a15050565b6000612af5613088565b6060600060f873ffffffffffffffffffffffffffffffffffffffff16600160405160200180821515151560f81b81526001019150506040516020818303038152906040526040518082805190602001908083835b60208310612b6c5780518252602082019150602081019050602083039250612b49565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114612bcc576040519150601f19603f3d011682016040523d82523d6000602084013e612bd1565b606091505b50809350819250505080612c30576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806142876025913960400191505060405180910390fd5b612c3b826000613153565b9250505090565b6000612c4c613088565b612c8e6003612c806002612c726002612c64886126c5565b613c4690919063ffffffff16565b613ccc90919063ffffffff16565b613d5490919063ffffffff16565b9050919050565b600080612ca0613088565b60008714158015612cb2575060008514155b612d24576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f612064656e6f6d696e61746f72206973207a65726f000000000000000000000081525060200191505060405180910390fd5b6000806000606060fc73ffffffffffffffffffffffffffffffffffffffff168c8c8c8c8c8c6040516020018087815260200186815260200185815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040526040518082805190602001908083835b60208310612dbe5780518252602082019150602081019050602083039250612d9b565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114612e1e576040519150601f19603f3d011682016040523d82523d6000602084013e612e23565b606091505b50809250819350505081612e82576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806142606027913960400191505060405180910390fd5b612e8d816000613153565b9350612e9a816020613153565b925083839550955050505050965096945050505050565b612eb961264f565b612f2b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b612f3481613253565b50565b6000612f41613088565b6060600060f573ffffffffffffffffffffffffffffffffffffffff1684604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b60208310612fb05780518252602082019150602081019050602083039250612f8d565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114613010576040519150601f19603f3d011682016040523d82523d6000602084013e613015565b606091505b50809350819250505080613074576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806142ac602c913960400191505060405180910390fd5b61307f8260006131b2565b92505050919050565b613090613d9e565b156130e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806141986029913960400191505060405180910390fd5b565b60008060009050600083905060008090505b610100811015613148576001808316141561312657613123600184613ccc90919063ffffffff16565b92505b600182901c9150613141600182613ccc90919063ffffffff16565b90506130fa565b508192505050919050565b600061315f83836131b2565b60001c905092915050565b60008082848161317657fe5b049050600083858161318457fe5b06141561319457809150506131ac565b6131a8600182613ccc90919063ffffffff16565b9150505b92915050565b60006131c8602083613ccc90919063ffffffff16565b8351101561323e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f736c6963696e67206f7574206f662072616e676500000000000000000000000081525060200191505060405180910390fd5b60006020830184015190508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156132d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806140c86026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f56616c696461746f727300000000000000000000000000000000000000000000815250600a019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561345257600080fd5b505afa158015613466573d6000803e3d6000fd5b505050506040513d602081101561347c57600080fd5b8101908080519060200190929190505050905090565b60006134d483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613dcf565b905092915050565b60006134e782611ca4565b9050600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060009054906101000a900460ff16156135ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f416c726561647920736c6173686564000000000000000000000000000000000081525060200191505060405180910390fd5b6001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f4163636f756e74730000000000000000000000000000000000000000000000008152506008019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156136e357600080fd5b505afa1580156136f7573d6000803e3d6000fd5b505050506040513d602081101561370d57600080fd5b8101908080519060200190929190505050905090565b600061372d613e8f565b90508073ffffffffffffffffffffffffffffffffffffffff166331993fc98c6002600001548d6002600101548c8c8c6040518863ffffffff1660e01b8152600401808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001858152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b8381101561382657808201518184015260208101905061380b565b50505050905001848103835286818151815260200191508051906020019060200280838360005b8381101561386857808201518184015260208101905061384d565b50505050905001848103825285818151815260200191508051906020019060200280838360005b838110156138aa57808201518184015260208101905061388f565b505050509050019a5050505050505050505050600060405180830381600087803b1580156138d757600080fd5b505af11580156138eb573d6000803e3d6000fd5b5050505060006138fc8c8b8b6121c5565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561393557fe5b8173ffffffffffffffffffffffffffffffffffffffff166331993fc9826002600001548e6002600101548a8a8a6040518863ffffffff1660e01b8152600401808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001858152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b83811015613a2c578082015181840152602081019050613a11565b50505050905001848103835286818151815260200191508051906020019060200280838360005b83811015613a6e578082015181840152602081019050613a53565b50505050905001848103825285818151815260200191508051906020019060200280838360005b83811015613ab0578082015181840152602081019050613a95565b505050509050019a5050505050505050505050600060405180830381600087803b158015613add57600080fd5b505af1158015613af1573d6000803e3d6000fd5b505050506000613aff613397565b90508073ffffffffffffffffffffffffffffffffffffffff1663e33301aa8e6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015613b8057600080fd5b505af1158015613b94573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663c22d3bba836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015613c1757600080fd5b505af1158015613c2b573d6000803e3d6000fd5b5050505050505050505050505050505050565b600033905090565b600080831415613c595760009050613cc6565b6000828402905082848281613c6a57fe5b0414613cc1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806142186021913960400191505060405180910390fd5b809150505b92915050565b600080828401905083811015613d4a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000613d9683836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250613f8a565b905092915050565b60008060007342000000000000000000000000000000000000189050803b915060008263ffffffff16119250505090565b6000838311158290613e7c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613e41578082015181840152602081019050613e26565b50505050905090810190601f168015613e6e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f4c6f636b6564476f6c6400000000000000000000000000000000000000000000815250600a019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613f4a57600080fd5b505afa158015613f5e573d6000803e3d6000fd5b505050506040513d6020811015613f7457600080fd5b8101908080519060200190929190505050905090565b60008083118290614036576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613ffb578082015181840152602081019050613fe0565b50505050905090810190601f1680156140285780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161404257fe5b04905080915050939250505056fe4e6f7420656e6f756768207369676e65727320696e2074686520666972737420626c6f636b6572726f722063616c6c696e67206e756d62657256616c696461746f7273496e53657420707265636f6d70696c6550656e616c74792068617320746f206265206c6172676572207468616e207265776172644f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573736572726f722063616c6c696e672067657456657269666965645365616c4269746d617046726f6d48656164657220707265636f6d70696c656572726f722063616c6c696e672076616c696461746f725369676e65724164647265737346726f6d43757272656e7453657420707265636f6d70696c656572726f722063616c6c696e67206e756d62657256616c696461746f7273496e43757272656e7453657420707265636f6d70696c6554686973206d6574686f64206973206e6f206c6f6e67657220737570706f7274656420696e204c322e6572726f722063616c6c696e672076616c696461746f725369676e65724164647265737346726f6d53657420707265636f6d70696c65426c6f636b20686173686573206861766520746f20626520646966666572656e74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77426c6f636b2068656164657273206172652066726f6d20646966666572656e74206865696768746572726f722063616c6c696e67206672616374696f6e4d756c45787020707265636f6d70696c656572726f722063616c6c696e672067657445706f636853697a6520707265636f6d70696c656572726f722063616c6c696e6720676574506172656e745365616c4269746d617020707265636f6d70696c654e6f7420656e6f756768207369676e65727320696e20746865207365636f6e6420626c6f636b6572726f722063616c6c696e6720676574426c6f636b4e756d62657246726f6d48656164657220707265636f6d70696c656572726f722063616c6c696e67206861736848656164657220707265636f6d70696c65a265627a7a7231582092f1e7021b6b16107a0b65ba629368092ce2998b81e05ad7a6f6bc784ed71c0a64736f6c634300050d0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101cf5760003560e01c806387ee8a0f116101045780639b2b592f116100a2578063e50e652d11610071578063e50e652d146110e2578063ec68307214611124578063f2fde38b1461119f578063fae8db0a146111e3576101cf565b80639b2b592f14611006578063a91ee0dc14611048578063bd0d99791461108c578063df4da461146110c4576101cf565b80638cc26910116100de5780638cc2691014610a7d5780638da5cb5b14610f7c5780638f32d59b14610fc65780639a7b3be714610fe8576101cf565b806387ee8a0f146108f857806388498aaf146109165780638a883626146109ae576101cf565b806354255be011610171578063715018a61161014b578063715018a61461082e5780637385e5da146108385780637a1ac61e146108565780637b103999146108ae576101cf565b806354255be0146106b45780635d180adb146106e757806367960e911461075f576101cf565b8063158ef93e116101ad578063158ef93e146103f757806323f0ab65146104195780633b1eb4bf146105a35780634b2c2f44146105e5576101cf565b806309f99447146101d45780630a05cd8414610364578063123633ea14610389575b600080fd5b61034e600480360360808110156101ea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561023157600080fd5b82018360208201111561024357600080fd5b8035906020019184600183028401116401000000008311171561026557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156102c857600080fd5b8201836020820111156102da57600080fd5b803590602001918460018302840111640100000000831117156102fc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611225565b6040518082815260200191505060405180910390f35b61036c611626565b604051808381526020018281526020019250505060405180910390f35b6103b56004803603602081101561039f57600080fd5b8101908080359060200190929190505050611638565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103ff611791565b604051808215151515815260200191505060405180910390f35b6105896004803603606081101561042f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561046c57600080fd5b82018360208201111561047e57600080fd5b803590602001918460018302840111640100000000831117156104a057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561050357600080fd5b82018360208201111561051557600080fd5b8035906020019184600183028401116401000000008311171561053757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506117a4565b604051808215151515815260200191505060405180910390f35b6105cf600480360360208110156105b957600080fd5b8101908080359060200190929190505050611966565b6040518082815260200191505060405180910390f35b61069e600480360360208110156105fb57600080fd5b810190808035906020019064010000000081111561061857600080fd5b82018360208201111561062a57600080fd5b8035906020019184600183028401116401000000008311171561064c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611988565b6040518082815260200191505060405180910390f35b6106bc611b24565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b61071d600480360360408110156106fd57600080fd5b810190808035906020019092919080359060200190929190505050611b4a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108186004803603602081101561077557600080fd5b810190808035906020019064010000000081111561079257600080fd5b8201836020820111156107a457600080fd5b803590602001918460018302840111640100000000831117156107c657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611ca4565b6040518082815260200191505060405180910390f35b610836611e40565b005b610840611f79565b6040518082815260200191505060405180910390f35b6108ac6004803603606081101561086c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050611f91565b005b6108b6612050565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610900612076565b6040518082815260200191505060405180910390f35b61096c6004803603606081101561092c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506121c5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610a67600480360360208110156109c457600080fd5b81019080803590602001906401000000008111156109e157600080fd5b8201836020820111156109f357600080fd5b80359060200191846001830284011164010000000083111715610a1557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612336565b6040518082815260200191505060405180910390f35b610f7a6004803603610160811015610a9457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610adb57600080fd5b820183602082011115610aed57600080fd5b80359060200191846001830284011164010000000083111715610b0f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610b7257600080fd5b820183602082011115610b8457600080fd5b80359060200191846001830284011164010000000083111715610ba657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919080359060200190640100000000811115610c1357600080fd5b820183602082011115610c2557600080fd5b80359060200191846020830284011164010000000083111715610c4757600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610ca757600080fd5b820183602082011115610cb957600080fd5b80359060200191846020830284011164010000000083111715610cdb57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610d3b57600080fd5b820183602082011115610d4d57600080fd5b80359060200191846020830284011164010000000083111715610d6f57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610dcf57600080fd5b820183602082011115610de157600080fd5b80359060200191846020830284011164010000000083111715610e0357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610e6357600080fd5b820183602082011115610e7557600080fd5b80359060200191846020830284011164010000000083111715610e9757600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610ef757600080fd5b820183602082011115610f0957600080fd5b80359060200191846020830284011164010000000083111715610f2b57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192905050506124d2565b005b610f84612626565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610fce61264f565b604051808215151515815260200191505060405180910390f35b610ff06126ad565b6040518082815260200191505060405180910390f35b6110326004803603602081101561101c57600080fd5b81019080803590602001909291905050506126c5565b6040518082815260200191505060405180910390f35b61108a6004803603602081101561105e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612816565b005b6110c2600480360360408110156110a257600080fd5b8101908080359060200190929190803590602001909291905050506129ba565b005b6110cc612aeb565b6040518082815260200191505060405180910390f35b61110e600480360360208110156110f857600080fd5b8101908080359060200190929190505050612c42565b6040518082815260200191505060405180910390f35b611182600480360360c081101561113a57600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190505050612c95565b604051808381526020018281526020019250505060405180910390f35b6111e1600480360360208110156111b557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612eb1565b005b61120f600480360360208110156111f957600080fd5b8101908080359060200190929190505050612f37565b6040518082815260200191505060405180910390f35b600061122f613088565b61123882611ca4565b61124184611ca4565b1415611298576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806141f76021913960400191505060405180910390fd5b60006112a384612336565b90506112ae83612336565b8114611305576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806142396027913960400191505060405180910390fd5b61130e816126c5565b8510611382576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4261642076616c696461746f7220696e6465780000000000000000000000000081525060200191505060405180910390fd5b61138c8582611b4a565b73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161461142c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5761736e27742061207369676e6572207769746820676976656e20696e64657881525060200191505060405180910390fd5b600061143785611988565b60001c9050600061144785611988565b60001c90506000876001901b831614156114c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f4469646e2774207369676e20666972737420626c6f636b00000000000000000081525060200191505060405180910390fd5b6000876001901b82161415611546576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4469646e2774207369676e207365636f6e6420626c6f636b000000000000000081525060200191505060405180910390fd5b61154f83612c42565b611558836130e8565b10156115af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806140516025913960400191505060405180910390fd5b6115b883612c42565b6115c1826130e8565b1015611618576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806142d86026913960400191505060405180910390fd5b829350505050949350505050565b60028060000154908060010154905082565b6000611642613088565b6060600060fa73ffffffffffffffffffffffffffffffffffffffff16844360405160200180838152602001828152602001925050506040516020818303038152906040526040518082805190602001908083835b602083106116b95780518252602082019150602081019050602083039250611696565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611719576040519150601f19603f3d011682016040523d82523d6000602084013e61171e565b606091505b5080935081925050508061177d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d815260200180614126603d913960400191505060405180910390fd5b611788826000613153565b92505050919050565b600060149054906101000a900460ff1681565b60006117ae613088565b600060fb73ffffffffffffffffffffffffffffffffffffffff16858585604051602001808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140183805190602001908083835b602083106118365780518252602082019150602081019050602083039250611813565b6001836020036101000a03801982511681845116808217855250505050505090500182805190602001908083835b602083106118875780518252602082019150602081019050602083039250611864565b6001836020036101000a03801982511681845116808217855250505050505090500193505050506040516020818303038152906040526040518082805190602001908083835b602083106118f057805182526020820191506020810190506020830392506118cd565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611950576040519150601f19603f3d011682016040523d82523d6000602084013e611955565b606091505b505080915050809150509392505050565b6000611970613088565b6119818261197c612aeb565b61316a565b9050919050565b6000611992613088565b6060600060f473ffffffffffffffffffffffffffffffffffffffff16846040516020018082805190602001908083835b602083106119e557805182526020820191506020810190506020830392506119c2565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310611a4c5780518252602082019150602081019050602083039250611a29565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611aac576040519150601f19603f3d011682016040523d82523d6000602084013e611ab1565b606091505b50809350819250505080611b10576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806140ee6038913960400191505060405180910390fd5b611b1b8260006131b2565b92505050919050565b600080600080600180600180839350829250819150809050935093509350935090919293565b6000611b54613088565b6060600060fa73ffffffffffffffffffffffffffffffffffffffff16858560405160200180838152602001828152602001925050506040516020818303038152906040526040518082805190602001908083835b60208310611bcb5780518252602082019150602081019050602083039250611ba8565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611c2b576040519150601f19603f3d011682016040523d82523d6000602084013e611c30565b606091505b50809350819250505080611c8f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260368152602001806141c16036913960400191505060405180910390fd5b611c9a826000613153565b9250505092915050565b6000611cae613088565b6060600060f673ffffffffffffffffffffffffffffffffffffffff16846040516020018082805190602001908083835b60208310611d015780518252602082019150602081019050602083039250611cde565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310611d685780518252602082019150602081019050602083039250611d45565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611dc8576040519150601f19603f3d011682016040523d82523d6000602084013e611dcd565b606091505b50809350819250505080611e2c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018061432f6023913960400191505060405180910390fd5b611e378260006131b2565b92505050919050565b611e4861264f565b611eba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000611f83613088565b611f8c43612c42565b905090565b600060149054906101000a900460ff1615612014576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f636f6e747261637420616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff02191690831515021790555061203833613253565b61204183612816565b61204b82826129ba565b505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000612080613088565b6060600060f973ffffffffffffffffffffffffffffffffffffffff1643604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b602083106120ef57805182526020820191506020810190506020830392506120cc565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d806000811461214f576040519150601f19603f3d011682016040523d82523d6000602084013e612154565b606091505b508093508192505050806121b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001806141636035913960400191505060405180910390fd5b6121be826000613153565b9250505090565b6000806121d184611966565b9050600081141561224a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f43616e6e6f7420736c617368206f6e2065706f6368203000000000000000000081525060200191505060405180910390fd5b612252613397565b73ffffffffffffffffffffffffffffffffffffffff1663eb1d0b428661228260018561349290919063ffffffff16565b866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060206040518083038186803b1580156122f157600080fd5b505afa158015612305573d6000803e3d6000fd5b505050506040513d602081101561231b57600080fd5b81019080805190602001909291905050509150509392505050565b6000612340613088565b6060600060f773ffffffffffffffffffffffffffffffffffffffff16846040516020018082805190602001908083835b602083106123935780518252602082019150602081019050602083039250612370565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083106123fa57805182526020820191506020810190506020830392506123d7565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d806000811461245a576040519150601f19603f3d011682016040523d82523d6000602084013e61245f565b606091505b508093508192505050806124be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806142fe6031913960400191505060405180910390fd5b6124c9826000613153565b92505050919050565b6124da613088565b6124e48b8a6134dc565b6124ee8b896134dc565b60006124fc8c8c8c8c611225565b90506000612508613628565b73ffffffffffffffffffffffffffffffffffffffff166393c5c4878e6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561258457600080fd5b505afa158015612598573d6000803e3d6000fd5b505050506040513d60208110156125ae57600080fd5b810190808051906020019092919050505090506125d38133848c8c8c8c8c8c8c613723565b818173ffffffffffffffffffffffffffffffffffffffff167fca7992de940988854714f90c0236621d5b6b850313f03eeea47f7028aaecea4060405160405180910390a350505050505050505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612691613c3e565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b60006126b7613088565b6126c043611966565b905090565b60006126cf613088565b6060600060f973ffffffffffffffffffffffffffffffffffffffff1684604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b6020831061273e578051825260208201915060208101905060208303925061271b565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d806000811461279e576040519150601f19603f3d011682016040523d82523d6000602084013e6127a3565b606091505b50809350819250505080612802576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614076602e913960400191505060405180910390fd5b61280d826000613153565b92505050919050565b61281e61264f565b612890576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612933576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f43616e6e6f7420726567697374657220746865206e756c6c206164647265737381525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b60405160405180910390a250565b6129c2613088565b6129ca61264f565b612a3c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b808211612a94576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806140a46024913960400191505060405180910390fd5b81600260000181905550806002600101819055507f716dc7c34384df36c6ccc5a2949f2ce9b019f5d4075ef39139a80038a4fdd1c38282604051808381526020018281526020019250505060405180910390a15050565b6000612af5613088565b6060600060f873ffffffffffffffffffffffffffffffffffffffff16600160405160200180821515151560f81b81526001019150506040516020818303038152906040526040518082805190602001908083835b60208310612b6c5780518252602082019150602081019050602083039250612b49565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114612bcc576040519150601f19603f3d011682016040523d82523d6000602084013e612bd1565b606091505b50809350819250505080612c30576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806142876025913960400191505060405180910390fd5b612c3b826000613153565b9250505090565b6000612c4c613088565b612c8e6003612c806002612c726002612c64886126c5565b613c4690919063ffffffff16565b613ccc90919063ffffffff16565b613d5490919063ffffffff16565b9050919050565b600080612ca0613088565b60008714158015612cb2575060008514155b612d24576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f612064656e6f6d696e61746f72206973207a65726f000000000000000000000081525060200191505060405180910390fd5b6000806000606060fc73ffffffffffffffffffffffffffffffffffffffff168c8c8c8c8c8c6040516020018087815260200186815260200185815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040526040518082805190602001908083835b60208310612dbe5780518252602082019150602081019050602083039250612d9b565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114612e1e576040519150601f19603f3d011682016040523d82523d6000602084013e612e23565b606091505b50809250819350505081612e82576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806142606027913960400191505060405180910390fd5b612e8d816000613153565b9350612e9a816020613153565b925083839550955050505050965096945050505050565b612eb961264f565b612f2b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b612f3481613253565b50565b6000612f41613088565b6060600060f573ffffffffffffffffffffffffffffffffffffffff1684604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b60208310612fb05780518252602082019150602081019050602083039250612f8d565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114613010576040519150601f19603f3d011682016040523d82523d6000602084013e613015565b606091505b50809350819250505080613074576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806142ac602c913960400191505060405180910390fd5b61307f8260006131b2565b92505050919050565b613090613d9e565b156130e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806141986029913960400191505060405180910390fd5b565b60008060009050600083905060008090505b610100811015613148576001808316141561312657613123600184613ccc90919063ffffffff16565b92505b600182901c9150613141600182613ccc90919063ffffffff16565b90506130fa565b508192505050919050565b600061315f83836131b2565b60001c905092915050565b60008082848161317657fe5b049050600083858161318457fe5b06141561319457809150506131ac565b6131a8600182613ccc90919063ffffffff16565b9150505b92915050565b60006131c8602083613ccc90919063ffffffff16565b8351101561323e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f736c6963696e67206f7574206f662072616e676500000000000000000000000081525060200191505060405180910390fd5b60006020830184015190508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156132d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806140c86026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f56616c696461746f727300000000000000000000000000000000000000000000815250600a019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561345257600080fd5b505afa158015613466573d6000803e3d6000fd5b505050506040513d602081101561347c57600080fd5b8101908080519060200190929190505050905090565b60006134d483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613dcf565b905092915050565b60006134e782611ca4565b9050600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060009054906101000a900460ff16156135ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f416c726561647920736c6173686564000000000000000000000000000000000081525060200191505060405180910390fd5b6001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f4163636f756e74730000000000000000000000000000000000000000000000008152506008019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156136e357600080fd5b505afa1580156136f7573d6000803e3d6000fd5b505050506040513d602081101561370d57600080fd5b8101908080519060200190929190505050905090565b600061372d613e8f565b90508073ffffffffffffffffffffffffffffffffffffffff166331993fc98c6002600001548d6002600101548c8c8c6040518863ffffffff1660e01b8152600401808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001858152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b8381101561382657808201518184015260208101905061380b565b50505050905001848103835286818151815260200191508051906020019060200280838360005b8381101561386857808201518184015260208101905061384d565b50505050905001848103825285818151815260200191508051906020019060200280838360005b838110156138aa57808201518184015260208101905061388f565b505050509050019a5050505050505050505050600060405180830381600087803b1580156138d757600080fd5b505af11580156138eb573d6000803e3d6000fd5b5050505060006138fc8c8b8b6121c5565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561393557fe5b8173ffffffffffffffffffffffffffffffffffffffff166331993fc9826002600001548e6002600101548a8a8a6040518863ffffffff1660e01b8152600401808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001858152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b83811015613a2c578082015181840152602081019050613a11565b50505050905001848103835286818151815260200191508051906020019060200280838360005b83811015613a6e578082015181840152602081019050613a53565b50505050905001848103825285818151815260200191508051906020019060200280838360005b83811015613ab0578082015181840152602081019050613a95565b505050509050019a5050505050505050505050600060405180830381600087803b158015613add57600080fd5b505af1158015613af1573d6000803e3d6000fd5b505050506000613aff613397565b90508073ffffffffffffffffffffffffffffffffffffffff1663e33301aa8e6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015613b8057600080fd5b505af1158015613b94573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663c22d3bba836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015613c1757600080fd5b505af1158015613c2b573d6000803e3d6000fd5b5050505050505050505050505050505050565b600033905090565b600080831415613c595760009050613cc6565b6000828402905082848281613c6a57fe5b0414613cc1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806142186021913960400191505060405180910390fd5b809150505b92915050565b600080828401905083811015613d4a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000613d9683836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250613f8a565b905092915050565b60008060007342000000000000000000000000000000000000189050803b915060008263ffffffff16119250505090565b6000838311158290613e7c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613e41578082015181840152602081019050613e26565b50505050905090810190601f168015613e6e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f4c6f636b6564476f6c6400000000000000000000000000000000000000000000815250600a019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613f4a57600080fd5b505afa158015613f5e573d6000803e3d6000fd5b505050506040513d6020811015613f7457600080fd5b8101908080519060200190929190505050905090565b60008083118290614036576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613ffb578082015181840152602081019050613fe0565b50505050905090810190601f1680156140285780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161404257fe5b04905080915050939250505056fe4e6f7420656e6f756768207369676e65727320696e2074686520666972737420626c6f636b6572726f722063616c6c696e67206e756d62657256616c696461746f7273496e53657420707265636f6d70696c6550656e616c74792068617320746f206265206c6172676572207468616e207265776172644f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573736572726f722063616c6c696e672067657456657269666965645365616c4269746d617046726f6d48656164657220707265636f6d70696c656572726f722063616c6c696e672076616c696461746f725369676e65724164647265737346726f6d43757272656e7453657420707265636f6d70696c656572726f722063616c6c696e67206e756d62657256616c696461746f7273496e43757272656e7453657420707265636f6d70696c6554686973206d6574686f64206973206e6f206c6f6e67657220737570706f7274656420696e204c322e6572726f722063616c6c696e672076616c696461746f725369676e65724164647265737346726f6d53657420707265636f6d70696c65426c6f636b20686173686573206861766520746f20626520646966666572656e74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77426c6f636b2068656164657273206172652066726f6d20646966666572656e74206865696768746572726f722063616c6c696e67206672616374696f6e4d756c45787020707265636f6d70696c656572726f722063616c6c696e672067657445706f636853697a6520707265636f6d70696c656572726f722063616c6c696e6720676574506172656e745365616c4269746d617020707265636f6d70696c654e6f7420656e6f756768207369676e65727320696e20746865207365636f6e6420626c6f636b6572726f722063616c6c696e6720676574426c6f636b4e756d62657246726f6d48656164657220707265636f6d70696c656572726f722063616c6c696e67206861736848656164657220707265636f6d70696c65a265627a7a7231582092f1e7021b6b16107a0b65ba629368092ce2998b81e05ad7a6f6bc784ed71c0a64736f6c634300050d0032",
  "sourceMap": "225:6176:111:-;;;770:50;8:9:-1;5:2;;;30:1;27;20:12;5:2;770:50:111;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;770:50:111;;;;;;;;;;;;;;;;812:4;927::122;698:17:4;718:12;:10;;;:12;;:::i;:::-;698:32;;749:9;740:6;;:18;;;;;;;;;;;;;;;;;;806:9;773:43;;802:1;773:43;;;;;;;;;;;;664:159;896:17:28;891:57;;937:4;923:11;;:18;;;;;;;;;;;;;;;;;;891:57;842:110;883:52:122;770:50:111;225:6176;;788:96:0;833:15;867:10;860:17;;788:96;:::o;225:6176:111:-;;;;;;;",
  "deployedSourceMap": "225:6176:111:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;225:6176:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4601:1197;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4601:1197:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4601:1197:111;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4601:1197:111;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4601:1197:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4601:1197:111;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4601:1197:111;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4601:1197:111;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4601:1197:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4601:1197:111;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;624:44:122;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;3619:391:40;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3619:391:40;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;319:23:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6380:275:40;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6380:275:40;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6380:275:40;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6380:275:40;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6380:275:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6380:275:40;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6380:275:40;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6380:275:40;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6380:275:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6380:275:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2921:154;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2921:154:40;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8760:358;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8760:358:40;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8760:358:40;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8760:358:40;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8760:358:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8760:358:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1628:117:111;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4378:392:40;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4378:392:40;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7338:295;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7338:295:40;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7338:295:40;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7338:295:40;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7338:295:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7338:295:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1684:137:4;;;:::i;:::-;;9692:119:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1113:238:111;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1113:238:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3352:25:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4957:333:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1667:441:122;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1667:441:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6834:336:40;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6834:336:40;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6834:336:40;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6834:336:40;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6834:336:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6834:336:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3030:1035:111;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3030:1035:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3030:1035:111;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3030:1035:111;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3030:1035:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3030:1035:111;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3030:1035:111;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3030:1035:111;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3030:1035:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3030:1035:111;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3030:1035:111;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3030:1035:111;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3030:1035:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3030:1035:111;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3030:1035:111;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3030:1035:111;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3030:1035:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3030:1035:111;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3030:1035:111;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3030:1035:111;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3030:1035:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3030:1035:111;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3030:1035:111;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3030:1035:111;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3030:1035:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3030:1035:111;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3030:1035:111;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3030:1035:111;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3030:1035:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3030:1035:111;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3030:1035:111;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3030:1035:111;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3030:1035:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3030:1035:111;;;;;;;;;;;;;;;:::i;:::-;;899:77:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1250:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3226:116:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5556:328;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5556:328:40;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3956:230:41;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3956:230:41;;;;;;;;;;;;;;;;;;;:::i;:::-;;1092:295:122;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1092:295:122;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2430:277:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9356:154;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9356:154:40;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1492:770;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1492:770:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1970:107:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1970:107:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;7974:329:40;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7974:329:40;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4601:1197:111;4755:7;328:13:11;:11;:13::i;:::-;4801:19:111;4812:7;4801:10;:19::i;:::-;4778;4789:7;4778:10;:19::i;:::-;:42;;4770:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4864:19;4886:33;4911:7;4886:24;:33::i;:::-;4864:55;;4955:33;4980:7;4955:24;:33::i;:::-;4940:11;:48;4925:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5065:34;5087:11;5065:21;:34::i;:::-;5057:5;:42;5049:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5154:49;5184:5;5191:11;5154:29;:49::i;:::-;5144:59;;:6;:59;;;5129:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5257:12;5280:40;5312:7;5280:31;:40::i;:::-;5272:49;;5257:64;;5327:12;5350:40;5382:7;5350:31;:40::i;:::-;5342:49;;5327:64;;5428:1;5418:5;5413:1;:10;;5405:4;:19;:24;;5397:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5494:1;5484:5;5479:1;:10;;5471:4;:19;:24;;5463:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5567:26;5581:11;5567:13;:26::i;:::-;5545:18;5558:4;5545:12;:18::i;:::-;:48;;5530:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5689:26;5703:11;5689:13;:26::i;:::-;5667:18;5680:4;5667:12;:18::i;:::-;:48;;5652:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5782:11;5775:18;;;;;4601:1197;;;;;;:::o;624:44:122:-;;;;;;;;;;;;;;:::o;3619:391:40:-;3716:7;328:13:11;:11;:13::i;:::-;3731:16:40;3753:12;522:8;3788:24;;3830:5;3845:12;3813:46;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3813:46:40;;;3788:72;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3788:72:40;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3771:89:40;;;;;;;;3874:7;3866:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3976:27;3996:3;4001:1;3976:19;:27::i;:::-;3953:52;;;;3619:391;;;:::o;319:23:28:-;;;;;;;;;;;;;:::o;6380:275:40:-;6514:4;328:13:11;:11;:13::i;:::-;6526:12:40;468:8;6558:30;;6606:6;6614;6622;6589:40;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6589:40:40;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6589:40:40;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6589:40:40;;;6558:72;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6558:72:40;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;6544:86:40;;;;;6643:7;6636:14;;;6380:275;;;;;:::o;2921:154::-;3001:7;328:13:11;:11;:13::i;:::-;3023:47:40;3042:11;3055:14;:12;:14::i;:::-;3023:18;:47::i;:::-;3016:54;;2921:154;;;:::o;8760:358::-;8858:7;328:13:11;:11;:13::i;:::-;8873:16:40;8895:12;877:9;8930:35;;8983:6;8966:24;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;8966:24:40;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;8966:24:40;;;8930:61;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;8930:61:40;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;8913:78:40;;;;;;;;9005:7;8997:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9086:27;9106:3;9111:1;9086:19;:27::i;:::-;9079:34;;;;8760:358;;;:::o;1628:117:111:-;1679:7;1688;1697;1706;1729:1;1732;1735;1738;1721:19;;;;;;;;;;;;;;;;;;;;1628:117;;;;:::o;4378:392:40:-;4493:7;328:13:11;:11;:13::i;:::-;4508:16:40;4530:12;522:8;4565:24;;4607:5;4614:11;4590:36;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4590:36:40;;;4565:62;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4565:62:40;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;4548:79:40;;;;;;;;4641:7;4633:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4736:27;4756:3;4761:1;4736:19;:27::i;:::-;4713:52;;;;4378:392;;;;:::o;7338:295::-;7407:7;328:13:11;:11;:13::i;:::-;7422:16:40;7444:12;748:8;7479:22;;7519:6;7502:24;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7502:24:40;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7502:24:40;;;7479:48;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7479:48:40;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;7462:65:40;;;;;;;;7541:7;7533:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7601:27;7621:3;7626:1;7601:19;:27::i;:::-;7594:34;;;;7338:295;;;:::o;1684:137:4:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:1;1745:40;;1766:6;;;;;;;;;;;1745:40;;;;;;;;;;;;1812:1;1795:6;;:19;;;;;;;;;;;;;;;;;;1684:137::o;9692:119:40:-;9757:7;328:13:11;:11;:13::i;:::-;9779:27:40;9793:12;9779:13;:27::i;:::-;9772:34;;9692:119;:::o;1113:238:111:-;476:11:28;;;;;;;;;;;475:12;467:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;540:4;526:11;;:18;;;;;;;;;;;;;;;;;;1236:30:111;1255:10;1236:18;:30::i;:::-;1272:28;1284:15;1272:11;:28::i;:::-;1306:40;1328:8;1338:7;1306:21;:40::i;:::-;1113:238;;;:::o;3352:25:41:-;;;;;;;;;;;;;:::o;4957:333:40:-;5025:7;328:13:11;:11;:13::i;:::-;5040:16:40;5062:12;580:8;5097:28;;5151:12;5126:39;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5126:39:40;;;5097:69;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5097:69:40;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;5080:86:40;;;;;;;;5180:7;5172:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5258:27;5278:3;5283:1;5258:19;:27::i;:::-;5251:34;;;;4957:333;:::o;1667:441:122:-;1813:7;1828:13;1844:34;1866:11;1844:21;:34::i;:::-;1828:50;;1901:1;1892:5;:10;;1884:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2011:15;:13;:15::i;:::-;:38;;;2050:9;2061:12;2071:1;2061:5;:9;;:12;;;;:::i;:::-;2075:27;2011:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2011:92:122;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2011:92:122;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2011:92:122;;;;;;;;;;;;;;;;1998:105;;;1667:441;;;;;:::o;6834:336:40:-;6917:7;328:13:11;:11;:13::i;:::-;6932:16:40;6954:12;696:8;6989:35;;7042:6;7025:24;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7025:24:40;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7025:24:40;;;6989:61;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6989:61:40;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;6972:78:40;;;;;;;;7064:7;7056:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7138:27;7158:3;7163:1;7138:19;:27::i;:::-;7131:34;;;;6834:336;;;:::o;3030:1035:111:-;328:13:11;:11;:13::i;:::-;3473:38:111;3495:6;3503:7;3473:21;:38::i;:::-;3517;3539:6;3547:7;3517:21;:38::i;:::-;3561:19;3583:54;3605:6;3613:5;3620:7;3629;3583:21;:54::i;:::-;3561:76;;3643:17;3663:13;:11;:13::i;:::-;:29;;;3693:6;3663:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3663:37:111;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3663:37:111;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3663:37:111;;;;;;;;;;;;;;;;3643:57;;3706:292;3729:9;3746:10;3764:11;3783:27;3818:24;3850:25;3883:24;3915:20;3943:21;3972:20;3706:15;:292::i;:::-;4048:11;4037:9;4009:51;;;;;;;;;;;;347:1:11;;3030:1035:111;;;;;;;;;;;:::o;899:77:4:-;937:7;963:6;;;;;;;;;;;956:13;;899:77;:::o;1250:92::-;1290:4;1329:6;;;;;;;;;;;1313:22;;:12;:10;:12::i;:::-;:22;;;1306:29;;1250:92;:::o;3226:116:40:-;3280:7;328:13:11;:11;:13::i;:::-;3302:35:40;3324:12;3302:21;:35::i;:::-;3295:42;;3226:116;:::o;5556:328::-;5636:7;328:13:11;:11;:13::i;:::-;5651:16:40;5673:12;580:8;5708:28;;5754:11;5737:29;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5737:29:40;;;5708:59;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5708:59:40;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;5691:76:40;;;;;;;;5781:7;5773:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5852:27;5872:3;5877:1;5852:19;:27::i;:::-;5845:34;;;;5556:328;;;:::o;3956:230:41:-;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4060:1:41;4033:29;;:15;:29;;;;4025:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4126:15;4105:8;;:37;;;;;;;;;;;;;;;;;;4165:15;4153:28;;;;;;;;;;;;3956:230;:::o;1092:295:122:-;328:13:11;:11;:13::i;:::-;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1204:6:122;1194:7;:16;1186:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1286:7;1257:18;:26;;:36;;;;1327:6;1299:18;:25;;:34;;;;1344:38;1366:7;1375:6;1344:38;;;;;;;;;;;;;;;;;;;;;;;;1092:295;;:::o;2430:277:40:-;2482:7;328:13:11;:11;:13::i;:::-;2497:16:40;2519:12;631:8;2554:21;;2593:4;2576:22;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2576:22:40;;;2554:45;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2554:45:40;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;2537:62:40;;;;;;;;2613:7;2605:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2675:27;2695:3;2700:1;2675:19;:27::i;:::-;2668:34;;;;2430:277;:::o;9356:154::-;9428:7;328:13:11;:11;:13::i;:::-;9450:55:40;9503:1;9450:48;9496:1;9450:41;9489:1;9450:34;9472:11;9450:21;:34::i;:::-;:38;;:41;;;;:::i;:::-;:45;;:48;;;;:::i;:::-;:52;;:55;;;;:::i;:::-;9443:62;;9356:154;;;:::o;1492:770::-;1693:7;1702;328:13:11;:11;:13::i;:::-;1741:1:40;1725:12;:17;;:38;;;;;1762:1;1746:12;:17;;1725:38;1717:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1795:23;1824:25;1855:12;1873:16;408:8;1912:23;;1960:10;1972:12;1986:10;1998:12;2012:8;2022:9;1943:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1943:89:40;;;1912:126;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1912:126:40;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;1895:143:40;;;;;;;;2052:7;2044:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2127:27;2147:3;2152:1;2127:19;:27::i;:::-;2109:45;;2180:28;2200:3;2205:2;2180:19;:28::i;:::-;2160:48;;2222:15;2239:17;2214:43;;;;;;;;1492:770;;;;;;;;;:::o;1970:107:4:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;7974:329:40:-;8052:7;328:13:11;:11;:13::i;:::-;8067:16:40;8089:12;811:9;8124:33;;8175:11;8158:29;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;8158:29:40;;;8124:64;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;8124:64:40;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;8107:81:40;;;;;;;;8202:7;8194:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8271:27;8291:3;8296:1;8271:19;:27::i;:::-;8264:34;;;;7974:329;;;:::o;975:125:11:-;1022:6;:4;:6::i;:::-;1018:78;;;1038:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1018:78;975:125::o;6152:247:111:-;6208:7;6223:11;6237:1;6223:15;;6244:11;6258:1;6244:15;;6270:9;6282:1;6270:13;;6265:114;6289:3;6285:1;:7;6265:114;;;6331:1;6326;6320:3;:7;:12;6316:34;;;6340:10;6348:1;6340:3;:7;;:10;;;;:::i;:::-;6334:16;;6316:34;6371:1;6364:3;:8;;6358:14;;6298:8;6304:1;6298;:5;;:8;;;;:::i;:::-;6294:12;;6265:114;;;;6391:3;6384:10;;;;6152:247;;;:::o;10560:150:40:-;10644:7;10674:30;10694:2;10698:5;10674:19;:30::i;:::-;10666:39;;10659:46;;10560:150;;;;:::o;10023:377::-;10126:7;10232:19;10268:9;10254:11;:23;;;;;;10232:45;;10314:1;10301:9;10287:11;:23;;;;;;:28;10283:113;;;10332:11;10325:18;;;;;10283:113;10371:18;10387:1;10371:11;:15;;:18;;;;:::i;:::-;10364:25;;;10023:377;;;;;:::o;10870:255::-;10954:7;10990:13;11000:2;10990:5;:9;;:13;;;;:::i;:::-;10977:2;:9;:26;;10969:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11034:9;11096:2;11089:5;11085:14;11081:2;11077:23;11071:30;11066:35;;11119:1;11112:8;;;10870:255;;;;:::o;2178:225:4:-;2271:1;2251:22;;:8;:22;;;;2243:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:8;2331:38;;2352:6;;;;;;;;;;;2331:38;;;;;;;;;;;;2388:8;2379:6;;:17;;;;;;;;;;;;;;;;;;2178:225;:::o;6385:143:41:-;6433:11;6471:8;;;;;;;;;;;:27;;;2692:30;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2692:30:41;;;2682:41;;;;;;6471:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6471:51:41;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6471:51:41;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6471:51:41;;;;;;;;;;;;;;;;6452:71;;6385:143;:::o;1274:134:3:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;5802:218:111:-;5885:13;5901:18;5912:6;5901:10;:18::i;:::-;5885:34;;5934:9;:17;5944:6;5934:17;;;;;;;;;;;;;;;:24;5952:5;5934:24;;;;;;;;;;;;;;;;;;;;;5933:25;5925:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6011:4;5984:9;:17;5994:6;5984:17;;;;;;;;;;;;;;;:24;6002:5;5984:24;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;5802:218;;;:::o;4190:135:41:-;4236:9;4270:8;;;;;;;;;;;:27;;;1234:28;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1234:28:41;;;1224:39;;;;;;4270:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4270:49:41;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4270:49:41;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4270:49:41;;;;;;;;;;;;;;;;4253:67;;4190:135;:::o;2112:1185:122:-;2539:22;2564:15;:13;:15::i;:::-;2539:40;;2585:10;:16;;;2609:9;2626:18;:26;;;2660:9;2677:18;:25;;;2710:24;2742:25;2775:24;2585:220;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2585:220:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2585:220:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2585:220:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2585:220:122;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2585:220:122;;;;2811:13;2827:74;2850:9;2861:10;2873:27;2827:22;:74::i;:::-;2811:90;;2931:1;2914:19;;:5;:19;;;;2907:27;;;;2940:10;:16;;;2964:5;2977:18;:26;;;3011:9;3028:18;:25;;;3061:20;3089:21;3118:20;2940:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2940:204:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2940:204:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2940:204:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2940:204:122;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2940:204:122;;;;3150:22;3175:15;:13;:15::i;:::-;3150:40;;3196:10;:38;;;3235:9;3196:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3196:49:122;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3196:49:122;;;;3251:10;:34;;;3286:5;3251:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3251:41:122;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3251:41:122;;;;2112:1185;;;;;;;;;;;;;:::o;788:96:0:-;833:15;867:10;860:17;;788:96;:::o;2159:459:3:-;2217:7;2463:1;2458;:6;2454:45;;;2487:1;2480:8;;;;2454:45;2509:9;2525:1;2521;:5;2509:17;;2553:1;2548;2544;:5;;;;;;:10;2536:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:1;2603:8;;;2159:459;;;;;:::o;834:176::-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;3073:130::-;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3150:46;;3073:130;;;;:::o;650:183:11:-;689:4;701:11;718:13;208:42;718:33;;794:5;782:18;774:26;;826:1;819:4;:8;;;811:17;;;;650:183;:::o;1732:187:3:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;5512:144:41:-;5560:11;5598:8;;;;;;;;;;;:27;;;2261:30;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2261:30:41;;;2251:41;;;;;;5598:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5598:52:41;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5598:52:41;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5598:52:41;;;;;;;;;;;;;;;;5579:72;;5512:144;:::o;3718:338:3:-;3804:7;3901:1;3897;:5;3904:12;3889:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3889:28:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3927:9;3943:1;3939;:5;;;;;;3927:17;;4048:1;4041:8;;;3718:338;;;;;:::o",
  "source": "pragma solidity ^0.5.13;\n\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\nimport \"../common/interfaces/ICeloVersionedContract.sol\";\n\nimport \"./SlasherUtil.sol\";\nimport \"../../contracts-0.8/common/IsL2Check.sol\";\n\ncontract DoubleSigningSlasher is ICeloVersionedContract, SlasherUtil {\n  using SafeMath for uint256;\n\n  // For each signer address, check if a block header has already been slashed\n  mapping(address => mapping(bytes32 => bool)) isSlashed;\n\n  event SlashingIncentivesSet(uint256 penalty, uint256 reward);\n  event DoubleSigningSlashPerformed(address indexed validator, uint256 indexed blockNumber);\n\n  /**\n   * @notice Sets initialized == true on implementation contracts\n   * @param test Set to true to skip implementation initialization\n   */\n  constructor(bool test) public SlasherUtil(test) {}\n\n  /**\n   * @notice Used in place of the constructor to allow the contract to be upgradable via proxy.\n   * @param registryAddress The address of the registry core smart contract.\n   * @param _penalty Penalty for the slashed signer.\n   * @param _reward Reward that the observer gets.\n   */\n  function initialize(\n    address registryAddress,\n    uint256 _penalty,\n    uint256 _reward\n  ) external initializer {\n    _transferOwnership(msg.sender);\n    setRegistry(registryAddress);\n    setSlashingIncentives(_penalty, _reward);\n  }\n\n  /**\n   * @notice Returns the storage, major, minor, and patch version of the contract.\n   * @return Storage version of the contract.\n   * @return Major version of the contract.\n   * @return Minor version of the contract.\n   * @return Patch version of the contract.\n   */\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256) {\n    return (1, 1, 1, 1);\n  }\n\n  /**\n   * @notice Requires that `eval` returns true and that this evidence has not\n   * already been used to slash `signer`.\n   * If so, fetches the `account` associated with `signer` and the group that\n   * `signer` was a member of during the corresponding epoch.\n   * Then, calls `LockedGold.slash` on both the validator and group accounts.\n   * Calls `Validators.removeSlashedMember` to remove the validator from its\n   * current group if it is a member of one.\n   * Finally, stores that hash(signer, blockNumber) has been slashed.\n   * @param signer The signer to be slashed.\n   * @param index Validator index at the block.\n   * @param headerA First double signed block header.\n   * @param headerB Second double signed block header.\n   * @param groupMembershipHistoryIndex Group membership index from where the group should be found.\n   * @param validatorElectionLessers Lesser pointers for validator slashing.\n   * @param validatorElectionGreaters Greater pointers for validator slashing.\n   * @param validatorElectionIndices Vote indices for validator slashing.\n   * @param groupElectionLessers Lesser pointers for group slashing.\n   * @param groupElectionGreaters Greater pointers for group slashing.\n   * @param groupElectionIndices Vote indices for group slashing.\n   */\n  function slash(\n    address signer,\n    uint256 index,\n    bytes memory headerA,\n    bytes memory headerB,\n    uint256 groupMembershipHistoryIndex,\n    address[] memory validatorElectionLessers,\n    address[] memory validatorElectionGreaters,\n    uint256[] memory validatorElectionIndices,\n    address[] memory groupElectionLessers,\n    address[] memory groupElectionGreaters,\n    uint256[] memory groupElectionIndices\n  ) public onlyL1 {\n    checkIfAlreadySlashed(signer, headerA);\n    checkIfAlreadySlashed(signer, headerB);\n    uint256 blockNumber = checkForDoubleSigning(signer, index, headerA, headerB);\n    address validator = getAccounts().signerToAccount(signer);\n    performSlashing(\n      validator,\n      msg.sender,\n      blockNumber,\n      groupMembershipHistoryIndex,\n      validatorElectionLessers,\n      validatorElectionGreaters,\n      validatorElectionIndices,\n      groupElectionLessers,\n      groupElectionGreaters,\n      groupElectionIndices\n    );\n    emit DoubleSigningSlashPerformed(validator, blockNumber);\n  }\n\n  /**\n   * @notice Given two RLP encoded blocks, calls into precompiles to require that\n   * the two block hashes are different, have the same height, have a\n   * quorum of signatures, and that `signer` was part of the quorum.\n   * @param signer The signer to be slashed.\n   * @param index Validator index at the block.\n   * @param headerA First double signed block header.\n   * @param headerB Second double signed block header.\n   * @return Block number where double signing occured. Throws if no double signing is detected.\n   */\n  function checkForDoubleSigning(\n    address signer,\n    uint256 index,\n    bytes memory headerA,\n    bytes memory headerB\n  ) public view onlyL1 returns (uint256) {\n    require(hashHeader(headerA) != hashHeader(headerB), \"Block hashes have to be different\");\n    uint256 blockNumber = getBlockNumberFromHeader(headerA);\n    require(\n      blockNumber == getBlockNumberFromHeader(headerB),\n      \"Block headers are from different height\"\n    );\n    require(index < numberValidatorsInSet(blockNumber), \"Bad validator index\");\n    require(\n      signer == validatorSignerAddressFromSet(index, blockNumber),\n      \"Wasn't a signer with given index\"\n    );\n    uint256 mapA = uint256(getVerifiedSealBitmapFromHeader(headerA));\n    uint256 mapB = uint256(getVerifiedSealBitmapFromHeader(headerB));\n    require(mapA & (1 << index) != 0, \"Didn't sign first block\");\n    require(mapB & (1 << index) != 0, \"Didn't sign second block\");\n    require(\n      countSetBits(mapA) >= minQuorumSize(blockNumber),\n      \"Not enough signers in the first block\"\n    );\n    require(\n      countSetBits(mapB) >= minQuorumSize(blockNumber),\n      \"Not enough signers in the second block\"\n    );\n    return blockNumber;\n  }\n\n  function checkIfAlreadySlashed(address signer, bytes memory header) internal {\n    bytes32 bhash = hashHeader(header);\n    require(!isSlashed[signer][bhash], \"Already slashed\");\n    isSlashed[signer][bhash] = true;\n  }\n\n  /**\n   * @notice Counts the number of set bits (Hamming weight).\n   * @param v Bitmap.\n   * @return Number of set bits.\n   */\n  function countSetBits(uint256 v) internal pure returns (uint256) {\n    uint256 res = 0;\n    uint256 acc = v;\n    for (uint256 i = 0; i < 256; i = i.add(1)) {\n      if (acc & 1 == 1) res = res.add(1);\n      acc = acc >> 1;\n    }\n    return res;\n  }\n}\n",
  "sourcePath": "/Users/beaver/Development/temp/celo-monorepo/packages/protocol/contracts/governance/DoubleSigningSlasher.sol",
  "ast": {
    "absolutePath": "project:/contracts/governance/DoubleSigningSlasher.sol",
    "exportedSymbols": {
      "DoubleSigningSlasher": [
        27611
      ]
    },
    "id": 27612,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 27238,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:111"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 27239,
        "nodeType": "ImportDirective",
        "scope": 27612,
        "sourceUnit": 364,
        "src": "26:59:111",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/interfaces/ICeloVersionedContract.sol",
        "file": "../common/interfaces/ICeloVersionedContract.sol",
        "id": 27240,
        "nodeType": "ImportDirective",
        "scope": 27612,
        "sourceUnit": 14595,
        "src": "86:57:111",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/SlasherUtil.sol",
        "file": "./SlasherUtil.sol",
        "id": 27241,
        "nodeType": "ImportDirective",
        "scope": 27612,
        "sourceUnit": 42494,
        "src": "145:27:111",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts-0.8/common/IsL2Check.sol",
        "file": "../../contracts-0.8/common/IsL2Check.sol",
        "id": 27242,
        "nodeType": "ImportDirective",
        "scope": 27612,
        "sourceUnit": 1631,
        "src": "173:50:111",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 27243,
              "name": "ICeloVersionedContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14594,
              "src": "258:22:111",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICeloVersionedContract_$14594",
                "typeString": "contract ICeloVersionedContract"
              }
            },
            "id": 27244,
            "nodeType": "InheritanceSpecifier",
            "src": "258:22:111"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 27245,
              "name": "SlasherUtil",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 42493,
              "src": "282:11:111",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SlasherUtil_$42493",
                "typeString": "contract SlasherUtil"
              }
            },
            "id": 27246,
            "nodeType": "InheritanceSpecifier",
            "src": "282:11:111"
          }
        ],
        "contractDependencies": [
          26,
          481,
          1630,
          9570,
          13059,
          13582,
          14594,
          42493
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 27611,
        "linearizedBaseContracts": [
          27611,
          42493,
          13059,
          1630,
          13582,
          9570,
          481,
          26,
          14594
        ],
        "name": "DoubleSigningSlasher",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 27249,
            "libraryName": {
              "contractScope": null,
              "id": 27247,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 363,
              "src": "304:8:111",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$363",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "298:27:111",
            "typeName": {
              "id": 27248,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "317:7:111",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 27255,
            "name": "isSlashed",
            "nodeType": "VariableDeclaration",
            "scope": 27611,
            "src": "408:54:111",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(bytes32 => bool))"
            },
            "typeName": {
              "id": 27254,
              "keyType": {
                "id": 27250,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "416:7:111",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "408:44:111",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(bytes32 => bool))"
              },
              "valueType": {
                "id": 27253,
                "keyType": {
                  "id": 27251,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "435:7:111",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "427:24:111",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                  "typeString": "mapping(bytes32 => bool)"
                },
                "valueType": {
                  "id": 27252,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "446:4:111",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 27261,
            "name": "SlashingIncentivesSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 27260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27257,
                  "indexed": false,
                  "name": "penalty",
                  "nodeType": "VariableDeclaration",
                  "scope": 27261,
                  "src": "495:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27256,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "495:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27259,
                  "indexed": false,
                  "name": "reward",
                  "nodeType": "VariableDeclaration",
                  "scope": 27261,
                  "src": "512:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27258,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "512:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "494:33:111"
            },
            "src": "467:61:111"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 27267,
            "name": "DoubleSigningSlashPerformed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 27266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27263,
                  "indexed": true,
                  "name": "validator",
                  "nodeType": "VariableDeclaration",
                  "scope": 27267,
                  "src": "565:25:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "565:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27265,
                  "indexed": true,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 27267,
                  "src": "592:27:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27264,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "592:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "564:56:111"
            },
            "src": "531:90:111"
          },
          {
            "body": {
              "id": 27275,
              "nodeType": "Block",
              "src": "818:2:111",
              "statements": []
            },
            "documentation": "@notice Sets initialized == true on implementation contracts\n@param test Set to true to skip implementation initialization",
            "id": 27276,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 27272,
                    "name": "test",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27269,
                    "src": "812:4:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 27273,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 27271,
                  "name": "SlasherUtil",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 42493,
                  "src": "800:11:111",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_SlasherUtil_$42493_$",
                    "typeString": "type(contract SlasherUtil)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "800:17:111"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27269,
                  "name": "test",
                  "nodeType": "VariableDeclaration",
                  "scope": 27276,
                  "src": "782:9:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 27268,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "782:4:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "781:11:111"
            },
            "returnParameters": {
              "id": 27274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "818:0:111"
            },
            "scope": 27611,
            "src": "770:50:111",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 27301,
              "nodeType": "Block",
              "src": "1230:121:111",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 27288,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59923,
                          "src": "1255:3:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 27289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1255:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 27287,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 480,
                      "src": "1236:18:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 27290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1236:30:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27291,
                  "nodeType": "ExpressionStatement",
                  "src": "1236:30:111"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 27293,
                        "name": "registryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27278,
                        "src": "1284:15:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 27292,
                      "name": "setRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13334,
                      "src": "1272:11:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 27294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1272:28:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27295,
                  "nodeType": "ExpressionStatement",
                  "src": "1272:28:111"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 27297,
                        "name": "_penalty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27280,
                        "src": "1328:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 27298,
                        "name": "_reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27282,
                        "src": "1338:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 27296,
                      "name": "setSlashingIncentives",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42360,
                      "src": "1306:21:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 27299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1306:40:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27300,
                  "nodeType": "ExpressionStatement",
                  "src": "1306:40:111"
                }
              ]
            },
            "documentation": "@notice Used in place of the constructor to allow the contract to be upgradable via proxy.\n@param registryAddress The address of the registry core smart contract.\n@param _penalty Penalty for the slashed signer.\n@param _reward Reward that the observer gets.",
            "id": 27302,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 27285,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 27284,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9555,
                  "src": "1218:11:111",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1218:11:111"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27278,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 27302,
                  "src": "1138:23:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27277,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1138:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27280,
                  "name": "_penalty",
                  "nodeType": "VariableDeclaration",
                  "scope": 27302,
                  "src": "1167:16:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27279,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1167:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27282,
                  "name": "_reward",
                  "nodeType": "VariableDeclaration",
                  "scope": 27302,
                  "src": "1189:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27281,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1189:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1132:76:111"
            },
            "returnParameters": {
              "id": 27286,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1230:0:111"
            },
            "scope": 27611,
            "src": "1113:238:111",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 27319,
              "nodeType": "Block",
              "src": "1715:30:111",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 27313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1729:1:111",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 27314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1732:1:111",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 27315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1735:1:111",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 27316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1738:1:111",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "id": 27317,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1728:12:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_1_by_1_$_t_rational_1_by_1_$_t_rational_1_by_1_$_t_rational_1_by_1_$",
                      "typeString": "tuple(int_const 1,int_const 1,int_const 1,int_const 1)"
                    }
                  },
                  "functionReturnParameters": 27312,
                  "id": 27318,
                  "nodeType": "Return",
                  "src": "1721:19:111"
                }
              ]
            },
            "documentation": "@notice Returns the storage, major, minor, and patch version of the contract.\n@return Storage version of the contract.\n@return Major version of the contract.\n@return Minor version of the contract.\n@return Patch version of the contract.",
            "id": 27320,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVersionNumber",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1653:2:111"
            },
            "returnParameters": {
              "id": 27312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27305,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 27320,
                  "src": "1679:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27304,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1679:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27307,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 27320,
                  "src": "1688:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27306,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1688:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27309,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 27320,
                  "src": "1697:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27308,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1697:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27311,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 27320,
                  "src": "1706:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1706:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1678:36:111"
            },
            "scope": 27611,
            "src": "1628:117:111",
            "stateMutability": "pure",
            "superFunction": 14593,
            "visibility": "external"
          },
          {
            "body": {
              "id": 27399,
              "nodeType": "Block",
              "src": "3467:598:111",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 27354,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27322,
                        "src": "3495:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 27355,
                        "name": "headerA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27326,
                        "src": "3503:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 27353,
                      "name": "checkIfAlreadySlashed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27557,
                      "src": "3473:21:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory)"
                      }
                    },
                    "id": 27356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3473:38:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27357,
                  "nodeType": "ExpressionStatement",
                  "src": "3473:38:111"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 27359,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27322,
                        "src": "3539:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 27360,
                        "name": "headerB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27328,
                        "src": "3547:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 27358,
                      "name": "checkIfAlreadySlashed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27557,
                      "src": "3517:21:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory)"
                      }
                    },
                    "id": 27361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3517:38:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27362,
                  "nodeType": "ExpressionStatement",
                  "src": "3517:38:111"
                },
                {
                  "assignments": [
                    27364
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27364,
                      "name": "blockNumber",
                      "nodeType": "VariableDeclaration",
                      "scope": 27399,
                      "src": "3561:19:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 27363,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3561:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 27371,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 27366,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27322,
                        "src": "3605:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 27367,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27324,
                        "src": "3613:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 27368,
                        "name": "headerA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27326,
                        "src": "3620:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 27369,
                        "name": "headerB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27328,
                        "src": "3629:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 27365,
                      "name": "checkForDoubleSigning",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27525,
                      "src": "3583:21:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,bytes memory,bytes memory) view returns (uint256)"
                      }
                    },
                    "id": 27370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3583:54:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3561:76:111"
                },
                {
                  "assignments": [
                    27373
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27373,
                      "name": "validator",
                      "nodeType": "VariableDeclaration",
                      "scope": 27399,
                      "src": "3643:17:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 27372,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3643:7:111",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 27379,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 27377,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27322,
                        "src": "3693:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 27374,
                          "name": "getAccounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13347,
                          "src": "3663:11:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IAccounts_$14468_$",
                            "typeString": "function () view returns (contract IAccounts)"
                          }
                        },
                        "id": 27375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3663:13:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccounts_$14468",
                          "typeString": "contract IAccounts"
                        }
                      },
                      "id": 27376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "signerToAccount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14366,
                      "src": "3663:29:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 27378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3663:37:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3643:57:111"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 27381,
                        "name": "validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27373,
                        "src": "3729:9:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 27382,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59923,
                          "src": "3746:3:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 27383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3746:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 27384,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27364,
                        "src": "3764:11:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 27385,
                        "name": "groupMembershipHistoryIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27330,
                        "src": "3783:27:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 27386,
                        "name": "validatorElectionLessers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27333,
                        "src": "3818:24:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 27387,
                        "name": "validatorElectionGreaters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27336,
                        "src": "3850:25:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 27388,
                        "name": "validatorElectionIndices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27339,
                        "src": "3883:24:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 27389,
                        "name": "groupElectionLessers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27342,
                        "src": "3915:20:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 27390,
                        "name": "groupElectionGreaters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27345,
                        "src": "3943:21:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 27391,
                        "name": "groupElectionIndices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27348,
                        "src": "3972:20:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 27380,
                      "name": "performSlashing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42492,
                      "src": "3706:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address[] memory,address[] memory,uint256[] memory,address[] memory,address[] memory,uint256[] memory)"
                      }
                    },
                    "id": 27392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3706:292:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27393,
                  "nodeType": "ExpressionStatement",
                  "src": "3706:292:111"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 27395,
                        "name": "validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27373,
                        "src": "4037:9:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 27396,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27364,
                        "src": "4048:11:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 27394,
                      "name": "DoubleSigningSlashPerformed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27267,
                      "src": "4009:27:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 27397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4009:51:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27398,
                  "nodeType": "EmitStatement",
                  "src": "4004:56:111"
                }
              ]
            },
            "documentation": "@notice Requires that `eval` returns true and that this evidence has not\nalready been used to slash `signer`.\nIf so, fetches the `account` associated with `signer` and the group that\n`signer` was a member of during the corresponding epoch.\nThen, calls `LockedGold.slash` on both the validator and group accounts.\nCalls `Validators.removeSlashedMember` to remove the validator from its\ncurrent group if it is a member of one.\nFinally, stores that hash(signer, blockNumber) has been slashed.\n@param signer The signer to be slashed.\n@param index Validator index at the block.\n@param headerA First double signed block header.\n@param headerB Second double signed block header.\n@param groupMembershipHistoryIndex Group membership index from where the group should be found.\n@param validatorElectionLessers Lesser pointers for validator slashing.\n@param validatorElectionGreaters Greater pointers for validator slashing.\n@param validatorElectionIndices Vote indices for validator slashing.\n@param groupElectionLessers Lesser pointers for group slashing.\n@param groupElectionGreaters Greater pointers for group slashing.\n@param groupElectionIndices Vote indices for group slashing.",
            "id": 27400,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 27351,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 27350,
                  "name": "onlyL1",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1585,
                  "src": "3460:6:111",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3460:6:111"
              }
            ],
            "name": "slash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27322,
                  "name": "signer",
                  "nodeType": "VariableDeclaration",
                  "scope": 27400,
                  "src": "3050:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27321,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3050:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27324,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 27400,
                  "src": "3070:13:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27323,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3070:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27326,
                  "name": "headerA",
                  "nodeType": "VariableDeclaration",
                  "scope": 27400,
                  "src": "3089:20:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 27325,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3089:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27328,
                  "name": "headerB",
                  "nodeType": "VariableDeclaration",
                  "scope": 27400,
                  "src": "3115:20:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 27327,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3115:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27330,
                  "name": "groupMembershipHistoryIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 27400,
                  "src": "3141:35:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27329,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3141:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27333,
                  "name": "validatorElectionLessers",
                  "nodeType": "VariableDeclaration",
                  "scope": 27400,
                  "src": "3182:41:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 27331,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3182:7:111",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 27332,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3182:9:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27336,
                  "name": "validatorElectionGreaters",
                  "nodeType": "VariableDeclaration",
                  "scope": 27400,
                  "src": "3229:42:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 27334,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3229:7:111",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 27335,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3229:9:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27339,
                  "name": "validatorElectionIndices",
                  "nodeType": "VariableDeclaration",
                  "scope": 27400,
                  "src": "3277:41:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 27337,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3277:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 27338,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3277:9:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27342,
                  "name": "groupElectionLessers",
                  "nodeType": "VariableDeclaration",
                  "scope": 27400,
                  "src": "3324:37:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 27340,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3324:7:111",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 27341,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3324:9:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27345,
                  "name": "groupElectionGreaters",
                  "nodeType": "VariableDeclaration",
                  "scope": 27400,
                  "src": "3367:38:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 27343,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3367:7:111",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 27344,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3367:9:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27348,
                  "name": "groupElectionIndices",
                  "nodeType": "VariableDeclaration",
                  "scope": 27400,
                  "src": "3411:37:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 27346,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3411:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 27347,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3411:9:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3044:408:111"
            },
            "returnParameters": {
              "id": 27352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3467:0:111"
            },
            "scope": 27611,
            "src": "3030:1035:111",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 27524,
              "nodeType": "Block",
              "src": "4764:1034:111",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 27422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 27417,
                              "name": "headerA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27406,
                              "src": "4789:7:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 27416,
                            "name": "hashHeader",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12871,
                            "src": "4778:10:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) view returns (bytes32)"
                            }
                          },
                          "id": 27418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4778:19:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 27420,
                              "name": "headerB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27408,
                              "src": "4812:7:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 27419,
                            "name": "hashHeader",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12871,
                            "src": "4801:10:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) view returns (bytes32)"
                            }
                          },
                          "id": 27421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4801:19:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "4778:42:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "426c6f636b20686173686573206861766520746f20626520646966666572656e74",
                        "id": 27423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4822:35:111",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c275c2889dc686cb8720d0d54bc75b6926cf0cae6a6242008808575a3adcef1",
                          "typeString": "literal_string \"Block hashes have to be different\""
                        },
                        "value": "Block hashes have to be different"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c275c2889dc686cb8720d0d54bc75b6926cf0cae6a6242008808575a3adcef1",
                          "typeString": "literal_string \"Block hashes have to be different\""
                        }
                      ],
                      "id": 27415,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59926,
                        59927
                      ],
                      "referencedDeclaration": 59927,
                      "src": "4770:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 27424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4770:88:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27425,
                  "nodeType": "ExpressionStatement",
                  "src": "4770:88:111"
                },
                {
                  "assignments": [
                    27427
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27427,
                      "name": "blockNumber",
                      "nodeType": "VariableDeclaration",
                      "scope": 27524,
                      "src": "4864:19:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 27426,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4864:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 27431,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 27429,
                        "name": "headerA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27406,
                        "src": "4911:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 27428,
                      "name": "getBlockNumberFromHeader",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12833,
                      "src": "4886:24:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (bytes memory) view returns (uint256)"
                      }
                    },
                    "id": 27430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4886:33:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4864:55:111"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 27437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 27433,
                          "name": "blockNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27427,
                          "src": "4940:11:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 27435,
                              "name": "headerB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27408,
                              "src": "4980:7:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 27434,
                            "name": "getBlockNumberFromHeader",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12833,
                            "src": "4955:24:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (bytes memory) view returns (uint256)"
                            }
                          },
                          "id": 27436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4955:33:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4940:48:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "426c6f636b2068656164657273206172652066726f6d20646966666572656e7420686569676874",
                        "id": 27438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4996:41:111",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96dd19feaf254839e03819a3b1764a18617bba8aba2dbfedb0c1215f10bf0312",
                          "typeString": "literal_string \"Block headers are from different height\""
                        },
                        "value": "Block headers are from different height"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_96dd19feaf254839e03819a3b1764a18617bba8aba2dbfedb0c1215f10bf0312",
                          "typeString": "literal_string \"Block headers are from different height\""
                        }
                      ],
                      "id": 27432,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59926,
                        59927
                      ],
                      "referencedDeclaration": 59927,
                      "src": "4925:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 27439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4925:118:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27440,
                  "nodeType": "ExpressionStatement",
                  "src": "4925:118:111"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 27446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 27442,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27404,
                          "src": "5057:5:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 27444,
                              "name": "blockNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27427,
                              "src": "5087:11:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 27443,
                            "name": "numberValidatorsInSet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12763,
                            "src": "5065:21:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 27445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5065:34:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5057:42:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4261642076616c696461746f7220696e646578",
                        "id": 27447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5101:21:111",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99a49fec8ee0bb913c0c3a07cf68280d812f5400720672ede22b22a3153c45df",
                          "typeString": "literal_string \"Bad validator index\""
                        },
                        "value": "Bad validator index"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99a49fec8ee0bb913c0c3a07cf68280d812f5400720672ede22b22a3153c45df",
                          "typeString": "literal_string \"Bad validator index\""
                        }
                      ],
                      "id": 27441,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59926,
                        59927
                      ],
                      "referencedDeclaration": 59927,
                      "src": "5049:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 27448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5049:74:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27449,
                  "nodeType": "ExpressionStatement",
                  "src": "5049:74:111"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 27456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 27451,
                          "name": "signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27402,
                          "src": "5144:6:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 27453,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27404,
                              "src": "5184:5:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 27454,
                              "name": "blockNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27427,
                              "src": "5191:11:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 27452,
                            "name": "validatorSignerAddressFromSet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12686,
                            "src": "5154:29:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256,uint256) view returns (address)"
                            }
                          },
                          "id": 27455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5154:49:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5144:59:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5761736e27742061207369676e6572207769746820676976656e20696e646578",
                        "id": 27457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5211:34:111",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57bd14ef8908e66649faa619ff459e8d84d24af75ba18d344f0eb53d1247be3e",
                          "typeString": "literal_string \"Wasn't a signer with given index\""
                        },
                        "value": "Wasn't a signer with given index"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57bd14ef8908e66649faa619ff459e8d84d24af75ba18d344f0eb53d1247be3e",
                          "typeString": "literal_string \"Wasn't a signer with given index\""
                        }
                      ],
                      "id": 27450,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59926,
                        59927
                      ],
                      "referencedDeclaration": 59927,
                      "src": "5129:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 27458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5129:122:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27459,
                  "nodeType": "ExpressionStatement",
                  "src": "5129:122:111"
                },
                {
                  "assignments": [
                    27461
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27461,
                      "name": "mapA",
                      "nodeType": "VariableDeclaration",
                      "scope": 27524,
                      "src": "5257:12:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 27460,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5257:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 27467,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 27464,
                            "name": "headerA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27406,
                            "src": "5312:7:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 27463,
                          "name": "getVerifiedSealBitmapFromHeader",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12947,
                          "src": "5280:31:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) view returns (bytes32)"
                          }
                        },
                        "id": 27465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5280:40:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 27462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5272:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": "uint256"
                    },
                    "id": 27466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5272:49:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5257:64:111"
                },
                {
                  "assignments": [
                    27469
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27469,
                      "name": "mapB",
                      "nodeType": "VariableDeclaration",
                      "scope": 27524,
                      "src": "5327:12:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 27468,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5327:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 27475,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 27472,
                            "name": "headerB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27408,
                            "src": "5382:7:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 27471,
                          "name": "getVerifiedSealBitmapFromHeader",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12947,
                          "src": "5350:31:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) view returns (bytes32)"
                          }
                        },
                        "id": 27473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5350:40:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 27470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5342:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": "uint256"
                    },
                    "id": 27474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5342:49:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5327:64:111"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 27484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 27482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 27477,
                            "name": "mapA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27461,
                            "src": "5405:4:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 27480,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 27478,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5413:1:111",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<<",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 27479,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 27404,
                                  "src": "5418:5:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5413:10:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 27481,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5412:12:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5405:19:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 27483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5428:1:111",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5405:24:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4469646e2774207369676e20666972737420626c6f636b",
                        "id": 27485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5431:25:111",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2fd323d1f797a03ec4a80d0e74fa4e6c078a9d8b51f1d84867e74f486dff2240",
                          "typeString": "literal_string \"Didn't sign first block\""
                        },
                        "value": "Didn't sign first block"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2fd323d1f797a03ec4a80d0e74fa4e6c078a9d8b51f1d84867e74f486dff2240",
                          "typeString": "literal_string \"Didn't sign first block\""
                        }
                      ],
                      "id": 27476,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59926,
                        59927
                      ],
                      "referencedDeclaration": 59927,
                      "src": "5397:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 27486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5397:60:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27487,
                  "nodeType": "ExpressionStatement",
                  "src": "5397:60:111"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 27496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 27494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 27489,
                            "name": "mapB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27469,
                            "src": "5471:4:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 27492,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 27490,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5479:1:111",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<<",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 27491,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 27404,
                                  "src": "5484:5:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5479:10:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 27493,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5478:12:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5471:19:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 27495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5494:1:111",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5471:24:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4469646e2774207369676e207365636f6e6420626c6f636b",
                        "id": 27497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5497:26:111",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cb6973d296eef450a0a2ddc89eddef67d92faa18d5b6f63b15f4bdf7b3ca060b",
                          "typeString": "literal_string \"Didn't sign second block\""
                        },
                        "value": "Didn't sign second block"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cb6973d296eef450a0a2ddc89eddef67d92faa18d5b6f63b15f4bdf7b3ca060b",
                          "typeString": "literal_string \"Didn't sign second block\""
                        }
                      ],
                      "id": 27488,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59926,
                        59927
                      ],
                      "referencedDeclaration": 59927,
                      "src": "5463:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 27498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5463:61:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27499,
                  "nodeType": "ExpressionStatement",
                  "src": "5463:61:111"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 27507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 27502,
                              "name": "mapA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27461,
                              "src": "5558:4:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 27501,
                            "name": "countSetBits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27610,
                            "src": "5545:12:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) pure returns (uint256)"
                            }
                          },
                          "id": 27503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5545:18:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 27505,
                              "name": "blockNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27427,
                              "src": "5581:11:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 27504,
                            "name": "minQuorumSize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12970,
                            "src": "5567:13:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 27506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5567:26:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5545:48:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420656e6f756768207369676e65727320696e2074686520666972737420626c6f636b",
                        "id": 27508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5601:39:111",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a5af79ab6a0f711e9ae6e57b027890bf933de3c04ab31e5825e8208fce7306d",
                          "typeString": "literal_string \"Not enough signers in the first block\""
                        },
                        "value": "Not enough signers in the first block"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a5af79ab6a0f711e9ae6e57b027890bf933de3c04ab31e5825e8208fce7306d",
                          "typeString": "literal_string \"Not enough signers in the first block\""
                        }
                      ],
                      "id": 27500,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59926,
                        59927
                      ],
                      "referencedDeclaration": 59927,
                      "src": "5530:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 27509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5530:116:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27510,
                  "nodeType": "ExpressionStatement",
                  "src": "5530:116:111"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 27518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 27513,
                              "name": "mapB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27469,
                              "src": "5680:4:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 27512,
                            "name": "countSetBits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27610,
                            "src": "5667:12:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) pure returns (uint256)"
                            }
                          },
                          "id": 27514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5667:18:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 27516,
                              "name": "blockNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27427,
                              "src": "5703:11:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 27515,
                            "name": "minQuorumSize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12970,
                            "src": "5689:13:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 27517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5689:26:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5667:48:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420656e6f756768207369676e65727320696e20746865207365636f6e6420626c6f636b",
                        "id": 27519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5723:40:111",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c45f12f9ed0d604ddde3a3995dd39590ae26e2e1664a4ef8f63b5677f980a2b3",
                          "typeString": "literal_string \"Not enough signers in the second block\""
                        },
                        "value": "Not enough signers in the second block"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c45f12f9ed0d604ddde3a3995dd39590ae26e2e1664a4ef8f63b5677f980a2b3",
                          "typeString": "literal_string \"Not enough signers in the second block\""
                        }
                      ],
                      "id": 27511,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59926,
                        59927
                      ],
                      "referencedDeclaration": 59927,
                      "src": "5652:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 27520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5652:117:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27521,
                  "nodeType": "ExpressionStatement",
                  "src": "5652:117:111"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 27522,
                    "name": "blockNumber",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27427,
                    "src": "5782:11:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 27414,
                  "id": 27523,
                  "nodeType": "Return",
                  "src": "5775:18:111"
                }
              ]
            },
            "documentation": "@notice Given two RLP encoded blocks, calls into precompiles to require that\nthe two block hashes are different, have the same height, have a\nquorum of signatures, and that `signer` was part of the quorum.\n@param signer The signer to be slashed.\n@param index Validator index at the block.\n@param headerA First double signed block header.\n@param headerB Second double signed block header.\n@return Block number where double signing occured. Throws if no double signing is detected.",
            "id": 27525,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 27411,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 27410,
                  "name": "onlyL1",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1585,
                  "src": "4739:6:111",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4739:6:111"
              }
            ],
            "name": "checkForDoubleSigning",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27402,
                  "name": "signer",
                  "nodeType": "VariableDeclaration",
                  "scope": 27525,
                  "src": "4637:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27401,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4637:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27404,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 27525,
                  "src": "4657:13:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27403,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4657:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27406,
                  "name": "headerA",
                  "nodeType": "VariableDeclaration",
                  "scope": 27525,
                  "src": "4676:20:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 27405,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4676:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27408,
                  "name": "headerB",
                  "nodeType": "VariableDeclaration",
                  "scope": 27525,
                  "src": "4702:20:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 27407,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4702:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4631:95:111"
            },
            "returnParameters": {
              "id": 27414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27413,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 27525,
                  "src": "4755:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27412,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4755:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4754:9:111"
            },
            "scope": 27611,
            "src": "4601:1197:111",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 27556,
              "nodeType": "Block",
              "src": "5879:141:111",
              "statements": [
                {
                  "assignments": [
                    27533
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27533,
                      "name": "bhash",
                      "nodeType": "VariableDeclaration",
                      "scope": 27556,
                      "src": "5885:13:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 27532,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5885:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 27537,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 27535,
                        "name": "header",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27529,
                        "src": "5912:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 27534,
                      "name": "hashHeader",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12871,
                      "src": "5901:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) view returns (bytes32)"
                      }
                    },
                    "id": 27536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5901:18:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5885:34:111"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 27544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5933:25:111",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 27539,
                              "name": "isSlashed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27255,
                              "src": "5934:9:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(bytes32 => bool))"
                              }
                            },
                            "id": 27541,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 27540,
                              "name": "signer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27527,
                              "src": "5944:6:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5934:17:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 27543,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 27542,
                            "name": "bhash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27533,
                            "src": "5952:5:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5934:24:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416c726561647920736c6173686564",
                        "id": 27545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5960:17:111",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75f41e97fb3390ecdc2399965021eafce663917e8343f87bf83e272c0beb7256",
                          "typeString": "literal_string \"Already slashed\""
                        },
                        "value": "Already slashed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75f41e97fb3390ecdc2399965021eafce663917e8343f87bf83e272c0beb7256",
                          "typeString": "literal_string \"Already slashed\""
                        }
                      ],
                      "id": 27538,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59926,
                        59927
                      ],
                      "referencedDeclaration": 59927,
                      "src": "5925:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 27546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5925:53:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27547,
                  "nodeType": "ExpressionStatement",
                  "src": "5925:53:111"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 27554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 27548,
                          "name": "isSlashed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27255,
                          "src": "5984:9:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => bool))"
                          }
                        },
                        "id": 27551,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 27549,
                          "name": "signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27527,
                          "src": "5994:6:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5984:17:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 27552,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 27550,
                        "name": "bhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27533,
                        "src": "6002:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5984:24:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 27553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6011:4:111",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5984:31:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 27555,
                  "nodeType": "ExpressionStatement",
                  "src": "5984:31:111"
                }
              ]
            },
            "documentation": null,
            "id": 27557,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkIfAlreadySlashed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27527,
                  "name": "signer",
                  "nodeType": "VariableDeclaration",
                  "scope": 27557,
                  "src": "5833:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27526,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5833:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27529,
                  "name": "header",
                  "nodeType": "VariableDeclaration",
                  "scope": 27557,
                  "src": "5849:19:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 27528,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5849:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5832:37:111"
            },
            "returnParameters": {
              "id": 27531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5879:0:111"
            },
            "scope": 27611,
            "src": "5802:218:111",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 27609,
              "nodeType": "Block",
              "src": "6217:182:111",
              "statements": [
                {
                  "assignments": [
                    27565
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27565,
                      "name": "res",
                      "nodeType": "VariableDeclaration",
                      "scope": 27609,
                      "src": "6223:11:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 27564,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6223:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 27567,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 27566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6237:1:111",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6223:15:111"
                },
                {
                  "assignments": [
                    27569
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27569,
                      "name": "acc",
                      "nodeType": "VariableDeclaration",
                      "scope": 27609,
                      "src": "6244:11:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 27568,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6244:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 27571,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 27570,
                    "name": "v",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27559,
                    "src": "6258:1:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6244:15:111"
                },
                {
                  "body": {
                    "id": 27605,
                    "nodeType": "Block",
                    "src": "6308:71:111",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 27590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 27588,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 27586,
                              "name": "acc",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27569,
                              "src": "6320:3:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 27587,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6326:1:111",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "6320:7:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 27589,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6331:1:111",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "6320:12:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 27598,
                        "nodeType": "IfStatement",
                        "src": "6316:34:111",
                        "trueBody": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 27596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "id": 27591,
                              "name": "res",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27565,
                              "src": "6334:3:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 27594,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6348:1:111",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 27592,
                                  "name": "res",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 27565,
                                  "src": "6340:3:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 27593,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "add",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 203,
                                "src": "6340:7:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 27595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6340:10:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6334:16:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 27597,
                          "nodeType": "ExpressionStatement",
                          "src": "6334:16:111"
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 27603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 27599,
                            "name": "acc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27569,
                            "src": "6358:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 27602,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 27600,
                              "name": "acc",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27569,
                              "src": "6364:3:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">>",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 27601,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6371:1:111",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "6364:8:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6358:14:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 27604,
                        "nodeType": "ExpressionStatement",
                        "src": "6358:14:111"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 27578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 27576,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27573,
                      "src": "6285:1:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "323536",
                      "id": 27577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6289:3:111",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "src": "6285:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 27606,
                  "initializationExpression": {
                    "assignments": [
                      27573
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 27573,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 27606,
                        "src": "6270:9:111",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 27572,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6270:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 27575,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 27574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6282:1:111",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6270:13:111"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 27584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 27579,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27573,
                        "src": "6294:1:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 27582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6304:1:111",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 27580,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27573,
                            "src": "6298:1:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 27581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 203,
                          "src": "6298:5:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 27583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6298:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6294:12:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 27585,
                    "nodeType": "ExpressionStatement",
                    "src": "6294:12:111"
                  },
                  "nodeType": "ForStatement",
                  "src": "6265:114:111"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 27607,
                    "name": "res",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27565,
                    "src": "6391:3:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 27563,
                  "id": 27608,
                  "nodeType": "Return",
                  "src": "6384:10:111"
                }
              ]
            },
            "documentation": "@notice Counts the number of set bits (Hamming weight).\n@param v Bitmap.\n@return Number of set bits.",
            "id": 27610,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "countSetBits",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27559,
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "scope": 27610,
                  "src": "6174:9:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27558,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6174:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6173:11:111"
            },
            "returnParameters": {
              "id": 27563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27562,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 27610,
                  "src": "6208:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27561,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6208:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6207:9:111"
            },
            "scope": 27611,
            "src": "6152:247:111",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 27612,
        "src": "225:6176:111"
      }
    ],
    "src": "0:6402:111"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/governance/DoubleSigningSlasher.sol",
      "exportedSymbols": {
        "DoubleSigningSlasher": [
          27611
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".13"
          ]
        },
        "id": 27238,
        "name": "PragmaDirective",
        "src": "0:24:111"
      },
      {
        "attributes": {
          "SourceUnit": 364,
          "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
          "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
          "scope": 27612,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 27239,
        "name": "ImportDirective",
        "src": "26:59:111"
      },
      {
        "attributes": {
          "SourceUnit": 14595,
          "absolutePath": "project:/contracts/common/interfaces/ICeloVersionedContract.sol",
          "file": "../common/interfaces/ICeloVersionedContract.sol",
          "scope": 27612,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 27240,
        "name": "ImportDirective",
        "src": "86:57:111"
      },
      {
        "attributes": {
          "SourceUnit": 42494,
          "absolutePath": "project:/contracts/governance/SlasherUtil.sol",
          "file": "./SlasherUtil.sol",
          "scope": 27612,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 27241,
        "name": "ImportDirective",
        "src": "145:27:111"
      },
      {
        "attributes": {
          "SourceUnit": 1631,
          "absolutePath": "project:/contracts-0.8/common/IsL2Check.sol",
          "file": "../../contracts-0.8/common/IsL2Check.sol",
          "scope": 27612,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 27242,
        "name": "ImportDirective",
        "src": "173:50:111"
      },
      {
        "attributes": {
          "contractDependencies": [
            26,
            481,
            1630,
            9570,
            13059,
            13582,
            14594,
            42493
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            27611,
            42493,
            13059,
            1630,
            13582,
            9570,
            481,
            26,
            14594
          ],
          "name": "DoubleSigningSlasher",
          "scope": 27612
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ICeloVersionedContract",
                  "referencedDeclaration": 14594,
                  "type": "contract ICeloVersionedContract"
                },
                "id": 27243,
                "name": "UserDefinedTypeName",
                "src": "258:22:111"
              }
            ],
            "id": 27244,
            "name": "InheritanceSpecifier",
            "src": "258:22:111"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "SlasherUtil",
                  "referencedDeclaration": 42493,
                  "type": "contract SlasherUtil"
                },
                "id": 27245,
                "name": "UserDefinedTypeName",
                "src": "282:11:111"
              }
            ],
            "id": 27246,
            "name": "InheritanceSpecifier",
            "src": "282:11:111"
          },
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "SafeMath",
                  "referencedDeclaration": 363,
                  "type": "library SafeMath"
                },
                "id": 27247,
                "name": "UserDefinedTypeName",
                "src": "304:8:111"
              },
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 27248,
                "name": "ElementaryTypeName",
                "src": "317:7:111"
              }
            ],
            "id": 27249,
            "name": "UsingForDirective",
            "src": "298:27:111"
          },
          {
            "attributes": {
              "constant": false,
              "name": "isSlashed",
              "scope": 27611,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => mapping(bytes32 => bool))",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => mapping(bytes32 => bool))"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 27250,
                    "name": "ElementaryTypeName",
                    "src": "416:7:111"
                  },
                  {
                    "attributes": {
                      "type": "mapping(bytes32 => bool)"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 27251,
                        "name": "ElementaryTypeName",
                        "src": "435:7:111"
                      },
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 27252,
                        "name": "ElementaryTypeName",
                        "src": "446:4:111"
                      }
                    ],
                    "id": 27253,
                    "name": "Mapping",
                    "src": "427:24:111"
                  }
                ],
                "id": 27254,
                "name": "Mapping",
                "src": "408:44:111"
              }
            ],
            "id": 27255,
            "name": "VariableDeclaration",
            "src": "408:54:111"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "SlashingIncentivesSet"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "penalty",
                      "scope": 27261,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 27256,
                        "name": "ElementaryTypeName",
                        "src": "495:7:111"
                      }
                    ],
                    "id": 27257,
                    "name": "VariableDeclaration",
                    "src": "495:15:111"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "reward",
                      "scope": 27261,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 27258,
                        "name": "ElementaryTypeName",
                        "src": "512:7:111"
                      }
                    ],
                    "id": 27259,
                    "name": "VariableDeclaration",
                    "src": "512:14:111"
                  }
                ],
                "id": 27260,
                "name": "ParameterList",
                "src": "494:33:111"
              }
            ],
            "id": 27261,
            "name": "EventDefinition",
            "src": "467:61:111"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "DoubleSigningSlashPerformed"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "validator",
                      "scope": 27267,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 27262,
                        "name": "ElementaryTypeName",
                        "src": "565:7:111"
                      }
                    ],
                    "id": 27263,
                    "name": "VariableDeclaration",
                    "src": "565:25:111"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "blockNumber",
                      "scope": 27267,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 27264,
                        "name": "ElementaryTypeName",
                        "src": "592:7:111"
                      }
                    ],
                    "id": 27265,
                    "name": "VariableDeclaration",
                    "src": "592:27:111"
                  }
                ],
                "id": 27266,
                "name": "ParameterList",
                "src": "564:56:111"
              }
            ],
            "id": 27267,
            "name": "EventDefinition",
            "src": "531:90:111"
          },
          {
            "attributes": {
              "documentation": "@notice Sets initialized == true on implementation contracts\n@param test Set to true to skip implementation initialization",
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 27611,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "test",
                      "scope": 27276,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 27268,
                        "name": "ElementaryTypeName",
                        "src": "782:4:111"
                      }
                    ],
                    "id": 27269,
                    "name": "VariableDeclaration",
                    "src": "782:9:111"
                  }
                ],
                "id": 27270,
                "name": "ParameterList",
                "src": "781:11:111"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 27274,
                "name": "ParameterList",
                "src": "818:0:111"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 42493,
                      "type": "type(contract SlasherUtil)",
                      "value": "SlasherUtil"
                    },
                    "id": 27271,
                    "name": "Identifier",
                    "src": "800:11:111"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 27269,
                      "type": "bool",
                      "value": "test"
                    },
                    "id": 27272,
                    "name": "Identifier",
                    "src": "812:4:111"
                  }
                ],
                "id": 27273,
                "name": "ModifierInvocation",
                "src": "800:17:111"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 27275,
                "name": "Block",
                "src": "818:2:111"
              }
            ],
            "id": 27276,
            "name": "FunctionDefinition",
            "src": "770:50:111"
          },
          {
            "attributes": {
              "documentation": "@notice Used in place of the constructor to allow the contract to be upgradable via proxy.\n@param registryAddress The address of the registry core smart contract.\n@param _penalty Penalty for the slashed signer.\n@param _reward Reward that the observer gets.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "initialize",
              "scope": 27611,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "registryAddress",
                      "scope": 27302,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 27277,
                        "name": "ElementaryTypeName",
                        "src": "1138:7:111"
                      }
                    ],
                    "id": 27278,
                    "name": "VariableDeclaration",
                    "src": "1138:23:111"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_penalty",
                      "scope": 27302,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 27279,
                        "name": "ElementaryTypeName",
                        "src": "1167:7:111"
                      }
                    ],
                    "id": 27280,
                    "name": "VariableDeclaration",
                    "src": "1167:16:111"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_reward",
                      "scope": 27302,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 27281,
                        "name": "ElementaryTypeName",
                        "src": "1189:7:111"
                      }
                    ],
                    "id": 27282,
                    "name": "VariableDeclaration",
                    "src": "1189:15:111"
                  }
                ],
                "id": 27283,
                "name": "ParameterList",
                "src": "1132:76:111"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 27286,
                "name": "ParameterList",
                "src": "1230:0:111"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 9555,
                      "type": "modifier ()",
                      "value": "initializer"
                    },
                    "id": 27284,
                    "name": "Identifier",
                    "src": "1218:11:111"
                  }
                ],
                "id": 27285,
                "name": "ModifierInvocation",
                "src": "1218:11:111"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 480,
                              "type": "function (address)",
                              "value": "_transferOwnership"
                            },
                            "id": 27287,
                            "name": "Identifier",
                            "src": "1236:18:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 59923,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 27288,
                                "name": "Identifier",
                                "src": "1255:3:111"
                              }
                            ],
                            "id": 27289,
                            "name": "MemberAccess",
                            "src": "1255:10:111"
                          }
                        ],
                        "id": 27290,
                        "name": "FunctionCall",
                        "src": "1236:30:111"
                      }
                    ],
                    "id": 27291,
                    "name": "ExpressionStatement",
                    "src": "1236:30:111"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 13334,
                              "type": "function (address)",
                              "value": "setRegistry"
                            },
                            "id": 27292,
                            "name": "Identifier",
                            "src": "1272:11:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27278,
                              "type": "address",
                              "value": "registryAddress"
                            },
                            "id": 27293,
                            "name": "Identifier",
                            "src": "1284:15:111"
                          }
                        ],
                        "id": 27294,
                        "name": "FunctionCall",
                        "src": "1272:28:111"
                      }
                    ],
                    "id": 27295,
                    "name": "ExpressionStatement",
                    "src": "1272:28:111"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 42360,
                              "type": "function (uint256,uint256)",
                              "value": "setSlashingIncentives"
                            },
                            "id": 27296,
                            "name": "Identifier",
                            "src": "1306:21:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27280,
                              "type": "uint256",
                              "value": "_penalty"
                            },
                            "id": 27297,
                            "name": "Identifier",
                            "src": "1328:8:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27282,
                              "type": "uint256",
                              "value": "_reward"
                            },
                            "id": 27298,
                            "name": "Identifier",
                            "src": "1338:7:111"
                          }
                        ],
                        "id": 27299,
                        "name": "FunctionCall",
                        "src": "1306:40:111"
                      }
                    ],
                    "id": 27300,
                    "name": "ExpressionStatement",
                    "src": "1306:40:111"
                  }
                ],
                "id": 27301,
                "name": "Block",
                "src": "1230:121:111"
              }
            ],
            "id": 27302,
            "name": "FunctionDefinition",
            "src": "1113:238:111"
          },
          {
            "attributes": {
              "documentation": "@notice Returns the storage, major, minor, and patch version of the contract.\n@return Storage version of the contract.\n@return Major version of the contract.\n@return Minor version of the contract.\n@return Patch version of the contract.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getVersionNumber",
              "scope": 27611,
              "stateMutability": "pure",
              "superFunction": 14593,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 27303,
                "name": "ParameterList",
                "src": "1653:2:111"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 27320,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 27304,
                        "name": "ElementaryTypeName",
                        "src": "1679:7:111"
                      }
                    ],
                    "id": 27305,
                    "name": "VariableDeclaration",
                    "src": "1679:7:111"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 27320,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 27306,
                        "name": "ElementaryTypeName",
                        "src": "1688:7:111"
                      }
                    ],
                    "id": 27307,
                    "name": "VariableDeclaration",
                    "src": "1688:7:111"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 27320,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 27308,
                        "name": "ElementaryTypeName",
                        "src": "1697:7:111"
                      }
                    ],
                    "id": 27309,
                    "name": "VariableDeclaration",
                    "src": "1697:7:111"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 27320,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 27310,
                        "name": "ElementaryTypeName",
                        "src": "1706:7:111"
                      }
                    ],
                    "id": 27311,
                    "name": "VariableDeclaration",
                    "src": "1706:7:111"
                  }
                ],
                "id": 27312,
                "name": "ParameterList",
                "src": "1678:36:111"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 27312
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "type": "tuple(int_const 1,int_const 1,int_const 1,int_const 1)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 27313,
                            "name": "Literal",
                            "src": "1729:1:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 27314,
                            "name": "Literal",
                            "src": "1732:1:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 27315,
                            "name": "Literal",
                            "src": "1735:1:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 27316,
                            "name": "Literal",
                            "src": "1738:1:111"
                          }
                        ],
                        "id": 27317,
                        "name": "TupleExpression",
                        "src": "1728:12:111"
                      }
                    ],
                    "id": 27318,
                    "name": "Return",
                    "src": "1721:19:111"
                  }
                ],
                "id": 27319,
                "name": "Block",
                "src": "1715:30:111"
              }
            ],
            "id": 27320,
            "name": "FunctionDefinition",
            "src": "1628:117:111"
          },
          {
            "attributes": {
              "documentation": "@notice Requires that `eval` returns true and that this evidence has not\nalready been used to slash `signer`.\nIf so, fetches the `account` associated with `signer` and the group that\n`signer` was a member of during the corresponding epoch.\nThen, calls `LockedGold.slash` on both the validator and group accounts.\nCalls `Validators.removeSlashedMember` to remove the validator from its\ncurrent group if it is a member of one.\nFinally, stores that hash(signer, blockNumber) has been slashed.\n@param signer The signer to be slashed.\n@param index Validator index at the block.\n@param headerA First double signed block header.\n@param headerB Second double signed block header.\n@param groupMembershipHistoryIndex Group membership index from where the group should be found.\n@param validatorElectionLessers Lesser pointers for validator slashing.\n@param validatorElectionGreaters Greater pointers for validator slashing.\n@param validatorElectionIndices Vote indices for validator slashing.\n@param groupElectionLessers Lesser pointers for group slashing.\n@param groupElectionGreaters Greater pointers for group slashing.\n@param groupElectionIndices Vote indices for group slashing.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "slash",
              "scope": 27611,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "signer",
                      "scope": 27400,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 27321,
                        "name": "ElementaryTypeName",
                        "src": "3050:7:111"
                      }
                    ],
                    "id": 27322,
                    "name": "VariableDeclaration",
                    "src": "3050:14:111"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "index",
                      "scope": 27400,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 27323,
                        "name": "ElementaryTypeName",
                        "src": "3070:7:111"
                      }
                    ],
                    "id": 27324,
                    "name": "VariableDeclaration",
                    "src": "3070:13:111"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "headerA",
                      "scope": 27400,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 27325,
                        "name": "ElementaryTypeName",
                        "src": "3089:5:111"
                      }
                    ],
                    "id": 27326,
                    "name": "VariableDeclaration",
                    "src": "3089:20:111"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "headerB",
                      "scope": 27400,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 27327,
                        "name": "ElementaryTypeName",
                        "src": "3115:5:111"
                      }
                    ],
                    "id": 27328,
                    "name": "VariableDeclaration",
                    "src": "3115:20:111"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "groupMembershipHistoryIndex",
                      "scope": 27400,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 27329,
                        "name": "ElementaryTypeName",
                        "src": "3141:7:111"
                      }
                    ],
                    "id": 27330,
                    "name": "VariableDeclaration",
                    "src": "3141:35:111"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "validatorElectionLessers",
                      "scope": 27400,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "address[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "address[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 27331,
                            "name": "ElementaryTypeName",
                            "src": "3182:7:111"
                          }
                        ],
                        "id": 27332,
                        "name": "ArrayTypeName",
                        "src": "3182:9:111"
                      }
                    ],
                    "id": 27333,
                    "name": "VariableDeclaration",
                    "src": "3182:41:111"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "validatorElectionGreaters",
                      "scope": 27400,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "address[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "address[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 27334,
                            "name": "ElementaryTypeName",
                            "src": "3229:7:111"
                          }
                        ],
                        "id": 27335,
                        "name": "ArrayTypeName",
                        "src": "3229:9:111"
                      }
                    ],
                    "id": 27336,
                    "name": "VariableDeclaration",
                    "src": "3229:42:111"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "validatorElectionIndices",
                      "scope": 27400,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 27337,
                            "name": "ElementaryTypeName",
                            "src": "3277:7:111"
                          }
                        ],
                        "id": 27338,
                        "name": "ArrayTypeName",
                        "src": "3277:9:111"
                      }
                    ],
                    "id": 27339,
                    "name": "VariableDeclaration",
                    "src": "3277:41:111"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "groupElectionLessers",
                      "scope": 27400,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "address[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "address[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 27340,
                            "name": "ElementaryTypeName",
                            "src": "3324:7:111"
                          }
                        ],
                        "id": 27341,
                        "name": "ArrayTypeName",
                        "src": "3324:9:111"
                      }
                    ],
                    "id": 27342,
                    "name": "VariableDeclaration",
                    "src": "3324:37:111"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "groupElectionGreaters",
                      "scope": 27400,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "address[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "address[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 27343,
                            "name": "ElementaryTypeName",
                            "src": "3367:7:111"
                          }
                        ],
                        "id": 27344,
                        "name": "ArrayTypeName",
                        "src": "3367:9:111"
                      }
                    ],
                    "id": 27345,
                    "name": "VariableDeclaration",
                    "src": "3367:38:111"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "groupElectionIndices",
                      "scope": 27400,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 27346,
                            "name": "ElementaryTypeName",
                            "src": "3411:7:111"
                          }
                        ],
                        "id": 27347,
                        "name": "ArrayTypeName",
                        "src": "3411:9:111"
                      }
                    ],
                    "id": 27348,
                    "name": "VariableDeclaration",
                    "src": "3411:37:111"
                  }
                ],
                "id": 27349,
                "name": "ParameterList",
                "src": "3044:408:111"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 27352,
                "name": "ParameterList",
                "src": "3467:0:111"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1585,
                      "type": "modifier ()",
                      "value": "onlyL1"
                    },
                    "id": 27350,
                    "name": "Identifier",
                    "src": "3460:6:111"
                  }
                ],
                "id": 27351,
                "name": "ModifierInvocation",
                "src": "3460:6:111"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27557,
                              "type": "function (address,bytes memory)",
                              "value": "checkIfAlreadySlashed"
                            },
                            "id": 27353,
                            "name": "Identifier",
                            "src": "3473:21:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27322,
                              "type": "address",
                              "value": "signer"
                            },
                            "id": 27354,
                            "name": "Identifier",
                            "src": "3495:6:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27326,
                              "type": "bytes memory",
                              "value": "headerA"
                            },
                            "id": 27355,
                            "name": "Identifier",
                            "src": "3503:7:111"
                          }
                        ],
                        "id": 27356,
                        "name": "FunctionCall",
                        "src": "3473:38:111"
                      }
                    ],
                    "id": 27357,
                    "name": "ExpressionStatement",
                    "src": "3473:38:111"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27557,
                              "type": "function (address,bytes memory)",
                              "value": "checkIfAlreadySlashed"
                            },
                            "id": 27358,
                            "name": "Identifier",
                            "src": "3517:21:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27322,
                              "type": "address",
                              "value": "signer"
                            },
                            "id": 27359,
                            "name": "Identifier",
                            "src": "3539:6:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27328,
                              "type": "bytes memory",
                              "value": "headerB"
                            },
                            "id": 27360,
                            "name": "Identifier",
                            "src": "3547:7:111"
                          }
                        ],
                        "id": 27361,
                        "name": "FunctionCall",
                        "src": "3517:38:111"
                      }
                    ],
                    "id": 27362,
                    "name": "ExpressionStatement",
                    "src": "3517:38:111"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        27364
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "blockNumber",
                          "scope": 27399,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 27363,
                            "name": "ElementaryTypeName",
                            "src": "3561:7:111"
                          }
                        ],
                        "id": 27364,
                        "name": "VariableDeclaration",
                        "src": "3561:19:111"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27525,
                              "type": "function (address,uint256,bytes memory,bytes memory) view returns (uint256)",
                              "value": "checkForDoubleSigning"
                            },
                            "id": 27365,
                            "name": "Identifier",
                            "src": "3583:21:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27322,
                              "type": "address",
                              "value": "signer"
                            },
                            "id": 27366,
                            "name": "Identifier",
                            "src": "3605:6:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27324,
                              "type": "uint256",
                              "value": "index"
                            },
                            "id": 27367,
                            "name": "Identifier",
                            "src": "3613:5:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27326,
                              "type": "bytes memory",
                              "value": "headerA"
                            },
                            "id": 27368,
                            "name": "Identifier",
                            "src": "3620:7:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27328,
                              "type": "bytes memory",
                              "value": "headerB"
                            },
                            "id": 27369,
                            "name": "Identifier",
                            "src": "3629:7:111"
                          }
                        ],
                        "id": 27370,
                        "name": "FunctionCall",
                        "src": "3583:54:111"
                      }
                    ],
                    "id": 27371,
                    "name": "VariableDeclarationStatement",
                    "src": "3561:76:111"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        27373
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "validator",
                          "scope": 27399,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 27372,
                            "name": "ElementaryTypeName",
                            "src": "3643:7:111"
                          }
                        ],
                        "id": 27373,
                        "name": "VariableDeclaration",
                        "src": "3643:17:111"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "address",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "signerToAccount",
                              "referencedDeclaration": 14366,
                              "type": "function (address) view external returns (address)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "contract IAccounts",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 13347,
                                      "type": "function () view returns (contract IAccounts)",
                                      "value": "getAccounts"
                                    },
                                    "id": 27374,
                                    "name": "Identifier",
                                    "src": "3663:11:111"
                                  }
                                ],
                                "id": 27375,
                                "name": "FunctionCall",
                                "src": "3663:13:111"
                              }
                            ],
                            "id": 27376,
                            "name": "MemberAccess",
                            "src": "3663:29:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27322,
                              "type": "address",
                              "value": "signer"
                            },
                            "id": 27377,
                            "name": "Identifier",
                            "src": "3693:6:111"
                          }
                        ],
                        "id": 27378,
                        "name": "FunctionCall",
                        "src": "3663:37:111"
                      }
                    ],
                    "id": 27379,
                    "name": "VariableDeclarationStatement",
                    "src": "3643:57:111"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 42492,
                              "type": "function (address,address,uint256,uint256,address[] memory,address[] memory,uint256[] memory,address[] memory,address[] memory,uint256[] memory)",
                              "value": "performSlashing"
                            },
                            "id": 27380,
                            "name": "Identifier",
                            "src": "3706:15:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27373,
                              "type": "address",
                              "value": "validator"
                            },
                            "id": 27381,
                            "name": "Identifier",
                            "src": "3729:9:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 59923,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 27382,
                                "name": "Identifier",
                                "src": "3746:3:111"
                              }
                            ],
                            "id": 27383,
                            "name": "MemberAccess",
                            "src": "3746:10:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27364,
                              "type": "uint256",
                              "value": "blockNumber"
                            },
                            "id": 27384,
                            "name": "Identifier",
                            "src": "3764:11:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27330,
                              "type": "uint256",
                              "value": "groupMembershipHistoryIndex"
                            },
                            "id": 27385,
                            "name": "Identifier",
                            "src": "3783:27:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27333,
                              "type": "address[] memory",
                              "value": "validatorElectionLessers"
                            },
                            "id": 27386,
                            "name": "Identifier",
                            "src": "3818:24:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27336,
                              "type": "address[] memory",
                              "value": "validatorElectionGreaters"
                            },
                            "id": 27387,
                            "name": "Identifier",
                            "src": "3850:25:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27339,
                              "type": "uint256[] memory",
                              "value": "validatorElectionIndices"
                            },
                            "id": 27388,
                            "name": "Identifier",
                            "src": "3883:24:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27342,
                              "type": "address[] memory",
                              "value": "groupElectionLessers"
                            },
                            "id": 27389,
                            "name": "Identifier",
                            "src": "3915:20:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27345,
                              "type": "address[] memory",
                              "value": "groupElectionGreaters"
                            },
                            "id": 27390,
                            "name": "Identifier",
                            "src": "3943:21:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27348,
                              "type": "uint256[] memory",
                              "value": "groupElectionIndices"
                            },
                            "id": 27391,
                            "name": "Identifier",
                            "src": "3972:20:111"
                          }
                        ],
                        "id": 27392,
                        "name": "FunctionCall",
                        "src": "3706:292:111"
                      }
                    ],
                    "id": 27393,
                    "name": "ExpressionStatement",
                    "src": "3706:292:111"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27267,
                              "type": "function (address,uint256)",
                              "value": "DoubleSigningSlashPerformed"
                            },
                            "id": 27394,
                            "name": "Identifier",
                            "src": "4009:27:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27373,
                              "type": "address",
                              "value": "validator"
                            },
                            "id": 27395,
                            "name": "Identifier",
                            "src": "4037:9:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27364,
                              "type": "uint256",
                              "value": "blockNumber"
                            },
                            "id": 27396,
                            "name": "Identifier",
                            "src": "4048:11:111"
                          }
                        ],
                        "id": 27397,
                        "name": "FunctionCall",
                        "src": "4009:51:111"
                      }
                    ],
                    "id": 27398,
                    "name": "EmitStatement",
                    "src": "4004:56:111"
                  }
                ],
                "id": 27399,
                "name": "Block",
                "src": "3467:598:111"
              }
            ],
            "id": 27400,
            "name": "FunctionDefinition",
            "src": "3030:1035:111"
          },
          {
            "attributes": {
              "documentation": "@notice Given two RLP encoded blocks, calls into precompiles to require that\nthe two block hashes are different, have the same height, have a\nquorum of signatures, and that `signer` was part of the quorum.\n@param signer The signer to be slashed.\n@param index Validator index at the block.\n@param headerA First double signed block header.\n@param headerB Second double signed block header.\n@return Block number where double signing occured. Throws if no double signing is detected.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "checkForDoubleSigning",
              "scope": 27611,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "signer",
                      "scope": 27525,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 27401,
                        "name": "ElementaryTypeName",
                        "src": "4637:7:111"
                      }
                    ],
                    "id": 27402,
                    "name": "VariableDeclaration",
                    "src": "4637:14:111"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "index",
                      "scope": 27525,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 27403,
                        "name": "ElementaryTypeName",
                        "src": "4657:7:111"
                      }
                    ],
                    "id": 27404,
                    "name": "VariableDeclaration",
                    "src": "4657:13:111"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "headerA",
                      "scope": 27525,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 27405,
                        "name": "ElementaryTypeName",
                        "src": "4676:5:111"
                      }
                    ],
                    "id": 27406,
                    "name": "VariableDeclaration",
                    "src": "4676:20:111"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "headerB",
                      "scope": 27525,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 27407,
                        "name": "ElementaryTypeName",
                        "src": "4702:5:111"
                      }
                    ],
                    "id": 27408,
                    "name": "VariableDeclaration",
                    "src": "4702:20:111"
                  }
                ],
                "id": 27409,
                "name": "ParameterList",
                "src": "4631:95:111"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 27525,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 27412,
                        "name": "ElementaryTypeName",
                        "src": "4755:7:111"
                      }
                    ],
                    "id": 27413,
                    "name": "VariableDeclaration",
                    "src": "4755:7:111"
                  }
                ],
                "id": 27414,
                "name": "ParameterList",
                "src": "4754:9:111"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1585,
                      "type": "modifier ()",
                      "value": "onlyL1"
                    },
                    "id": 27410,
                    "name": "Identifier",
                    "src": "4739:6:111"
                  }
                ],
                "id": 27411,
                "name": "ModifierInvocation",
                "src": "4739:6:111"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_7c275c2889dc686cb8720d0d54bc75b6926cf0cae6a6242008808575a3adcef1",
                                  "typeString": "literal_string \"Block hashes have to be different\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59926,
                                59927
                              ],
                              "referencedDeclaration": 59927,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 27415,
                            "name": "Identifier",
                            "src": "4770:7:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "bytes32",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 12871,
                                      "type": "function (bytes memory) view returns (bytes32)",
                                      "value": "hashHeader"
                                    },
                                    "id": 27416,
                                    "name": "Identifier",
                                    "src": "4778:10:111"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 27406,
                                      "type": "bytes memory",
                                      "value": "headerA"
                                    },
                                    "id": 27417,
                                    "name": "Identifier",
                                    "src": "4789:7:111"
                                  }
                                ],
                                "id": 27418,
                                "name": "FunctionCall",
                                "src": "4778:19:111"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "bytes32",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 12871,
                                      "type": "function (bytes memory) view returns (bytes32)",
                                      "value": "hashHeader"
                                    },
                                    "id": 27419,
                                    "name": "Identifier",
                                    "src": "4801:10:111"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 27408,
                                      "type": "bytes memory",
                                      "value": "headerB"
                                    },
                                    "id": 27420,
                                    "name": "Identifier",
                                    "src": "4812:7:111"
                                  }
                                ],
                                "id": 27421,
                                "name": "FunctionCall",
                                "src": "4801:19:111"
                              }
                            ],
                            "id": 27422,
                            "name": "BinaryOperation",
                            "src": "4778:42:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "426c6f636b20686173686573206861766520746f20626520646966666572656e74",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Block hashes have to be different\"",
                              "value": "Block hashes have to be different"
                            },
                            "id": 27423,
                            "name": "Literal",
                            "src": "4822:35:111"
                          }
                        ],
                        "id": 27424,
                        "name": "FunctionCall",
                        "src": "4770:88:111"
                      }
                    ],
                    "id": 27425,
                    "name": "ExpressionStatement",
                    "src": "4770:88:111"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        27427
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "blockNumber",
                          "scope": 27524,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 27426,
                            "name": "ElementaryTypeName",
                            "src": "4864:7:111"
                          }
                        ],
                        "id": 27427,
                        "name": "VariableDeclaration",
                        "src": "4864:19:111"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 12833,
                              "type": "function (bytes memory) view returns (uint256)",
                              "value": "getBlockNumberFromHeader"
                            },
                            "id": 27428,
                            "name": "Identifier",
                            "src": "4886:24:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27406,
                              "type": "bytes memory",
                              "value": "headerA"
                            },
                            "id": 27429,
                            "name": "Identifier",
                            "src": "4911:7:111"
                          }
                        ],
                        "id": 27430,
                        "name": "FunctionCall",
                        "src": "4886:33:111"
                      }
                    ],
                    "id": 27431,
                    "name": "VariableDeclarationStatement",
                    "src": "4864:55:111"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_96dd19feaf254839e03819a3b1764a18617bba8aba2dbfedb0c1215f10bf0312",
                                  "typeString": "literal_string \"Block headers are from different height\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59926,
                                59927
                              ],
                              "referencedDeclaration": 59927,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 27432,
                            "name": "Identifier",
                            "src": "4925:7:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 27427,
                                  "type": "uint256",
                                  "value": "blockNumber"
                                },
                                "id": 27433,
                                "name": "Identifier",
                                "src": "4940:11:111"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 12833,
                                      "type": "function (bytes memory) view returns (uint256)",
                                      "value": "getBlockNumberFromHeader"
                                    },
                                    "id": 27434,
                                    "name": "Identifier",
                                    "src": "4955:24:111"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 27408,
                                      "type": "bytes memory",
                                      "value": "headerB"
                                    },
                                    "id": 27435,
                                    "name": "Identifier",
                                    "src": "4980:7:111"
                                  }
                                ],
                                "id": 27436,
                                "name": "FunctionCall",
                                "src": "4955:33:111"
                              }
                            ],
                            "id": 27437,
                            "name": "BinaryOperation",
                            "src": "4940:48:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "426c6f636b2068656164657273206172652066726f6d20646966666572656e7420686569676874",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Block headers are from different height\"",
                              "value": "Block headers are from different height"
                            },
                            "id": 27438,
                            "name": "Literal",
                            "src": "4996:41:111"
                          }
                        ],
                        "id": 27439,
                        "name": "FunctionCall",
                        "src": "4925:118:111"
                      }
                    ],
                    "id": 27440,
                    "name": "ExpressionStatement",
                    "src": "4925:118:111"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_99a49fec8ee0bb913c0c3a07cf68280d812f5400720672ede22b22a3153c45df",
                                  "typeString": "literal_string \"Bad validator index\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59926,
                                59927
                              ],
                              "referencedDeclaration": 59927,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 27441,
                            "name": "Identifier",
                            "src": "5049:7:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 27404,
                                  "type": "uint256",
                                  "value": "index"
                                },
                                "id": 27442,
                                "name": "Identifier",
                                "src": "5057:5:111"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 12763,
                                      "type": "function (uint256) view returns (uint256)",
                                      "value": "numberValidatorsInSet"
                                    },
                                    "id": 27443,
                                    "name": "Identifier",
                                    "src": "5065:21:111"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 27427,
                                      "type": "uint256",
                                      "value": "blockNumber"
                                    },
                                    "id": 27444,
                                    "name": "Identifier",
                                    "src": "5087:11:111"
                                  }
                                ],
                                "id": 27445,
                                "name": "FunctionCall",
                                "src": "5065:34:111"
                              }
                            ],
                            "id": 27446,
                            "name": "BinaryOperation",
                            "src": "5057:42:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4261642076616c696461746f7220696e646578",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Bad validator index\"",
                              "value": "Bad validator index"
                            },
                            "id": 27447,
                            "name": "Literal",
                            "src": "5101:21:111"
                          }
                        ],
                        "id": 27448,
                        "name": "FunctionCall",
                        "src": "5049:74:111"
                      }
                    ],
                    "id": 27449,
                    "name": "ExpressionStatement",
                    "src": "5049:74:111"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_57bd14ef8908e66649faa619ff459e8d84d24af75ba18d344f0eb53d1247be3e",
                                  "typeString": "literal_string \"Wasn't a signer with given index\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59926,
                                59927
                              ],
                              "referencedDeclaration": 59927,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 27450,
                            "name": "Identifier",
                            "src": "5129:7:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 27402,
                                  "type": "address",
                                  "value": "signer"
                                },
                                "id": 27451,
                                "name": "Identifier",
                                "src": "5144:6:111"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 12686,
                                      "type": "function (uint256,uint256) view returns (address)",
                                      "value": "validatorSignerAddressFromSet"
                                    },
                                    "id": 27452,
                                    "name": "Identifier",
                                    "src": "5154:29:111"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 27404,
                                      "type": "uint256",
                                      "value": "index"
                                    },
                                    "id": 27453,
                                    "name": "Identifier",
                                    "src": "5184:5:111"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 27427,
                                      "type": "uint256",
                                      "value": "blockNumber"
                                    },
                                    "id": 27454,
                                    "name": "Identifier",
                                    "src": "5191:11:111"
                                  }
                                ],
                                "id": 27455,
                                "name": "FunctionCall",
                                "src": "5154:49:111"
                              }
                            ],
                            "id": 27456,
                            "name": "BinaryOperation",
                            "src": "5144:59:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "5761736e27742061207369676e6572207769746820676976656e20696e646578",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Wasn't a signer with given index\"",
                              "value": "Wasn't a signer with given index"
                            },
                            "id": 27457,
                            "name": "Literal",
                            "src": "5211:34:111"
                          }
                        ],
                        "id": 27458,
                        "name": "FunctionCall",
                        "src": "5129:122:111"
                      }
                    ],
                    "id": 27459,
                    "name": "ExpressionStatement",
                    "src": "5129:122:111"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        27461
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "mapA",
                          "scope": 27524,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 27460,
                            "name": "ElementaryTypeName",
                            "src": "5257:7:111"
                          }
                        ],
                        "id": 27461,
                        "name": "VariableDeclaration",
                        "src": "5257:12:111"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "type(uint256)",
                              "value": "uint256"
                            },
                            "id": 27462,
                            "name": "ElementaryTypeNameExpression",
                            "src": "5272:7:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes32",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 12947,
                                  "type": "function (bytes memory) view returns (bytes32)",
                                  "value": "getVerifiedSealBitmapFromHeader"
                                },
                                "id": 27463,
                                "name": "Identifier",
                                "src": "5280:31:111"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 27406,
                                  "type": "bytes memory",
                                  "value": "headerA"
                                },
                                "id": 27464,
                                "name": "Identifier",
                                "src": "5312:7:111"
                              }
                            ],
                            "id": 27465,
                            "name": "FunctionCall",
                            "src": "5280:40:111"
                          }
                        ],
                        "id": 27466,
                        "name": "FunctionCall",
                        "src": "5272:49:111"
                      }
                    ],
                    "id": 27467,
                    "name": "VariableDeclarationStatement",
                    "src": "5257:64:111"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        27469
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "mapB",
                          "scope": 27524,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 27468,
                            "name": "ElementaryTypeName",
                            "src": "5327:7:111"
                          }
                        ],
                        "id": 27469,
                        "name": "VariableDeclaration",
                        "src": "5327:12:111"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "type(uint256)",
                              "value": "uint256"
                            },
                            "id": 27470,
                            "name": "ElementaryTypeNameExpression",
                            "src": "5342:7:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes32",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 12947,
                                  "type": "function (bytes memory) view returns (bytes32)",
                                  "value": "getVerifiedSealBitmapFromHeader"
                                },
                                "id": 27471,
                                "name": "Identifier",
                                "src": "5350:31:111"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 27408,
                                  "type": "bytes memory",
                                  "value": "headerB"
                                },
                                "id": 27472,
                                "name": "Identifier",
                                "src": "5382:7:111"
                              }
                            ],
                            "id": 27473,
                            "name": "FunctionCall",
                            "src": "5350:40:111"
                          }
                        ],
                        "id": 27474,
                        "name": "FunctionCall",
                        "src": "5342:49:111"
                      }
                    ],
                    "id": 27475,
                    "name": "VariableDeclarationStatement",
                    "src": "5327:64:111"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_2fd323d1f797a03ec4a80d0e74fa4e6c078a9d8b51f1d84867e74f486dff2240",
                                  "typeString": "literal_string \"Didn't sign first block\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59926,
                                59927
                              ],
                              "referencedDeclaration": 59927,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 27476,
                            "name": "Identifier",
                            "src": "5397:7:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "&",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 27461,
                                      "type": "uint256",
                                      "value": "mapA"
                                    },
                                    "id": 27477,
                                    "name": "Identifier",
                                    "src": "5405:4:111"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "<<",
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "hexvalue": "31",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "subdenomination": null,
                                              "token": "number",
                                              "type": "int_const 1",
                                              "value": "1"
                                            },
                                            "id": 27478,
                                            "name": "Literal",
                                            "src": "5413:1:111"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 27404,
                                              "type": "uint256",
                                              "value": "index"
                                            },
                                            "id": 27479,
                                            "name": "Identifier",
                                            "src": "5418:5:111"
                                          }
                                        ],
                                        "id": 27480,
                                        "name": "BinaryOperation",
                                        "src": "5413:10:111"
                                      }
                                    ],
                                    "id": 27481,
                                    "name": "TupleExpression",
                                    "src": "5412:12:111"
                                  }
                                ],
                                "id": 27482,
                                "name": "BinaryOperation",
                                "src": "5405:19:111"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 27483,
                                "name": "Literal",
                                "src": "5428:1:111"
                              }
                            ],
                            "id": 27484,
                            "name": "BinaryOperation",
                            "src": "5405:24:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4469646e2774207369676e20666972737420626c6f636b",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Didn't sign first block\"",
                              "value": "Didn't sign first block"
                            },
                            "id": 27485,
                            "name": "Literal",
                            "src": "5431:25:111"
                          }
                        ],
                        "id": 27486,
                        "name": "FunctionCall",
                        "src": "5397:60:111"
                      }
                    ],
                    "id": 27487,
                    "name": "ExpressionStatement",
                    "src": "5397:60:111"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_cb6973d296eef450a0a2ddc89eddef67d92faa18d5b6f63b15f4bdf7b3ca060b",
                                  "typeString": "literal_string \"Didn't sign second block\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59926,
                                59927
                              ],
                              "referencedDeclaration": 59927,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 27488,
                            "name": "Identifier",
                            "src": "5463:7:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "&",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 27469,
                                      "type": "uint256",
                                      "value": "mapB"
                                    },
                                    "id": 27489,
                                    "name": "Identifier",
                                    "src": "5471:4:111"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "<<",
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "hexvalue": "31",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "subdenomination": null,
                                              "token": "number",
                                              "type": "int_const 1",
                                              "value": "1"
                                            },
                                            "id": 27490,
                                            "name": "Literal",
                                            "src": "5479:1:111"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 27404,
                                              "type": "uint256",
                                              "value": "index"
                                            },
                                            "id": 27491,
                                            "name": "Identifier",
                                            "src": "5484:5:111"
                                          }
                                        ],
                                        "id": 27492,
                                        "name": "BinaryOperation",
                                        "src": "5479:10:111"
                                      }
                                    ],
                                    "id": 27493,
                                    "name": "TupleExpression",
                                    "src": "5478:12:111"
                                  }
                                ],
                                "id": 27494,
                                "name": "BinaryOperation",
                                "src": "5471:19:111"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 27495,
                                "name": "Literal",
                                "src": "5494:1:111"
                              }
                            ],
                            "id": 27496,
                            "name": "BinaryOperation",
                            "src": "5471:24:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4469646e2774207369676e207365636f6e6420626c6f636b",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Didn't sign second block\"",
                              "value": "Didn't sign second block"
                            },
                            "id": 27497,
                            "name": "Literal",
                            "src": "5497:26:111"
                          }
                        ],
                        "id": 27498,
                        "name": "FunctionCall",
                        "src": "5463:61:111"
                      }
                    ],
                    "id": 27499,
                    "name": "ExpressionStatement",
                    "src": "5463:61:111"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_0a5af79ab6a0f711e9ae6e57b027890bf933de3c04ab31e5825e8208fce7306d",
                                  "typeString": "literal_string \"Not enough signers in the first block\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59926,
                                59927
                              ],
                              "referencedDeclaration": 59927,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 27500,
                            "name": "Identifier",
                            "src": "5530:7:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 27610,
                                      "type": "function (uint256) pure returns (uint256)",
                                      "value": "countSetBits"
                                    },
                                    "id": 27501,
                                    "name": "Identifier",
                                    "src": "5545:12:111"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 27461,
                                      "type": "uint256",
                                      "value": "mapA"
                                    },
                                    "id": 27502,
                                    "name": "Identifier",
                                    "src": "5558:4:111"
                                  }
                                ],
                                "id": 27503,
                                "name": "FunctionCall",
                                "src": "5545:18:111"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 12970,
                                      "type": "function (uint256) view returns (uint256)",
                                      "value": "minQuorumSize"
                                    },
                                    "id": 27504,
                                    "name": "Identifier",
                                    "src": "5567:13:111"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 27427,
                                      "type": "uint256",
                                      "value": "blockNumber"
                                    },
                                    "id": 27505,
                                    "name": "Identifier",
                                    "src": "5581:11:111"
                                  }
                                ],
                                "id": 27506,
                                "name": "FunctionCall",
                                "src": "5567:26:111"
                              }
                            ],
                            "id": 27507,
                            "name": "BinaryOperation",
                            "src": "5545:48:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4e6f7420656e6f756768207369676e65727320696e2074686520666972737420626c6f636b",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Not enough signers in the first block\"",
                              "value": "Not enough signers in the first block"
                            },
                            "id": 27508,
                            "name": "Literal",
                            "src": "5601:39:111"
                          }
                        ],
                        "id": 27509,
                        "name": "FunctionCall",
                        "src": "5530:116:111"
                      }
                    ],
                    "id": 27510,
                    "name": "ExpressionStatement",
                    "src": "5530:116:111"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c45f12f9ed0d604ddde3a3995dd39590ae26e2e1664a4ef8f63b5677f980a2b3",
                                  "typeString": "literal_string \"Not enough signers in the second block\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59926,
                                59927
                              ],
                              "referencedDeclaration": 59927,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 27511,
                            "name": "Identifier",
                            "src": "5652:7:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 27610,
                                      "type": "function (uint256) pure returns (uint256)",
                                      "value": "countSetBits"
                                    },
                                    "id": 27512,
                                    "name": "Identifier",
                                    "src": "5667:12:111"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 27469,
                                      "type": "uint256",
                                      "value": "mapB"
                                    },
                                    "id": 27513,
                                    "name": "Identifier",
                                    "src": "5680:4:111"
                                  }
                                ],
                                "id": 27514,
                                "name": "FunctionCall",
                                "src": "5667:18:111"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 12970,
                                      "type": "function (uint256) view returns (uint256)",
                                      "value": "minQuorumSize"
                                    },
                                    "id": 27515,
                                    "name": "Identifier",
                                    "src": "5689:13:111"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 27427,
                                      "type": "uint256",
                                      "value": "blockNumber"
                                    },
                                    "id": 27516,
                                    "name": "Identifier",
                                    "src": "5703:11:111"
                                  }
                                ],
                                "id": 27517,
                                "name": "FunctionCall",
                                "src": "5689:26:111"
                              }
                            ],
                            "id": 27518,
                            "name": "BinaryOperation",
                            "src": "5667:48:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4e6f7420656e6f756768207369676e65727320696e20746865207365636f6e6420626c6f636b",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Not enough signers in the second block\"",
                              "value": "Not enough signers in the second block"
                            },
                            "id": 27519,
                            "name": "Literal",
                            "src": "5723:40:111"
                          }
                        ],
                        "id": 27520,
                        "name": "FunctionCall",
                        "src": "5652:117:111"
                      }
                    ],
                    "id": 27521,
                    "name": "ExpressionStatement",
                    "src": "5652:117:111"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 27414
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 27427,
                          "type": "uint256",
                          "value": "blockNumber"
                        },
                        "id": 27522,
                        "name": "Identifier",
                        "src": "5782:11:111"
                      }
                    ],
                    "id": 27523,
                    "name": "Return",
                    "src": "5775:18:111"
                  }
                ],
                "id": 27524,
                "name": "Block",
                "src": "4764:1034:111"
              }
            ],
            "id": 27525,
            "name": "FunctionDefinition",
            "src": "4601:1197:111"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "checkIfAlreadySlashed",
              "scope": 27611,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "signer",
                      "scope": 27557,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 27526,
                        "name": "ElementaryTypeName",
                        "src": "5833:7:111"
                      }
                    ],
                    "id": 27527,
                    "name": "VariableDeclaration",
                    "src": "5833:14:111"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "header",
                      "scope": 27557,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 27528,
                        "name": "ElementaryTypeName",
                        "src": "5849:5:111"
                      }
                    ],
                    "id": 27529,
                    "name": "VariableDeclaration",
                    "src": "5849:19:111"
                  }
                ],
                "id": 27530,
                "name": "ParameterList",
                "src": "5832:37:111"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 27531,
                "name": "ParameterList",
                "src": "5879:0:111"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        27533
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "bhash",
                          "scope": 27556,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes32",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 27532,
                            "name": "ElementaryTypeName",
                            "src": "5885:7:111"
                          }
                        ],
                        "id": 27533,
                        "name": "VariableDeclaration",
                        "src": "5885:13:111"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 12871,
                              "type": "function (bytes memory) view returns (bytes32)",
                              "value": "hashHeader"
                            },
                            "id": 27534,
                            "name": "Identifier",
                            "src": "5901:10:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27529,
                              "type": "bytes memory",
                              "value": "header"
                            },
                            "id": 27535,
                            "name": "Identifier",
                            "src": "5912:6:111"
                          }
                        ],
                        "id": 27536,
                        "name": "FunctionCall",
                        "src": "5901:18:111"
                      }
                    ],
                    "id": 27537,
                    "name": "VariableDeclarationStatement",
                    "src": "5885:34:111"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_75f41e97fb3390ecdc2399965021eafce663917e8343f87bf83e272c0beb7256",
                                  "typeString": "literal_string \"Already slashed\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59926,
                                59927
                              ],
                              "referencedDeclaration": 59927,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 27538,
                            "name": "Identifier",
                            "src": "5925:7:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "mapping(bytes32 => bool)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 27255,
                                          "type": "mapping(address => mapping(bytes32 => bool))",
                                          "value": "isSlashed"
                                        },
                                        "id": 27539,
                                        "name": "Identifier",
                                        "src": "5934:9:111"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 27527,
                                          "type": "address",
                                          "value": "signer"
                                        },
                                        "id": 27540,
                                        "name": "Identifier",
                                        "src": "5944:6:111"
                                      }
                                    ],
                                    "id": 27541,
                                    "name": "IndexAccess",
                                    "src": "5934:17:111"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 27533,
                                      "type": "bytes32",
                                      "value": "bhash"
                                    },
                                    "id": 27542,
                                    "name": "Identifier",
                                    "src": "5952:5:111"
                                  }
                                ],
                                "id": 27543,
                                "name": "IndexAccess",
                                "src": "5934:24:111"
                              }
                            ],
                            "id": 27544,
                            "name": "UnaryOperation",
                            "src": "5933:25:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "416c726561647920736c6173686564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Already slashed\"",
                              "value": "Already slashed"
                            },
                            "id": 27545,
                            "name": "Literal",
                            "src": "5960:17:111"
                          }
                        ],
                        "id": 27546,
                        "name": "FunctionCall",
                        "src": "5925:53:111"
                      }
                    ],
                    "id": 27547,
                    "name": "ExpressionStatement",
                    "src": "5925:53:111"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "mapping(bytes32 => bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 27255,
                                      "type": "mapping(address => mapping(bytes32 => bool))",
                                      "value": "isSlashed"
                                    },
                                    "id": 27548,
                                    "name": "Identifier",
                                    "src": "5984:9:111"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 27527,
                                      "type": "address",
                                      "value": "signer"
                                    },
                                    "id": 27549,
                                    "name": "Identifier",
                                    "src": "5994:6:111"
                                  }
                                ],
                                "id": 27551,
                                "name": "IndexAccess",
                                "src": "5984:17:111"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 27533,
                                  "type": "bytes32",
                                  "value": "bhash"
                                },
                                "id": 27550,
                                "name": "Identifier",
                                "src": "6002:5:111"
                              }
                            ],
                            "id": 27552,
                            "name": "IndexAccess",
                            "src": "5984:24:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 27553,
                            "name": "Literal",
                            "src": "6011:4:111"
                          }
                        ],
                        "id": 27554,
                        "name": "Assignment",
                        "src": "5984:31:111"
                      }
                    ],
                    "id": 27555,
                    "name": "ExpressionStatement",
                    "src": "5984:31:111"
                  }
                ],
                "id": 27556,
                "name": "Block",
                "src": "5879:141:111"
              }
            ],
            "id": 27557,
            "name": "FunctionDefinition",
            "src": "5802:218:111"
          },
          {
            "attributes": {
              "documentation": "@notice Counts the number of set bits (Hamming weight).\n@param v Bitmap.\n@return Number of set bits.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "countSetBits",
              "scope": 27611,
              "stateMutability": "pure",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "v",
                      "scope": 27610,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 27558,
                        "name": "ElementaryTypeName",
                        "src": "6174:7:111"
                      }
                    ],
                    "id": 27559,
                    "name": "VariableDeclaration",
                    "src": "6174:9:111"
                  }
                ],
                "id": 27560,
                "name": "ParameterList",
                "src": "6173:11:111"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 27610,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 27561,
                        "name": "ElementaryTypeName",
                        "src": "6208:7:111"
                      }
                    ],
                    "id": 27562,
                    "name": "VariableDeclaration",
                    "src": "6208:7:111"
                  }
                ],
                "id": 27563,
                "name": "ParameterList",
                "src": "6207:9:111"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        27565
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "res",
                          "scope": 27609,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 27564,
                            "name": "ElementaryTypeName",
                            "src": "6223:7:111"
                          }
                        ],
                        "id": 27565,
                        "name": "VariableDeclaration",
                        "src": "6223:11:111"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "30",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "number",
                          "type": "int_const 0",
                          "value": "0"
                        },
                        "id": 27566,
                        "name": "Literal",
                        "src": "6237:1:111"
                      }
                    ],
                    "id": 27567,
                    "name": "VariableDeclarationStatement",
                    "src": "6223:15:111"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        27569
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "acc",
                          "scope": 27609,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 27568,
                            "name": "ElementaryTypeName",
                            "src": "6244:7:111"
                          }
                        ],
                        "id": 27569,
                        "name": "VariableDeclaration",
                        "src": "6244:11:111"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 27559,
                          "type": "uint256",
                          "value": "v"
                        },
                        "id": 27570,
                        "name": "Identifier",
                        "src": "6258:1:111"
                      }
                    ],
                    "id": 27571,
                    "name": "VariableDeclarationStatement",
                    "src": "6244:15:111"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            27573
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "name": "i",
                              "scope": 27606,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 27572,
                                "name": "ElementaryTypeName",
                                "src": "6270:7:111"
                              }
                            ],
                            "id": 27573,
                            "name": "VariableDeclaration",
                            "src": "6270:9:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 27574,
                            "name": "Literal",
                            "src": "6282:1:111"
                          }
                        ],
                        "id": 27575,
                        "name": "VariableDeclarationStatement",
                        "src": "6270:13:111"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27573,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 27576,
                            "name": "Identifier",
                            "src": "6285:1:111"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "323536",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 256",
                              "value": "256"
                            },
                            "id": 27577,
                            "name": "Literal",
                            "src": "6289:3:111"
                          }
                        ],
                        "id": 27578,
                        "name": "BinaryOperation",
                        "src": "6285:7:111"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "=",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 27573,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 27579,
                                "name": "Identifier",
                                "src": "6294:1:111"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "add",
                                      "referencedDeclaration": 203,
                                      "type": "function (uint256,uint256) pure returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 27573,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 27580,
                                        "name": "Identifier",
                                        "src": "6298:1:111"
                                      }
                                    ],
                                    "id": 27581,
                                    "name": "MemberAccess",
                                    "src": "6298:5:111"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "31",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 1",
                                      "value": "1"
                                    },
                                    "id": 27582,
                                    "name": "Literal",
                                    "src": "6304:1:111"
                                  }
                                ],
                                "id": 27583,
                                "name": "FunctionCall",
                                "src": "6298:8:111"
                              }
                            ],
                            "id": 27584,
                            "name": "Assignment",
                            "src": "6294:12:111"
                          }
                        ],
                        "id": 27585,
                        "name": "ExpressionStatement",
                        "src": "6294:12:111"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "falseBody": null
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "==",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "&",
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 27569,
                                          "type": "uint256",
                                          "value": "acc"
                                        },
                                        "id": 27586,
                                        "name": "Identifier",
                                        "src": "6320:3:111"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "31",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 1",
                                          "value": "1"
                                        },
                                        "id": 27587,
                                        "name": "Literal",
                                        "src": "6326:1:111"
                                      }
                                    ],
                                    "id": 27588,
                                    "name": "BinaryOperation",
                                    "src": "6320:7:111"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "31",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 1",
                                      "value": "1"
                                    },
                                    "id": 27589,
                                    "name": "Literal",
                                    "src": "6331:1:111"
                                  }
                                ],
                                "id": 27590,
                                "name": "BinaryOperation",
                                "src": "6320:12:111"
                              },
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "=",
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 27565,
                                          "type": "uint256",
                                          "value": "res"
                                        },
                                        "id": 27591,
                                        "name": "Identifier",
                                        "src": "6334:3:111"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "type": "uint256",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "add",
                                              "referencedDeclaration": 203,
                                              "type": "function (uint256,uint256) pure returns (uint256)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 27565,
                                                  "type": "uint256",
                                                  "value": "res"
                                                },
                                                "id": 27592,
                                                "name": "Identifier",
                                                "src": "6340:3:111"
                                              }
                                            ],
                                            "id": 27593,
                                            "name": "MemberAccess",
                                            "src": "6340:7:111"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "hexvalue": "31",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "subdenomination": null,
                                              "token": "number",
                                              "type": "int_const 1",
                                              "value": "1"
                                            },
                                            "id": 27594,
                                            "name": "Literal",
                                            "src": "6348:1:111"
                                          }
                                        ],
                                        "id": 27595,
                                        "name": "FunctionCall",
                                        "src": "6340:10:111"
                                      }
                                    ],
                                    "id": 27596,
                                    "name": "Assignment",
                                    "src": "6334:16:111"
                                  }
                                ],
                                "id": 27597,
                                "name": "ExpressionStatement",
                                "src": "6334:16:111"
                              }
                            ],
                            "id": 27598,
                            "name": "IfStatement",
                            "src": "6316:34:111"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 27569,
                                      "type": "uint256",
                                      "value": "acc"
                                    },
                                    "id": 27599,
                                    "name": "Identifier",
                                    "src": "6358:3:111"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": ">>",
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 27569,
                                          "type": "uint256",
                                          "value": "acc"
                                        },
                                        "id": 27600,
                                        "name": "Identifier",
                                        "src": "6364:3:111"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "31",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 1",
                                          "value": "1"
                                        },
                                        "id": 27601,
                                        "name": "Literal",
                                        "src": "6371:1:111"
                                      }
                                    ],
                                    "id": 27602,
                                    "name": "BinaryOperation",
                                    "src": "6364:8:111"
                                  }
                                ],
                                "id": 27603,
                                "name": "Assignment",
                                "src": "6358:14:111"
                              }
                            ],
                            "id": 27604,
                            "name": "ExpressionStatement",
                            "src": "6358:14:111"
                          }
                        ],
                        "id": 27605,
                        "name": "Block",
                        "src": "6308:71:111"
                      }
                    ],
                    "id": 27606,
                    "name": "ForStatement",
                    "src": "6265:114:111"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 27563
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 27565,
                          "type": "uint256",
                          "value": "res"
                        },
                        "id": 27607,
                        "name": "Identifier",
                        "src": "6391:3:111"
                      }
                    ],
                    "id": 27608,
                    "name": "Return",
                    "src": "6384:10:111"
                  }
                ],
                "id": 27609,
                "name": "Block",
                "src": "6217:182:111"
              }
            ],
            "id": 27610,
            "name": "FunctionDefinition",
            "src": "6152:247:111"
          }
        ],
        "id": 27611,
        "name": "ContractDefinition",
        "src": "225:6176:111"
      }
    ],
    "id": 27612,
    "name": "SourceUnit",
    "src": "0:6402:111"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.13+commit.5b0b510c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2025-05-05T17:49:51.326Z",
  "devdoc": {
    "methods": {
      "checkForDoubleSigning(address,uint256,bytes,bytes)": {
        "params": {
          "headerA": "First double signed block header.",
          "headerB": "Second double signed block header.",
          "index": "Validator index at the block.",
          "signer": "The signer to be slashed."
        },
        "return": "Block number where double signing occured. Throws if no double signing is detected."
      },
      "checkProofOfPossession(address,bytes,bytes)": {
        "details": "This function will be deprecated in L2.",
        "params": {
          "blsKey": "The BLS public key that the validator is using for consensus, should pass proof  of possession. 48 bytes.",
          "blsPop": "The BLS public key proof-of-possession, which consists of a signature on the  account address. 96 bytes.",
          "sender": "The address signed by the BLS key to generate the proof of possession."
        },
        "return": "True upon success."
      },
      "constructor": {
        "params": {
          "test": "Set to true to skip implementation initialization"
        }
      },
      "fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)": {
        "details": "This function will be deprecated in L2.",
        "params": {
          "_decimals": "precision",
          "aDenominator": "Denominator of first fraction",
          "aNumerator": "Numerator of first fraction",
          "bDenominator": "Denominator of exponentiated fraction",
          "bNumerator": "Numerator of exponentiated fraction",
          "exponent": "exponent to raise b to"
        },
        "return": "Numerator of the computed quantity (not reduced).Denominator of the computed quantity (not reduced)."
      },
      "getBlockNumberFromHeader(bytes)": {
        "details": "This function will be deprecated in L2.",
        "params": {
          "header": "RLP encoded header"
        },
        "return": "Block number."
      },
      "getEpochNumber()": {
        "details": "This function will be deprecated in L2.",
        "return": "Current epoch number."
      },
      "getEpochNumberOfBlock(uint256)": {
        "details": "This function will be deprecated in L2.",
        "params": {
          "blockNumber": "Block number where epoch number is calculated."
        },
        "return": "Epoch number."
      },
      "getEpochSize()": {
        "details": "This function will be deprecated in L2.",
        "return": "The current epoch size in blocks."
      },
      "getParentSealBitmap(uint256)": {
        "details": "This function will be deprecated in L2.",
        "params": {
          "blockNumber": "Block number to retrieve. Must be within 4 epochs of the current number."
        },
        "return": "Bitmap parent seal with set bits at indices corresponding to signing validators."
      },
      "getVerifiedSealBitmapFromHeader(bytes)": {
        "details": "This function will be deprecated in L2.",
        "params": {
          "header": "RLP encoded header"
        },
        "return": "Bitmap parent seal with set bits at indices correspoinding to signing validators."
      },
      "getVersionNumber()": {
        "return": "Storage version of the contract.Major version of the contract.Minor version of the contract.Patch version of the contract."
      },
      "groupMembershipAtBlock(address,uint256,uint256)": {
        "params": {
          "blockNumber": "Block number associated with slashing.",
          "groupMembershipHistoryIndex": "Index used for history lookup.",
          "validator": "Validator that was slashed."
        },
        "return": "Group to be slashed."
      },
      "hashHeader(bytes)": {
        "details": "This function will be deprecated in L2.",
        "params": {
          "header": "RLP encoded header"
        },
        "return": "Header hash."
      },
      "initialize(address,uint256,uint256)": {
        "params": {
          "_penalty": "Penalty for the slashed signer.",
          "_reward": "Reward that the observer gets.",
          "registryAddress": "The address of the registry core smart contract."
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "minQuorumSize(uint256)": {
        "details": "Computed in celo-blockchain as int(math.Ceil(float64(2*valSet.Size()) / 3))This function will be deprecated in L2."
      },
      "minQuorumSizeInCurrentSet()": {
        "details": "This function will be deprecated in L2.",
        "return": "Byzantine quorum of validators."
      },
      "numberValidatorsInCurrentSet()": {
        "details": "This function will be deprecated in L2.",
        "return": "Size of the current elected validator set."
      },
      "numberValidatorsInSet(uint256)": {
        "details": "This function will be deprecated in L2.",
        "params": {
          "blockNumber": "Block number to retrieve the validator set from."
        },
        "return": "Size of the validator set."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setRegistry(address)": {
        "params": {
          "registryAddress": "The address of a registry contract for routing to other contracts."
        }
      },
      "setSlashingIncentives(uint256,uint256)": {
        "params": {
          "penalty": "Penalty for the slashed signer.",
          "reward": "Reward that the observer gets."
        }
      },
      "slash(address,uint256,bytes,bytes,uint256,address[],address[],uint256[],address[],address[],uint256[])": {
        "params": {
          "groupElectionGreaters": "Greater pointers for group slashing.",
          "groupElectionIndices": "Vote indices for group slashing.",
          "groupElectionLessers": "Lesser pointers for group slashing.",
          "groupMembershipHistoryIndex": "Group membership index from where the group should be found.",
          "headerA": "First double signed block header.",
          "headerB": "Second double signed block header.",
          "index": "Validator index at the block.",
          "signer": "The signer to be slashed.",
          "validatorElectionGreaters": "Greater pointers for validator slashing.",
          "validatorElectionIndices": "Vote indices for validator slashing.",
          "validatorElectionLessers": "Lesser pointers for validator slashing."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "validatorSignerAddressFromCurrentSet(uint256)": {
        "details": "This function will be deprecated in L2.",
        "params": {
          "index": "Index of requested validator in the validator set."
        },
        "return": "Address of validator signer at the requested index."
      },
      "validatorSignerAddressFromSet(uint256,uint256)": {
        "details": "This function will be deprecated in L2.",
        "params": {
          "blockNumber": "Block number to retrieve the validator set from.",
          "index": "Index of requested validator in the validator set."
        },
        "return": "Address of validator signer at the requested index."
      }
    }
  },
  "userdoc": {
    "methods": {
      "checkForDoubleSigning(address,uint256,bytes,bytes)": {
        "notice": "Given two RLP encoded blocks, calls into precompiles to require that the two block hashes are different, have the same height, have a quorum of signatures, and that `signer` was part of the quorum."
      },
      "checkProofOfPossession(address,bytes,bytes)": {
        "notice": "Checks a BLS proof of possession."
      },
      "constructor": "Sets initialized == true on implementation contracts",
      "fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)": {
        "notice": "calculate a * b^x for fractions a, b to `decimals` precision"
      },
      "getBlockNumberFromHeader(bytes)": {
        "notice": "Parses block number out of header."
      },
      "getEpochNumber()": {
        "notice": "Returns the epoch number at a block."
      },
      "getEpochNumberOfBlock(uint256)": {
        "notice": "Returns the epoch number at a block."
      },
      "getEpochSize()": {
        "notice": "Returns the current epoch size in blocks."
      },
      "getParentSealBitmap(uint256)": {
        "notice": "Gets the parent seal bitmap from the header at the given block number."
      },
      "getVerifiedSealBitmapFromHeader(bytes)": {
        "notice": "Verifies the BLS signature on the header and returns the seal bitmap. The validator set used for verification is retrieved based on the parent hash field of the header.  If the parent hash is not in the blockchain, verification fails."
      },
      "getVersionNumber()": {
        "notice": "Returns the storage, major, minor, and patch version of the contract."
      },
      "groupMembershipAtBlock(address,uint256,uint256)": {
        "notice": "Returns the group to be slashed."
      },
      "hashHeader(bytes)": {
        "notice": "Computes hash of header."
      },
      "initialize(address,uint256,uint256)": {
        "notice": "Used in place of the constructor to allow the contract to be upgradable via proxy."
      },
      "minQuorumSize(uint256)": {
        "notice": "Returns the minimum number of required signers for a given block number."
      },
      "minQuorumSizeInCurrentSet()": {
        "notice": "Computes byzantine quorum from current validator set size"
      },
      "numberValidatorsInCurrentSet()": {
        "notice": "Gets the size of the current elected validator set."
      },
      "numberValidatorsInSet(uint256)": {
        "notice": "Gets the size of the validator set that must sign the given block number."
      },
      "setRegistry(address)": {
        "notice": "Updates the address pointing to a Registry contract."
      },
      "setSlashingIncentives(uint256,uint256)": {
        "notice": "Sets slashing incentives."
      },
      "slash(address,uint256,bytes,bytes,uint256,address[],address[],uint256[],address[],address[],uint256[])": {
        "notice": "Requires that `eval` returns true and that this evidence has not already been used to slash `signer`. If so, fetches the `account` associated with `signer` and the group that `signer` was a member of during the corresponding epoch. Then, calls `LockedGold.slash` on both the validator and group accounts. Calls `Validators.removeSlashedMember` to remove the validator from its current group if it is a member of one. Finally, stores that hash(signer, blockNumber) has been slashed."
      },
      "validatorSignerAddressFromCurrentSet(uint256)": {
        "notice": "Gets a validator signer address from the current validator set."
      },
      "validatorSignerAddressFromSet(uint256,uint256)": {
        "notice": "Gets a validator signer address from the validator set at the given block number."
      }
    }
  }
}